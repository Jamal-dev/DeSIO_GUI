2022-10-21 14:48:02 INFO     read_yaml conversion started!
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 14:48:04 DEBUG    inz0: 51
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 14:48:04 DEBUG    inz0: 51
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 14:48:04 DEBUG    inz0: 130
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 14:48:04 DEBUG    inz0: 130
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 14:48:04 DEBUG    inz0: 51
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 14:48:04 DEBUG    inz0: 51
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 14:48:04 DEBUG    inz0: 130
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 14:48:04 DEBUG    inz0: 130
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 14:48:04 DEBUG    inz0: 101
2022-10-21 14:48:04 DEBUG    UVLM class:
Inside pipe:
2022-10-21 14:48:04 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 14:48:04 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 14:48:04 DEBUG    inz0: 51
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 14:48:04 DEBUG    inz0: 51
2022-10-21 14:48:04 DEBUG    UVLM class:
Inside pipe:
2022-10-21 14:48:04 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 14:48:04 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 14:48:04 DEBUG    inz0: 51
2022-10-21 14:48:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 14:48:04 DEBUG    inz0: 51
2022-10-21 14:48:06 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 14:48:06 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 14:48:06 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 14:48:06 DEBUG    matplotlib version 3.3.2
2022-10-21 14:48:06 DEBUG    interactive is False
2022-10-21 14:48:06 DEBUG    platform is linux
2022-10-21 14:48:06 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 14:48:06 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 14:48:06 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 14:48:06 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 14:48:06 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 14:48:06 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 14:48:06 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 14:48:07 INFO     i = 0,len(blade_obj) = 0
2022-10-21 14:48:07 INFO     i = 0,len(blade_obj) = 1
2022-10-21 14:48:07 DEBUG    Inputs to fun_blade_wake
2022-10-21 14:48:07 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 14:48:07 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 14:48:07 DEBUG    wake = []
2022-10-21 14:48:07 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 14:48:07 DEBUG    Inputs to fun_blade_wake end
2022-10-21 14:48:07 INFO     inside fun_blade_wake
2022-10-21 14:48:07 DEBUG    wake was empty, creating new wake
2022-10-21 14:48:07 DEBUG    wake index: w = 0
2022-10-21 14:48:07 DEBUG    (obj.mx+1) = 6
2022-10-21 14:48:07 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 14:48:07 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 14:48:07 INFO     For loop started
2022-10-21 14:48:07 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 14:48:07 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 14:48:07 DEBUG    j= 5, row1 = [4]
2022-10-21 14:48:07 DEBUG    j= 5, row2 = 0
2022-10-21 14:48:07 DEBUG    j= 5, row1[row2] = 4
2022-10-21 14:48:07 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 14:48:07 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 14:48:07 DEBUG    j= 11, row1 = [9]
2022-10-21 14:48:07 DEBUG    j= 11, row2 = 0
2022-10-21 14:48:07 DEBUG    j= 11, row1[row2] = 9
2022-10-21 14:48:07 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 14:48:07 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 14:48:07 DEBUG    j= 17, row1 = [14]
2022-10-21 14:48:07 DEBUG    j= 17, row2 = 0
2022-10-21 14:48:07 DEBUG    j= 17, row1[row2] = 14
2022-10-21 14:48:07 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 14:48:07 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 14:48:07 DEBUG    j= 23, row1 = [19]
2022-10-21 14:48:07 DEBUG    j= 23, row2 = 0
2022-10-21 14:48:07 DEBUG    j= 23, row1[row2] = 19
2022-10-21 14:48:07 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 14:48:07 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 14:48:07 DEBUG    j= 29, row1 = [24]
2022-10-21 14:48:07 DEBUG    j= 29, row2 = 0
2022-10-21 14:48:07 DEBUG    j= 29, row1[row2] = 24
2022-10-21 14:48:07 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 14:48:07 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 14:48:07 DEBUG    j= 35, row1 = [29]
2022-10-21 14:48:07 DEBUG    j= 35, row2 = 0
2022-10-21 14:48:07 DEBUG    j= 35, row1[row2] = 29
2022-10-21 14:48:07 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 14:48:07 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 14:48:07 DEBUG    j= 41, row1 = [34]
2022-10-21 14:48:07 DEBUG    j= 41, row2 = 0
2022-10-21 14:48:07 DEBUG    j= 41, row1[row2] = 34
2022-10-21 14:48:07 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 14:48:08 DEBUG    j= 47, row1 = [39]
2022-10-21 14:48:08 DEBUG    j= 47, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 47, row1[row2] = 39
2022-10-21 14:48:08 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 14:48:08 DEBUG    j= 53, row1 = [44]
2022-10-21 14:48:08 DEBUG    j= 53, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 53, row1[row2] = 44
2022-10-21 14:48:08 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 14:48:08 DEBUG    j= 59, row1 = [49]
2022-10-21 14:48:08 DEBUG    j= 59, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 59, row1[row2] = 49
2022-10-21 14:48:08 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 14:48:08 DEBUG    j= 65, row1 = [54]
2022-10-21 14:48:08 DEBUG    j= 65, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 65, row1[row2] = 54
2022-10-21 14:48:08 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 14:48:08 DEBUG    j= 71, row1 = [59]
2022-10-21 14:48:08 DEBUG    j= 71, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 71, row1[row2] = 59
2022-10-21 14:48:08 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 14:48:08 DEBUG    j= 77, row1 = [64]
2022-10-21 14:48:08 DEBUG    j= 77, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 77, row1[row2] = 64
2022-10-21 14:48:08 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 14:48:08 DEBUG    j= 83, row1 = [69]
2022-10-21 14:48:08 DEBUG    j= 83, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 83, row1[row2] = 69
2022-10-21 14:48:08 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 14:48:08 DEBUG    j= 89, row1 = [74]
2022-10-21 14:48:08 DEBUG    j= 89, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 89, row1[row2] = 74
2022-10-21 14:48:08 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 14:48:08 DEBUG    j= 95, row1 = [79]
2022-10-21 14:48:08 DEBUG    j= 95, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 95, row1[row2] = 79
2022-10-21 14:48:08 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 14:48:08 DEBUG    j= 101, row1 = [84]
2022-10-21 14:48:08 DEBUG    j= 101, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 101, row1[row2] = 84
2022-10-21 14:48:08 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 14:48:08 DEBUG    j= 107, row1 = [89]
2022-10-21 14:48:08 DEBUG    j= 107, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 107, row1[row2] = 89
2022-10-21 14:48:08 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 14:48:08 DEBUG    j= 113, row1 = [94]
2022-10-21 14:48:08 DEBUG    j= 113, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 113, row1[row2] = 94
2022-10-21 14:48:08 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 14:48:08 DEBUG    j= 119, row1 = [99]
2022-10-21 14:48:08 DEBUG    j= 119, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 119, row1[row2] = 99
2022-10-21 14:48:08 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 14:48:08 DEBUG    j= 125, row1 = [104]
2022-10-21 14:48:08 DEBUG    j= 125, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 125, row1[row2] = 104
2022-10-21 14:48:08 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 14:48:08 DEBUG    j= 131, row1 = [109]
2022-10-21 14:48:08 DEBUG    j= 131, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 131, row1[row2] = 109
2022-10-21 14:48:08 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 14:48:08 DEBUG    j= 137, row1 = [114]
2022-10-21 14:48:08 DEBUG    j= 137, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 137, row1[row2] = 114
2022-10-21 14:48:08 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 14:48:08 DEBUG    j= 143, row1 = [119]
2022-10-21 14:48:08 DEBUG    j= 143, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 143, row1[row2] = 119
2022-10-21 14:48:08 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 14:48:08 DEBUG    j= 149, row1 = [124]
2022-10-21 14:48:08 DEBUG    j= 149, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 149, row1[row2] = 124
2022-10-21 14:48:08 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 14:48:08 DEBUG    j= 155, row1 = [129]
2022-10-21 14:48:08 DEBUG    j= 155, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 155, row1[row2] = 129
2022-10-21 14:48:08 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 14:48:08 DEBUG    j= 161, row1 = [134]
2022-10-21 14:48:08 DEBUG    j= 161, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 161, row1[row2] = 134
2022-10-21 14:48:08 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 14:48:08 DEBUG    j= 167, row1 = [139]
2022-10-21 14:48:08 DEBUG    j= 167, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 167, row1[row2] = 139
2022-10-21 14:48:08 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 14:48:08 DEBUG    j= 173, row1 = [144]
2022-10-21 14:48:08 DEBUG    j= 173, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 173, row1[row2] = 144
2022-10-21 14:48:08 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 14:48:08 DEBUG    j= 179, row1 = [149]
2022-10-21 14:48:08 DEBUG    j= 179, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 179, row1[row2] = 149
2022-10-21 14:48:08 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 14:48:08 DEBUG    j= 185, row1 = [154]
2022-10-21 14:48:08 DEBUG    j= 185, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 185, row1[row2] = 154
2022-10-21 14:48:08 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 14:48:08 DEBUG    j= 191, row1 = [159]
2022-10-21 14:48:08 DEBUG    j= 191, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 191, row1[row2] = 159
2022-10-21 14:48:08 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 14:48:08 DEBUG    j= 197, row1 = [164]
2022-10-21 14:48:08 DEBUG    j= 197, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 197, row1[row2] = 164
2022-10-21 14:48:08 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 14:48:08 DEBUG    j= 203, row1 = [169]
2022-10-21 14:48:08 DEBUG    j= 203, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 203, row1[row2] = 169
2022-10-21 14:48:08 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 14:48:08 DEBUG    j= 209, row1 = [174]
2022-10-21 14:48:08 DEBUG    j= 209, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 209, row1[row2] = 174
2022-10-21 14:48:08 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 14:48:08 DEBUG    j= 215, row1 = [179]
2022-10-21 14:48:08 DEBUG    j= 215, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 215, row1[row2] = 179
2022-10-21 14:48:08 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 14:48:08 DEBUG    j= 221, row1 = [184]
2022-10-21 14:48:08 DEBUG    j= 221, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 221, row1[row2] = 184
2022-10-21 14:48:08 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 14:48:08 DEBUG    j= 227, row1 = [189]
2022-10-21 14:48:08 DEBUG    j= 227, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 227, row1[row2] = 189
2022-10-21 14:48:08 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 14:48:08 DEBUG    j= 233, row1 = [194]
2022-10-21 14:48:08 DEBUG    j= 233, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 233, row1[row2] = 194
2022-10-21 14:48:08 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 14:48:08 DEBUG    j= 239, row1 = [199]
2022-10-21 14:48:08 DEBUG    j= 239, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 239, row1[row2] = 199
2022-10-21 14:48:08 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 14:48:08 DEBUG    j= 245, row1 = [204]
2022-10-21 14:48:08 DEBUG    j= 245, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 245, row1[row2] = 204
2022-10-21 14:48:08 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 14:48:08 DEBUG    j= 251, row1 = [209]
2022-10-21 14:48:08 DEBUG    j= 251, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 251, row1[row2] = 209
2022-10-21 14:48:08 INFO     For loop ended
2022-10-21 14:48:08 INFO     fun_blade_wake done
2022-10-21 14:48:08 DEBUG    Setting input for FSI
2022-10-21 14:48:08 DEBUG    len(blade_obj) = 2
2022-10-21 14:48:08 DEBUG    Inputs to fun_blade_wake
2022-10-21 14:48:08 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 14:48:08 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 14:48:08 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 14:48:08 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 14:48:08 DEBUG    Inputs to fun_blade_wake end
2022-10-21 14:48:08 INFO     inside fun_blade_wake
2022-10-21 14:48:08 DEBUG    wake was not empty, appending new wake
2022-10-21 14:48:08 DEBUG    wake index: w = 1
2022-10-21 14:48:08 DEBUG    wake property.shape: (2, 2)
2022-10-21 14:48:08 DEBUG    (obj.mx+1) = 6
2022-10-21 14:48:08 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 14:48:08 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 14:48:08 INFO     For loop started
2022-10-21 14:48:08 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 14:48:08 DEBUG    j= 5, row1 = [4]
2022-10-21 14:48:08 DEBUG    j= 5, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 5, row1[row2] = 4
2022-10-21 14:48:08 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 14:48:08 DEBUG    j= 11, row1 = [9]
2022-10-21 14:48:08 DEBUG    j= 11, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 11, row1[row2] = 9
2022-10-21 14:48:08 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 14:48:08 DEBUG    j= 17, row1 = [14]
2022-10-21 14:48:08 DEBUG    j= 17, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 17, row1[row2] = 14
2022-10-21 14:48:08 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 14:48:08 DEBUG    j= 23, row1 = [19]
2022-10-21 14:48:08 DEBUG    j= 23, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 23, row1[row2] = 19
2022-10-21 14:48:08 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 14:48:08 DEBUG    j= 29, row1 = [24]
2022-10-21 14:48:08 DEBUG    j= 29, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 29, row1[row2] = 24
2022-10-21 14:48:08 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 14:48:08 DEBUG    j= 35, row1 = [29]
2022-10-21 14:48:08 DEBUG    j= 35, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 35, row1[row2] = 29
2022-10-21 14:48:08 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 14:48:08 DEBUG    j= 41, row1 = [34]
2022-10-21 14:48:08 DEBUG    j= 41, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 41, row1[row2] = 34
2022-10-21 14:48:08 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 14:48:08 DEBUG    j= 47, row1 = [39]
2022-10-21 14:48:08 DEBUG    j= 47, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 47, row1[row2] = 39
2022-10-21 14:48:08 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 14:48:08 DEBUG    j= 53, row1 = [44]
2022-10-21 14:48:08 DEBUG    j= 53, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 53, row1[row2] = 44
2022-10-21 14:48:08 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 14:48:08 DEBUG    j= 59, row1 = [49]
2022-10-21 14:48:08 DEBUG    j= 59, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 59, row1[row2] = 49
2022-10-21 14:48:08 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 14:48:08 DEBUG    j= 65, row1 = [54]
2022-10-21 14:48:08 DEBUG    j= 65, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 65, row1[row2] = 54
2022-10-21 14:48:08 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 14:48:08 DEBUG    j= 71, row1 = [59]
2022-10-21 14:48:08 DEBUG    j= 71, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 71, row1[row2] = 59
2022-10-21 14:48:08 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 14:48:08 DEBUG    j= 77, row1 = [64]
2022-10-21 14:48:08 DEBUG    j= 77, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 77, row1[row2] = 64
2022-10-21 14:48:08 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 14:48:08 DEBUG    j= 83, row1 = [69]
2022-10-21 14:48:08 DEBUG    j= 83, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 83, row1[row2] = 69
2022-10-21 14:48:08 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 14:48:08 DEBUG    j= 89, row1 = [74]
2022-10-21 14:48:08 DEBUG    j= 89, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 89, row1[row2] = 74
2022-10-21 14:48:08 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 14:48:08 DEBUG    j= 95, row1 = [79]
2022-10-21 14:48:08 DEBUG    j= 95, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 95, row1[row2] = 79
2022-10-21 14:48:08 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 14:48:08 DEBUG    j= 101, row1 = [84]
2022-10-21 14:48:08 DEBUG    j= 101, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 101, row1[row2] = 84
2022-10-21 14:48:08 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 14:48:08 DEBUG    j= 107, row1 = [89]
2022-10-21 14:48:08 DEBUG    j= 107, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 107, row1[row2] = 89
2022-10-21 14:48:08 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 14:48:08 DEBUG    j= 113, row1 = [94]
2022-10-21 14:48:08 DEBUG    j= 113, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 113, row1[row2] = 94
2022-10-21 14:48:08 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 14:48:08 DEBUG    j= 119, row1 = [99]
2022-10-21 14:48:08 DEBUG    j= 119, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 119, row1[row2] = 99
2022-10-21 14:48:08 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 14:48:08 DEBUG    j= 125, row1 = [104]
2022-10-21 14:48:08 DEBUG    j= 125, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 125, row1[row2] = 104
2022-10-21 14:48:08 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 14:48:08 DEBUG    j= 131, row1 = [109]
2022-10-21 14:48:08 DEBUG    j= 131, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 131, row1[row2] = 109
2022-10-21 14:48:08 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 14:48:08 DEBUG    j= 137, row1 = [114]
2022-10-21 14:48:08 DEBUG    j= 137, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 137, row1[row2] = 114
2022-10-21 14:48:08 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 14:48:08 DEBUG    j= 143, row1 = [119]
2022-10-21 14:48:08 DEBUG    j= 143, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 143, row1[row2] = 119
2022-10-21 14:48:08 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 14:48:08 DEBUG    j= 149, row1 = [124]
2022-10-21 14:48:08 DEBUG    j= 149, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 149, row1[row2] = 124
2022-10-21 14:48:08 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 14:48:08 DEBUG    j= 155, row1 = [129]
2022-10-21 14:48:08 DEBUG    j= 155, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 155, row1[row2] = 129
2022-10-21 14:48:08 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 14:48:08 DEBUG    j= 161, row1 = [134]
2022-10-21 14:48:08 DEBUG    j= 161, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 161, row1[row2] = 134
2022-10-21 14:48:08 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 14:48:08 DEBUG    j= 167, row1 = [139]
2022-10-21 14:48:08 DEBUG    j= 167, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 167, row1[row2] = 139
2022-10-21 14:48:08 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 14:48:08 DEBUG    j= 173, row1 = [144]
2022-10-21 14:48:08 DEBUG    j= 173, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 173, row1[row2] = 144
2022-10-21 14:48:08 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 14:48:08 DEBUG    j= 179, row1 = [149]
2022-10-21 14:48:08 DEBUG    j= 179, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 179, row1[row2] = 149
2022-10-21 14:48:08 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 14:48:08 DEBUG    j= 185, row1 = [154]
2022-10-21 14:48:08 DEBUG    j= 185, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 185, row1[row2] = 154
2022-10-21 14:48:08 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 14:48:08 DEBUG    j= 191, row1 = [159]
2022-10-21 14:48:08 DEBUG    j= 191, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 191, row1[row2] = 159
2022-10-21 14:48:08 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 14:48:08 DEBUG    j= 197, row1 = [164]
2022-10-21 14:48:08 DEBUG    j= 197, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 197, row1[row2] = 164
2022-10-21 14:48:08 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 14:48:08 DEBUG    j= 203, row1 = [169]
2022-10-21 14:48:08 DEBUG    j= 203, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 203, row1[row2] = 169
2022-10-21 14:48:08 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 14:48:08 DEBUG    j= 209, row1 = [174]
2022-10-21 14:48:08 DEBUG    j= 209, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 209, row1[row2] = 174
2022-10-21 14:48:08 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 14:48:08 DEBUG    j= 215, row1 = [179]
2022-10-21 14:48:08 DEBUG    j= 215, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 215, row1[row2] = 179
2022-10-21 14:48:08 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 14:48:08 DEBUG    j= 221, row1 = [184]
2022-10-21 14:48:08 DEBUG    j= 221, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 221, row1[row2] = 184
2022-10-21 14:48:08 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 14:48:08 DEBUG    j= 227, row1 = [189]
2022-10-21 14:48:08 DEBUG    j= 227, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 227, row1[row2] = 189
2022-10-21 14:48:08 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 14:48:08 DEBUG    j= 233, row1 = [194]
2022-10-21 14:48:08 DEBUG    j= 233, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 233, row1[row2] = 194
2022-10-21 14:48:08 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 14:48:08 DEBUG    j= 239, row1 = [199]
2022-10-21 14:48:08 DEBUG    j= 239, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 239, row1[row2] = 199
2022-10-21 14:48:08 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 14:48:08 DEBUG    j= 245, row1 = [204]
2022-10-21 14:48:08 DEBUG    j= 245, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 245, row1[row2] = 204
2022-10-21 14:48:08 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 14:48:08 DEBUG    j= 251, row1 = [209]
2022-10-21 14:48:08 DEBUG    j= 251, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 251, row1[row2] = 209
2022-10-21 14:48:08 INFO     For loop ended
2022-10-21 14:48:08 INFO     fun_blade_wake done
2022-10-21 14:48:08 DEBUG    Setting input for FSI
2022-10-21 14:48:08 DEBUG    len(blade_obj) = 2
2022-10-21 14:48:08 DEBUG    Inputs to fun_blade_wake
2022-10-21 14:48:08 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 14:48:08 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 14:48:08 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 14:48:08 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 14:48:08 DEBUG    Inputs to fun_blade_wake end
2022-10-21 14:48:08 INFO     inside fun_blade_wake
2022-10-21 14:48:08 DEBUG    wake was not empty, appending new wake
2022-10-21 14:48:08 DEBUG    wake index: w = 2
2022-10-21 14:48:08 DEBUG    wake property.shape: (3, 2)
2022-10-21 14:48:08 DEBUG    (obj.mx+1) = 6
2022-10-21 14:48:08 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 14:48:08 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 14:48:08 INFO     For loop started
2022-10-21 14:48:08 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 14:48:08 DEBUG    j= 5, row1 = [4]
2022-10-21 14:48:08 DEBUG    j= 5, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 5, row1[row2] = 4
2022-10-21 14:48:08 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 14:48:08 DEBUG    j= 11, row1 = [9]
2022-10-21 14:48:08 DEBUG    j= 11, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 11, row1[row2] = 9
2022-10-21 14:48:08 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 14:48:08 DEBUG    j= 17, row1 = [14]
2022-10-21 14:48:08 DEBUG    j= 17, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 17, row1[row2] = 14
2022-10-21 14:48:08 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 14:48:08 DEBUG    j= 23, row1 = [19]
2022-10-21 14:48:08 DEBUG    j= 23, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 23, row1[row2] = 19
2022-10-21 14:48:08 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 14:48:08 DEBUG    j= 29, row1 = [24]
2022-10-21 14:48:08 DEBUG    j= 29, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 29, row1[row2] = 24
2022-10-21 14:48:08 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 14:48:08 DEBUG    j= 35, row1 = [29]
2022-10-21 14:48:08 DEBUG    j= 35, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 35, row1[row2] = 29
2022-10-21 14:48:08 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 14:48:08 DEBUG    j= 41, row1 = [34]
2022-10-21 14:48:08 DEBUG    j= 41, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 41, row1[row2] = 34
2022-10-21 14:48:08 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 14:48:08 DEBUG    j= 47, row1 = [39]
2022-10-21 14:48:08 DEBUG    j= 47, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 47, row1[row2] = 39
2022-10-21 14:48:08 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 14:48:08 DEBUG    j= 53, row1 = [44]
2022-10-21 14:48:08 DEBUG    j= 53, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 53, row1[row2] = 44
2022-10-21 14:48:08 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 14:48:08 DEBUG    j= 59, row1 = [49]
2022-10-21 14:48:08 DEBUG    j= 59, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 59, row1[row2] = 49
2022-10-21 14:48:08 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 14:48:08 DEBUG    j= 65, row1 = [54]
2022-10-21 14:48:08 DEBUG    j= 65, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 65, row1[row2] = 54
2022-10-21 14:48:08 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 14:48:08 DEBUG    j= 71, row1 = [59]
2022-10-21 14:48:08 DEBUG    j= 71, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 71, row1[row2] = 59
2022-10-21 14:48:08 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 14:48:08 DEBUG    j= 77, row1 = [64]
2022-10-21 14:48:08 DEBUG    j= 77, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 77, row1[row2] = 64
2022-10-21 14:48:08 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 14:48:08 DEBUG    j= 83, row1 = [69]
2022-10-21 14:48:08 DEBUG    j= 83, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 83, row1[row2] = 69
2022-10-21 14:48:08 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 14:48:08 DEBUG    j= 89, row1 = [74]
2022-10-21 14:48:08 DEBUG    j= 89, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 89, row1[row2] = 74
2022-10-21 14:48:08 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 14:48:08 DEBUG    j= 95, row1 = [79]
2022-10-21 14:48:08 DEBUG    j= 95, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 95, row1[row2] = 79
2022-10-21 14:48:08 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 14:48:08 DEBUG    j= 101, row1 = [84]
2022-10-21 14:48:08 DEBUG    j= 101, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 101, row1[row2] = 84
2022-10-21 14:48:08 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 14:48:08 DEBUG    j= 107, row1 = [89]
2022-10-21 14:48:08 DEBUG    j= 107, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 107, row1[row2] = 89
2022-10-21 14:48:08 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 14:48:08 DEBUG    j= 113, row1 = [94]
2022-10-21 14:48:08 DEBUG    j= 113, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 113, row1[row2] = 94
2022-10-21 14:48:08 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 14:48:08 DEBUG    j= 119, row1 = [99]
2022-10-21 14:48:08 DEBUG    j= 119, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 119, row1[row2] = 99
2022-10-21 14:48:08 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 14:48:08 DEBUG    j= 125, row1 = [104]
2022-10-21 14:48:08 DEBUG    j= 125, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 125, row1[row2] = 104
2022-10-21 14:48:08 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 14:48:08 DEBUG    j= 131, row1 = [109]
2022-10-21 14:48:08 DEBUG    j= 131, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 131, row1[row2] = 109
2022-10-21 14:48:08 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 14:48:08 DEBUG    j= 137, row1 = [114]
2022-10-21 14:48:08 DEBUG    j= 137, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 137, row1[row2] = 114
2022-10-21 14:48:08 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 14:48:08 DEBUG    j= 143, row1 = [119]
2022-10-21 14:48:08 DEBUG    j= 143, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 143, row1[row2] = 119
2022-10-21 14:48:08 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 14:48:08 DEBUG    j= 149, row1 = [124]
2022-10-21 14:48:08 DEBUG    j= 149, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 149, row1[row2] = 124
2022-10-21 14:48:08 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 14:48:08 DEBUG    j= 155, row1 = [129]
2022-10-21 14:48:08 DEBUG    j= 155, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 155, row1[row2] = 129
2022-10-21 14:48:08 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 14:48:08 DEBUG    j= 161, row1 = [134]
2022-10-21 14:48:08 DEBUG    j= 161, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 161, row1[row2] = 134
2022-10-21 14:48:08 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 14:48:08 DEBUG    j= 167, row1 = [139]
2022-10-21 14:48:08 DEBUG    j= 167, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 167, row1[row2] = 139
2022-10-21 14:48:08 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 14:48:08 DEBUG    j= 173, row1 = [144]
2022-10-21 14:48:08 DEBUG    j= 173, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 173, row1[row2] = 144
2022-10-21 14:48:08 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 14:48:08 DEBUG    j= 179, row1 = [149]
2022-10-21 14:48:08 DEBUG    j= 179, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 179, row1[row2] = 149
2022-10-21 14:48:08 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 14:48:08 DEBUG    j= 185, row1 = [154]
2022-10-21 14:48:08 DEBUG    j= 185, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 185, row1[row2] = 154
2022-10-21 14:48:08 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 14:48:08 DEBUG    j= 191, row1 = [159]
2022-10-21 14:48:08 DEBUG    j= 191, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 191, row1[row2] = 159
2022-10-21 14:48:08 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 14:48:08 DEBUG    j= 197, row1 = [164]
2022-10-21 14:48:08 DEBUG    j= 197, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 197, row1[row2] = 164
2022-10-21 14:48:08 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 14:48:08 DEBUG    j= 203, row1 = [169]
2022-10-21 14:48:08 DEBUG    j= 203, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 203, row1[row2] = 169
2022-10-21 14:48:08 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 14:48:08 DEBUG    j= 209, row1 = [174]
2022-10-21 14:48:08 DEBUG    j= 209, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 209, row1[row2] = 174
2022-10-21 14:48:08 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 14:48:08 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 14:48:08 DEBUG    j= 215, row1 = [179]
2022-10-21 14:48:08 DEBUG    j= 215, row2 = 0
2022-10-21 14:48:08 DEBUG    j= 215, row1[row2] = 179
2022-10-21 14:48:09 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 14:48:09 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 14:48:09 DEBUG    j= 221, row1 = [184]
2022-10-21 14:48:09 DEBUG    j= 221, row2 = 0
2022-10-21 14:48:09 DEBUG    j= 221, row1[row2] = 184
2022-10-21 14:48:09 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 14:48:09 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 14:48:09 DEBUG    j= 227, row1 = [189]
2022-10-21 14:48:09 DEBUG    j= 227, row2 = 0
2022-10-21 14:48:09 DEBUG    j= 227, row1[row2] = 189
2022-10-21 14:48:09 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 14:48:09 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 14:48:09 DEBUG    j= 233, row1 = [194]
2022-10-21 14:48:09 DEBUG    j= 233, row2 = 0
2022-10-21 14:48:09 DEBUG    j= 233, row1[row2] = 194
2022-10-21 14:48:09 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 14:48:09 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 14:48:09 DEBUG    j= 239, row1 = [199]
2022-10-21 14:48:09 DEBUG    j= 239, row2 = 0
2022-10-21 14:48:09 DEBUG    j= 239, row1[row2] = 199
2022-10-21 14:48:09 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 14:48:09 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 14:48:09 DEBUG    j= 245, row1 = [204]
2022-10-21 14:48:09 DEBUG    j= 245, row2 = 0
2022-10-21 14:48:09 DEBUG    j= 245, row1[row2] = 204
2022-10-21 14:48:09 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 14:48:09 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 14:48:09 DEBUG    j= 251, row1 = [209]
2022-10-21 14:48:09 DEBUG    j= 251, row2 = 0
2022-10-21 14:48:09 DEBUG    j= 251, row1[row2] = 209
2022-10-21 14:48:09 INFO     For loop ended
2022-10-21 14:48:09 INFO     fun_blade_wake done
2022-10-21 14:48:09 DEBUG    Setting input for FSI
2022-10-21 14:48:09 DEBUG    len(blade_obj) = 2
2022-10-21 14:48:09 DEBUG    len(simu_fsi.data) = 8
2022-10-21 14:48:09 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 14:48:09 INFO     Additional masses sections
2022-10-21 14:48:09 INFO     **************************************************
2022-10-21 14:48:09 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 14:48:09 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 15:50:58 INFO     read_yaml conversion started!
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 15:51:00 DEBUG    inz0: 51
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 15:51:00 DEBUG    inz0: 51
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 15:51:00 DEBUG    inz0: 130
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 15:51:00 DEBUG    inz0: 130
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 15:51:00 DEBUG    inz0: 51
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 15:51:00 DEBUG    inz0: 51
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 15:51:00 DEBUG    inz0: 130
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 15:51:00 DEBUG    inz0: 130
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 15:51:00 DEBUG    inz0: 101
2022-10-21 15:51:01 DEBUG    UVLM class:
Inside pipe:
2022-10-21 15:51:01 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 15:51:01 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 15:51:01 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 15:51:01 DEBUG    inz0: 51
2022-10-21 15:51:01 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 15:51:01 DEBUG    inz0: 51
2022-10-21 15:51:01 DEBUG    UVLM class:
Inside pipe:
2022-10-21 15:51:01 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 15:51:01 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 15:51:01 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 15:51:01 DEBUG    inz0: 51
2022-10-21 15:51:01 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 15:51:01 DEBUG    inz0: 51
2022-10-21 16:02:25 INFO     read_yaml conversion started!
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:02:27 DEBUG    inz0: 51
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:02:27 DEBUG    inz0: 51
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:02:27 DEBUG    inz0: 130
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:02:27 DEBUG    inz0: 130
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:02:27 DEBUG    inz0: 51
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:02:27 DEBUG    inz0: 51
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:02:27 DEBUG    inz0: 130
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:02:27 DEBUG    inz0: 130
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:02:27 DEBUG    inz0: 101
2022-10-21 16:02:27 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:02:27 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 16:02:27 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:02:27 DEBUG    inz0: 51
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:02:27 DEBUG    inz0: 51
2022-10-21 16:02:27 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:02:27 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 16:02:27 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:02:27 DEBUG    inz0: 51
2022-10-21 16:02:27 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:02:27 DEBUG    inz0: 51
2022-10-21 16:02:29 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:02:29 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:02:29 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 16:02:29 DEBUG    matplotlib version 3.3.2
2022-10-21 16:02:29 DEBUG    interactive is False
2022-10-21 16:02:29 DEBUG    platform is linux
2022-10-21 16:02:29 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 16:02:29 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 16:02:29 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 16:02:29 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:02:29 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:02:29 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:29 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:02:30 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 16:02:31 INFO     i = 0,len(blade_obj) = 0
2022-10-21 16:02:31 INFO     i = 0,len(blade_obj) = 1
2022-10-21 16:02:31 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:02:31 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 16:02:31 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:02:31 DEBUG    wake = []
2022-10-21 16:02:31 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 16:02:31 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:02:31 INFO     inside fun_blade_wake
2022-10-21 16:02:31 DEBUG    wake was empty, creating new wake
2022-10-21 16:02:31 DEBUG    wake index: w = 0
2022-10-21 16:02:31 DEBUG    (obj.mx+1) = 6
2022-10-21 16:02:31 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:02:31 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:02:31 INFO     For loop started
2022-10-21 16:02:31 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:02:31 DEBUG    j= 5, row1 = [4]
2022-10-21 16:02:31 DEBUG    j= 5, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:02:31 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:02:31 DEBUG    j= 11, row1 = [9]
2022-10-21 16:02:31 DEBUG    j= 11, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:02:31 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:02:31 DEBUG    j= 17, row1 = [14]
2022-10-21 16:02:31 DEBUG    j= 17, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:02:31 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:02:31 DEBUG    j= 23, row1 = [19]
2022-10-21 16:02:31 DEBUG    j= 23, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:02:31 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:02:31 DEBUG    j= 29, row1 = [24]
2022-10-21 16:02:31 DEBUG    j= 29, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:02:31 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:02:31 DEBUG    j= 35, row1 = [29]
2022-10-21 16:02:31 DEBUG    j= 35, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:02:31 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:02:31 DEBUG    j= 41, row1 = [34]
2022-10-21 16:02:31 DEBUG    j= 41, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:02:31 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:02:31 DEBUG    j= 47, row1 = [39]
2022-10-21 16:02:31 DEBUG    j= 47, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:02:31 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:02:31 DEBUG    j= 53, row1 = [44]
2022-10-21 16:02:31 DEBUG    j= 53, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:02:31 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:02:31 DEBUG    j= 59, row1 = [49]
2022-10-21 16:02:31 DEBUG    j= 59, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:02:31 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:02:31 DEBUG    j= 65, row1 = [54]
2022-10-21 16:02:31 DEBUG    j= 65, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:02:31 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:02:31 DEBUG    j= 71, row1 = [59]
2022-10-21 16:02:31 DEBUG    j= 71, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:02:31 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:02:31 DEBUG    j= 77, row1 = [64]
2022-10-21 16:02:31 DEBUG    j= 77, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:02:31 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:02:31 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:02:31 DEBUG    j= 83, row1 = [69]
2022-10-21 16:02:31 DEBUG    j= 83, row2 = 0
2022-10-21 16:02:31 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:02:31 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:02:32 DEBUG    j= 89, row1 = [74]
2022-10-21 16:02:32 DEBUG    j= 89, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:02:32 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:02:32 DEBUG    j= 95, row1 = [79]
2022-10-21 16:02:32 DEBUG    j= 95, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:02:32 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:02:32 DEBUG    j= 101, row1 = [84]
2022-10-21 16:02:32 DEBUG    j= 101, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:02:32 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:02:32 DEBUG    j= 107, row1 = [89]
2022-10-21 16:02:32 DEBUG    j= 107, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:02:32 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:02:32 DEBUG    j= 113, row1 = [94]
2022-10-21 16:02:32 DEBUG    j= 113, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:02:32 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:02:32 DEBUG    j= 119, row1 = [99]
2022-10-21 16:02:32 DEBUG    j= 119, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:02:32 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:02:32 DEBUG    j= 125, row1 = [104]
2022-10-21 16:02:32 DEBUG    j= 125, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:02:32 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:02:32 DEBUG    j= 131, row1 = [109]
2022-10-21 16:02:32 DEBUG    j= 131, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:02:32 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:02:32 DEBUG    j= 137, row1 = [114]
2022-10-21 16:02:32 DEBUG    j= 137, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:02:32 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:02:32 DEBUG    j= 143, row1 = [119]
2022-10-21 16:02:32 DEBUG    j= 143, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:02:32 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:02:32 DEBUG    j= 149, row1 = [124]
2022-10-21 16:02:32 DEBUG    j= 149, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:02:32 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:02:32 DEBUG    j= 155, row1 = [129]
2022-10-21 16:02:32 DEBUG    j= 155, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:02:32 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:02:32 DEBUG    j= 161, row1 = [134]
2022-10-21 16:02:32 DEBUG    j= 161, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:02:32 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:02:32 DEBUG    j= 167, row1 = [139]
2022-10-21 16:02:32 DEBUG    j= 167, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:02:32 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:02:32 DEBUG    j= 173, row1 = [144]
2022-10-21 16:02:32 DEBUG    j= 173, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:02:32 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:02:32 DEBUG    j= 179, row1 = [149]
2022-10-21 16:02:32 DEBUG    j= 179, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:02:32 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:02:32 DEBUG    j= 185, row1 = [154]
2022-10-21 16:02:32 DEBUG    j= 185, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:02:32 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:02:32 DEBUG    j= 191, row1 = [159]
2022-10-21 16:02:32 DEBUG    j= 191, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:02:32 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:02:32 DEBUG    j= 197, row1 = [164]
2022-10-21 16:02:32 DEBUG    j= 197, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:02:32 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:02:32 DEBUG    j= 203, row1 = [169]
2022-10-21 16:02:32 DEBUG    j= 203, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:02:32 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:02:32 DEBUG    j= 209, row1 = [174]
2022-10-21 16:02:32 DEBUG    j= 209, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:02:32 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:02:32 DEBUG    j= 215, row1 = [179]
2022-10-21 16:02:32 DEBUG    j= 215, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:02:32 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:02:32 DEBUG    j= 221, row1 = [184]
2022-10-21 16:02:32 DEBUG    j= 221, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:02:32 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:02:32 DEBUG    j= 227, row1 = [189]
2022-10-21 16:02:32 DEBUG    j= 227, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:02:32 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:02:32 DEBUG    j= 233, row1 = [194]
2022-10-21 16:02:32 DEBUG    j= 233, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:02:32 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:02:32 DEBUG    j= 239, row1 = [199]
2022-10-21 16:02:32 DEBUG    j= 239, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:02:32 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:02:32 DEBUG    j= 245, row1 = [204]
2022-10-21 16:02:32 DEBUG    j= 245, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:02:32 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:02:32 DEBUG    j= 251, row1 = [209]
2022-10-21 16:02:32 DEBUG    j= 251, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:02:32 INFO     For loop ended
2022-10-21 16:02:32 INFO     fun_blade_wake done
2022-10-21 16:02:32 DEBUG    Setting input for FSI
2022-10-21 16:02:32 DEBUG    len(blade_obj) = 2
2022-10-21 16:02:32 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:02:32 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 16:02:32 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:02:32 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 16:02:32 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 16:02:32 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:02:32 INFO     inside fun_blade_wake
2022-10-21 16:02:32 DEBUG    wake was not empty, appending new wake
2022-10-21 16:02:32 DEBUG    wake index: w = 1
2022-10-21 16:02:32 DEBUG    wake property.shape: (2, 2)
2022-10-21 16:02:32 DEBUG    (obj.mx+1) = 6
2022-10-21 16:02:32 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:02:32 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:02:32 INFO     For loop started
2022-10-21 16:02:32 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:02:32 DEBUG    j= 5, row1 = [4]
2022-10-21 16:02:32 DEBUG    j= 5, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:02:32 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:02:32 DEBUG    j= 11, row1 = [9]
2022-10-21 16:02:32 DEBUG    j= 11, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:02:32 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:02:32 DEBUG    j= 17, row1 = [14]
2022-10-21 16:02:32 DEBUG    j= 17, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:02:32 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:02:32 DEBUG    j= 23, row1 = [19]
2022-10-21 16:02:32 DEBUG    j= 23, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:02:32 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:02:32 DEBUG    j= 29, row1 = [24]
2022-10-21 16:02:32 DEBUG    j= 29, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:02:32 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:02:32 DEBUG    j= 35, row1 = [29]
2022-10-21 16:02:32 DEBUG    j= 35, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:02:32 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:02:32 DEBUG    j= 41, row1 = [34]
2022-10-21 16:02:32 DEBUG    j= 41, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:02:32 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:02:32 DEBUG    j= 47, row1 = [39]
2022-10-21 16:02:32 DEBUG    j= 47, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:02:32 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:02:32 DEBUG    j= 53, row1 = [44]
2022-10-21 16:02:32 DEBUG    j= 53, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:02:32 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:02:32 DEBUG    j= 59, row1 = [49]
2022-10-21 16:02:32 DEBUG    j= 59, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:02:32 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:02:32 DEBUG    j= 65, row1 = [54]
2022-10-21 16:02:32 DEBUG    j= 65, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:02:32 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:02:32 DEBUG    j= 71, row1 = [59]
2022-10-21 16:02:32 DEBUG    j= 71, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:02:32 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:02:32 DEBUG    j= 77, row1 = [64]
2022-10-21 16:02:32 DEBUG    j= 77, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:02:32 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:02:32 DEBUG    j= 83, row1 = [69]
2022-10-21 16:02:32 DEBUG    j= 83, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:02:32 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:02:32 DEBUG    j= 89, row1 = [74]
2022-10-21 16:02:32 DEBUG    j= 89, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:02:32 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:02:32 DEBUG    j= 95, row1 = [79]
2022-10-21 16:02:32 DEBUG    j= 95, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:02:32 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:02:32 DEBUG    j= 101, row1 = [84]
2022-10-21 16:02:32 DEBUG    j= 101, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:02:32 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:02:32 DEBUG    j= 107, row1 = [89]
2022-10-21 16:02:32 DEBUG    j= 107, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:02:32 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:02:32 DEBUG    j= 113, row1 = [94]
2022-10-21 16:02:32 DEBUG    j= 113, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:02:32 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:02:32 DEBUG    j= 119, row1 = [99]
2022-10-21 16:02:32 DEBUG    j= 119, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:02:32 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:02:32 DEBUG    j= 125, row1 = [104]
2022-10-21 16:02:32 DEBUG    j= 125, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:02:32 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:02:32 DEBUG    j= 131, row1 = [109]
2022-10-21 16:02:32 DEBUG    j= 131, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:02:32 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:02:32 DEBUG    j= 137, row1 = [114]
2022-10-21 16:02:32 DEBUG    j= 137, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:02:32 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:02:32 DEBUG    j= 143, row1 = [119]
2022-10-21 16:02:32 DEBUG    j= 143, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:02:32 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:02:32 DEBUG    j= 149, row1 = [124]
2022-10-21 16:02:32 DEBUG    j= 149, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:02:32 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:02:32 DEBUG    j= 155, row1 = [129]
2022-10-21 16:02:32 DEBUG    j= 155, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:02:32 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:02:32 DEBUG    j= 161, row1 = [134]
2022-10-21 16:02:32 DEBUG    j= 161, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:02:32 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:02:32 DEBUG    j= 167, row1 = [139]
2022-10-21 16:02:32 DEBUG    j= 167, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:02:32 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:02:32 DEBUG    j= 173, row1 = [144]
2022-10-21 16:02:32 DEBUG    j= 173, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:02:32 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:02:32 DEBUG    j= 179, row1 = [149]
2022-10-21 16:02:32 DEBUG    j= 179, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:02:32 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:02:32 DEBUG    j= 185, row1 = [154]
2022-10-21 16:02:32 DEBUG    j= 185, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:02:32 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:02:32 DEBUG    j= 191, row1 = [159]
2022-10-21 16:02:32 DEBUG    j= 191, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:02:32 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:02:32 DEBUG    j= 197, row1 = [164]
2022-10-21 16:02:32 DEBUG    j= 197, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:02:32 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:02:32 DEBUG    j= 203, row1 = [169]
2022-10-21 16:02:32 DEBUG    j= 203, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:02:32 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:02:32 DEBUG    j= 209, row1 = [174]
2022-10-21 16:02:32 DEBUG    j= 209, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:02:32 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:02:32 DEBUG    j= 215, row1 = [179]
2022-10-21 16:02:32 DEBUG    j= 215, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:02:32 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:02:32 DEBUG    j= 221, row1 = [184]
2022-10-21 16:02:32 DEBUG    j= 221, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:02:32 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:02:32 DEBUG    j= 227, row1 = [189]
2022-10-21 16:02:32 DEBUG    j= 227, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:02:32 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:02:32 DEBUG    j= 233, row1 = [194]
2022-10-21 16:02:32 DEBUG    j= 233, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:02:32 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:02:32 DEBUG    j= 239, row1 = [199]
2022-10-21 16:02:32 DEBUG    j= 239, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:02:32 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:02:32 DEBUG    j= 245, row1 = [204]
2022-10-21 16:02:32 DEBUG    j= 245, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:02:32 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:02:32 DEBUG    j= 251, row1 = [209]
2022-10-21 16:02:32 DEBUG    j= 251, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:02:32 INFO     For loop ended
2022-10-21 16:02:32 INFO     fun_blade_wake done
2022-10-21 16:02:32 DEBUG    Setting input for FSI
2022-10-21 16:02:32 DEBUG    len(blade_obj) = 2
2022-10-21 16:02:32 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:02:32 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 16:02:32 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:02:32 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 16:02:32 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 16:02:32 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:02:32 INFO     inside fun_blade_wake
2022-10-21 16:02:32 DEBUG    wake was not empty, appending new wake
2022-10-21 16:02:32 DEBUG    wake index: w = 2
2022-10-21 16:02:32 DEBUG    wake property.shape: (3, 2)
2022-10-21 16:02:32 DEBUG    (obj.mx+1) = 6
2022-10-21 16:02:32 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:02:32 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:02:32 INFO     For loop started
2022-10-21 16:02:32 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:02:32 DEBUG    j= 5, row1 = [4]
2022-10-21 16:02:32 DEBUG    j= 5, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:02:32 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:02:32 DEBUG    j= 11, row1 = [9]
2022-10-21 16:02:32 DEBUG    j= 11, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:02:32 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:02:32 DEBUG    j= 17, row1 = [14]
2022-10-21 16:02:32 DEBUG    j= 17, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:02:32 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:02:32 DEBUG    j= 23, row1 = [19]
2022-10-21 16:02:32 DEBUG    j= 23, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:02:32 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:02:32 DEBUG    j= 29, row1 = [24]
2022-10-21 16:02:32 DEBUG    j= 29, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:02:32 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:02:32 DEBUG    j= 35, row1 = [29]
2022-10-21 16:02:32 DEBUG    j= 35, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:02:32 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:02:32 DEBUG    j= 41, row1 = [34]
2022-10-21 16:02:32 DEBUG    j= 41, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:02:32 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:02:32 DEBUG    j= 47, row1 = [39]
2022-10-21 16:02:32 DEBUG    j= 47, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:02:32 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:02:32 DEBUG    j= 53, row1 = [44]
2022-10-21 16:02:32 DEBUG    j= 53, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:02:32 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:02:32 DEBUG    j= 59, row1 = [49]
2022-10-21 16:02:32 DEBUG    j= 59, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:02:32 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:02:32 DEBUG    j= 65, row1 = [54]
2022-10-21 16:02:32 DEBUG    j= 65, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:02:32 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:02:32 DEBUG    j= 71, row1 = [59]
2022-10-21 16:02:32 DEBUG    j= 71, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:02:32 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:02:32 DEBUG    j= 77, row1 = [64]
2022-10-21 16:02:32 DEBUG    j= 77, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:02:32 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:02:32 DEBUG    j= 83, row1 = [69]
2022-10-21 16:02:32 DEBUG    j= 83, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:02:32 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:02:32 DEBUG    j= 89, row1 = [74]
2022-10-21 16:02:32 DEBUG    j= 89, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:02:32 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:02:32 DEBUG    j= 95, row1 = [79]
2022-10-21 16:02:32 DEBUG    j= 95, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:02:32 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:02:32 DEBUG    j= 101, row1 = [84]
2022-10-21 16:02:32 DEBUG    j= 101, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:02:32 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:02:32 DEBUG    j= 107, row1 = [89]
2022-10-21 16:02:32 DEBUG    j= 107, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:02:32 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:02:32 DEBUG    j= 113, row1 = [94]
2022-10-21 16:02:32 DEBUG    j= 113, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:02:32 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:02:32 DEBUG    j= 119, row1 = [99]
2022-10-21 16:02:32 DEBUG    j= 119, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:02:32 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:02:32 DEBUG    j= 125, row1 = [104]
2022-10-21 16:02:32 DEBUG    j= 125, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:02:32 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:02:32 DEBUG    j= 131, row1 = [109]
2022-10-21 16:02:32 DEBUG    j= 131, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:02:32 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:02:32 DEBUG    j= 137, row1 = [114]
2022-10-21 16:02:32 DEBUG    j= 137, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:02:32 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:02:32 DEBUG    j= 143, row1 = [119]
2022-10-21 16:02:32 DEBUG    j= 143, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:02:32 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:02:32 DEBUG    j= 149, row1 = [124]
2022-10-21 16:02:32 DEBUG    j= 149, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:02:32 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:02:32 DEBUG    j= 155, row1 = [129]
2022-10-21 16:02:32 DEBUG    j= 155, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:02:32 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:02:32 DEBUG    j= 161, row1 = [134]
2022-10-21 16:02:32 DEBUG    j= 161, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:02:32 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:02:32 DEBUG    j= 167, row1 = [139]
2022-10-21 16:02:32 DEBUG    j= 167, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:02:32 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:02:32 DEBUG    j= 173, row1 = [144]
2022-10-21 16:02:32 DEBUG    j= 173, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:02:32 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:02:32 DEBUG    j= 179, row1 = [149]
2022-10-21 16:02:32 DEBUG    j= 179, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:02:32 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:02:32 DEBUG    j= 185, row1 = [154]
2022-10-21 16:02:32 DEBUG    j= 185, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:02:32 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:02:32 DEBUG    j= 191, row1 = [159]
2022-10-21 16:02:32 DEBUG    j= 191, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:02:32 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:02:32 DEBUG    j= 197, row1 = [164]
2022-10-21 16:02:32 DEBUG    j= 197, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:02:32 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:02:32 DEBUG    j= 203, row1 = [169]
2022-10-21 16:02:32 DEBUG    j= 203, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:02:32 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:02:32 DEBUG    j= 209, row1 = [174]
2022-10-21 16:02:32 DEBUG    j= 209, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:02:32 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:02:32 DEBUG    j= 215, row1 = [179]
2022-10-21 16:02:32 DEBUG    j= 215, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:02:32 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:02:32 DEBUG    j= 221, row1 = [184]
2022-10-21 16:02:32 DEBUG    j= 221, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:02:32 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:02:32 DEBUG    j= 227, row1 = [189]
2022-10-21 16:02:32 DEBUG    j= 227, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:02:32 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:02:32 DEBUG    j= 233, row1 = [194]
2022-10-21 16:02:32 DEBUG    j= 233, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:02:32 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:02:32 DEBUG    j= 239, row1 = [199]
2022-10-21 16:02:32 DEBUG    j= 239, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:02:32 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:02:32 DEBUG    j= 245, row1 = [204]
2022-10-21 16:02:32 DEBUG    j= 245, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:02:32 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:02:32 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:02:32 DEBUG    j= 251, row1 = [209]
2022-10-21 16:02:32 DEBUG    j= 251, row2 = 0
2022-10-21 16:02:32 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:02:32 INFO     For loop ended
2022-10-21 16:02:32 INFO     fun_blade_wake done
2022-10-21 16:02:32 DEBUG    Setting input for FSI
2022-10-21 16:02:32 DEBUG    len(blade_obj) = 2
2022-10-21 16:02:32 DEBUG    len(simu_fsi.data) = 8
2022-10-21 16:02:32 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 16:02:33 INFO     Additional masses sections
2022-10-21 16:02:33 INFO     **************************************************
2022-10-21 16:02:33 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 16:02:33 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 16:03:38 INFO     read_yaml conversion started!
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:03:40 DEBUG    inz0: 51
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:03:40 DEBUG    inz0: 51
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:03:40 DEBUG    inz0: 130
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:03:40 DEBUG    inz0: 130
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:03:40 DEBUG    inz0: 51
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:03:40 DEBUG    inz0: 51
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:03:40 DEBUG    inz0: 130
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:03:40 DEBUG    inz0: 130
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:03:40 DEBUG    inz0: 101
2022-10-21 16:03:40 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:03:40 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 16:03:40 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:03:40 DEBUG    inz0: 51
2022-10-21 16:03:40 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:03:40 DEBUG    inz0: 51
2022-10-21 16:03:41 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:03:41 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 16:03:41 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 16:03:41 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:03:41 DEBUG    inz0: 51
2022-10-21 16:03:41 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:03:41 DEBUG    inz0: 51
2022-10-21 16:03:42 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:03:42 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:03:42 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 16:03:42 DEBUG    matplotlib version 3.3.2
2022-10-21 16:03:42 DEBUG    interactive is False
2022-10-21 16:03:42 DEBUG    platform is linux
2022-10-21 16:03:42 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 16:03:42 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 16:03:42 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 16:03:42 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:03:42 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:03:43 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:03:43 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 16:03:44 INFO     i = 0,len(blade_obj) = 0
2022-10-21 16:03:44 INFO     i = 0,len(blade_obj) = 1
2022-10-21 16:03:44 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:03:44 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 16:03:44 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:03:44 DEBUG    wake = []
2022-10-21 16:03:44 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 16:03:44 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:03:44 INFO     inside fun_blade_wake
2022-10-21 16:03:44 DEBUG    wake was empty, creating new wake
2022-10-21 16:03:44 DEBUG    wake index: w = 0
2022-10-21 16:03:44 DEBUG    (obj.mx+1) = 6
2022-10-21 16:03:44 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:03:44 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:03:44 INFO     For loop started
2022-10-21 16:03:44 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:03:44 DEBUG    j= 5, row1 = [4]
2022-10-21 16:03:44 DEBUG    j= 5, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:03:44 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:03:44 DEBUG    j= 11, row1 = [9]
2022-10-21 16:03:44 DEBUG    j= 11, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:03:44 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:03:44 DEBUG    j= 17, row1 = [14]
2022-10-21 16:03:44 DEBUG    j= 17, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:03:44 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:03:44 DEBUG    j= 23, row1 = [19]
2022-10-21 16:03:44 DEBUG    j= 23, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:03:44 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:03:44 DEBUG    j= 29, row1 = [24]
2022-10-21 16:03:44 DEBUG    j= 29, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:03:44 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:03:44 DEBUG    j= 35, row1 = [29]
2022-10-21 16:03:44 DEBUG    j= 35, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:03:44 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:03:44 DEBUG    j= 41, row1 = [34]
2022-10-21 16:03:44 DEBUG    j= 41, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:03:44 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:03:44 DEBUG    j= 47, row1 = [39]
2022-10-21 16:03:44 DEBUG    j= 47, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:03:44 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:03:44 DEBUG    j= 53, row1 = [44]
2022-10-21 16:03:44 DEBUG    j= 53, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:03:44 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:03:44 DEBUG    j= 59, row1 = [49]
2022-10-21 16:03:44 DEBUG    j= 59, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:03:44 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:03:44 DEBUG    j= 65, row1 = [54]
2022-10-21 16:03:44 DEBUG    j= 65, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:03:44 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:03:44 DEBUG    j= 71, row1 = [59]
2022-10-21 16:03:44 DEBUG    j= 71, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:03:44 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:03:44 DEBUG    j= 77, row1 = [64]
2022-10-21 16:03:44 DEBUG    j= 77, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:03:44 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:03:44 DEBUG    j= 83, row1 = [69]
2022-10-21 16:03:44 DEBUG    j= 83, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:03:44 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:03:44 DEBUG    j= 89, row1 = [74]
2022-10-21 16:03:44 DEBUG    j= 89, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:03:44 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:03:44 DEBUG    j= 95, row1 = [79]
2022-10-21 16:03:44 DEBUG    j= 95, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:03:44 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:03:44 DEBUG    j= 101, row1 = [84]
2022-10-21 16:03:44 DEBUG    j= 101, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:03:44 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:03:44 DEBUG    j= 107, row1 = [89]
2022-10-21 16:03:44 DEBUG    j= 107, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:03:44 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:03:44 DEBUG    j= 113, row1 = [94]
2022-10-21 16:03:44 DEBUG    j= 113, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:03:44 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:03:44 DEBUG    j= 119, row1 = [99]
2022-10-21 16:03:44 DEBUG    j= 119, row2 = 0
2022-10-21 16:03:44 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:03:44 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:03:44 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:03:45 DEBUG    j= 125, row1 = [104]
2022-10-21 16:03:45 DEBUG    j= 125, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:03:45 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:03:45 DEBUG    j= 131, row1 = [109]
2022-10-21 16:03:45 DEBUG    j= 131, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:03:45 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:03:45 DEBUG    j= 137, row1 = [114]
2022-10-21 16:03:45 DEBUG    j= 137, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:03:45 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:03:45 DEBUG    j= 143, row1 = [119]
2022-10-21 16:03:45 DEBUG    j= 143, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:03:45 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:03:45 DEBUG    j= 149, row1 = [124]
2022-10-21 16:03:45 DEBUG    j= 149, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:03:45 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:03:45 DEBUG    j= 155, row1 = [129]
2022-10-21 16:03:45 DEBUG    j= 155, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:03:45 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:03:45 DEBUG    j= 161, row1 = [134]
2022-10-21 16:03:45 DEBUG    j= 161, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:03:45 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:03:45 DEBUG    j= 167, row1 = [139]
2022-10-21 16:03:45 DEBUG    j= 167, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:03:45 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:03:45 DEBUG    j= 173, row1 = [144]
2022-10-21 16:03:45 DEBUG    j= 173, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:03:45 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:03:45 DEBUG    j= 179, row1 = [149]
2022-10-21 16:03:45 DEBUG    j= 179, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:03:45 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:03:45 DEBUG    j= 185, row1 = [154]
2022-10-21 16:03:45 DEBUG    j= 185, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:03:45 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:03:45 DEBUG    j= 191, row1 = [159]
2022-10-21 16:03:45 DEBUG    j= 191, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:03:45 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:03:45 DEBUG    j= 197, row1 = [164]
2022-10-21 16:03:45 DEBUG    j= 197, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:03:45 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:03:45 DEBUG    j= 203, row1 = [169]
2022-10-21 16:03:45 DEBUG    j= 203, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:03:45 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:03:45 DEBUG    j= 209, row1 = [174]
2022-10-21 16:03:45 DEBUG    j= 209, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:03:45 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:03:45 DEBUG    j= 215, row1 = [179]
2022-10-21 16:03:45 DEBUG    j= 215, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:03:45 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:03:45 DEBUG    j= 221, row1 = [184]
2022-10-21 16:03:45 DEBUG    j= 221, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:03:45 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:03:45 DEBUG    j= 227, row1 = [189]
2022-10-21 16:03:45 DEBUG    j= 227, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:03:45 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:03:45 DEBUG    j= 233, row1 = [194]
2022-10-21 16:03:45 DEBUG    j= 233, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:03:45 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:03:45 DEBUG    j= 239, row1 = [199]
2022-10-21 16:03:45 DEBUG    j= 239, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:03:45 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:03:45 DEBUG    j= 245, row1 = [204]
2022-10-21 16:03:45 DEBUG    j= 245, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:03:45 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:03:45 DEBUG    j= 251, row1 = [209]
2022-10-21 16:03:45 DEBUG    j= 251, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:03:45 INFO     For loop ended
2022-10-21 16:03:45 INFO     fun_blade_wake done
2022-10-21 16:03:45 DEBUG    Setting input for FSI
2022-10-21 16:03:45 DEBUG    len(blade_obj) = 2
2022-10-21 16:03:45 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:03:45 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 16:03:45 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:03:45 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 16:03:45 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 16:03:45 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:03:45 INFO     inside fun_blade_wake
2022-10-21 16:03:45 DEBUG    wake was not empty, appending new wake
2022-10-21 16:03:45 DEBUG    wake index: w = 1
2022-10-21 16:03:45 DEBUG    wake property.shape: (2, 2)
2022-10-21 16:03:45 DEBUG    (obj.mx+1) = 6
2022-10-21 16:03:45 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:03:45 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:03:45 INFO     For loop started
2022-10-21 16:03:45 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:03:45 DEBUG    j= 5, row1 = [4]
2022-10-21 16:03:45 DEBUG    j= 5, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:03:45 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:03:45 DEBUG    j= 11, row1 = [9]
2022-10-21 16:03:45 DEBUG    j= 11, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:03:45 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:03:45 DEBUG    j= 17, row1 = [14]
2022-10-21 16:03:45 DEBUG    j= 17, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:03:45 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:03:45 DEBUG    j= 23, row1 = [19]
2022-10-21 16:03:45 DEBUG    j= 23, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:03:45 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:03:45 DEBUG    j= 29, row1 = [24]
2022-10-21 16:03:45 DEBUG    j= 29, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:03:45 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:03:45 DEBUG    j= 35, row1 = [29]
2022-10-21 16:03:45 DEBUG    j= 35, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:03:45 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:03:45 DEBUG    j= 41, row1 = [34]
2022-10-21 16:03:45 DEBUG    j= 41, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:03:45 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:03:45 DEBUG    j= 47, row1 = [39]
2022-10-21 16:03:45 DEBUG    j= 47, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:03:45 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:03:45 DEBUG    j= 53, row1 = [44]
2022-10-21 16:03:45 DEBUG    j= 53, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:03:45 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:03:45 DEBUG    j= 59, row1 = [49]
2022-10-21 16:03:45 DEBUG    j= 59, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:03:45 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:03:45 DEBUG    j= 65, row1 = [54]
2022-10-21 16:03:45 DEBUG    j= 65, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:03:45 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:03:45 DEBUG    j= 71, row1 = [59]
2022-10-21 16:03:45 DEBUG    j= 71, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:03:45 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:03:45 DEBUG    j= 77, row1 = [64]
2022-10-21 16:03:45 DEBUG    j= 77, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:03:45 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:03:45 DEBUG    j= 83, row1 = [69]
2022-10-21 16:03:45 DEBUG    j= 83, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:03:45 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:03:45 DEBUG    j= 89, row1 = [74]
2022-10-21 16:03:45 DEBUG    j= 89, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:03:45 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:03:45 DEBUG    j= 95, row1 = [79]
2022-10-21 16:03:45 DEBUG    j= 95, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:03:45 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:03:45 DEBUG    j= 101, row1 = [84]
2022-10-21 16:03:45 DEBUG    j= 101, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:03:45 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:03:45 DEBUG    j= 107, row1 = [89]
2022-10-21 16:03:45 DEBUG    j= 107, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:03:45 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:03:45 DEBUG    j= 113, row1 = [94]
2022-10-21 16:03:45 DEBUG    j= 113, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:03:45 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:03:45 DEBUG    j= 119, row1 = [99]
2022-10-21 16:03:45 DEBUG    j= 119, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:03:45 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:03:45 DEBUG    j= 125, row1 = [104]
2022-10-21 16:03:45 DEBUG    j= 125, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:03:45 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:03:45 DEBUG    j= 131, row1 = [109]
2022-10-21 16:03:45 DEBUG    j= 131, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:03:45 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:03:45 DEBUG    j= 137, row1 = [114]
2022-10-21 16:03:45 DEBUG    j= 137, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:03:45 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:03:45 DEBUG    j= 143, row1 = [119]
2022-10-21 16:03:45 DEBUG    j= 143, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:03:45 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:03:45 DEBUG    j= 149, row1 = [124]
2022-10-21 16:03:45 DEBUG    j= 149, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:03:45 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:03:45 DEBUG    j= 155, row1 = [129]
2022-10-21 16:03:45 DEBUG    j= 155, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:03:45 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:03:45 DEBUG    j= 161, row1 = [134]
2022-10-21 16:03:45 DEBUG    j= 161, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:03:45 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:03:45 DEBUG    j= 167, row1 = [139]
2022-10-21 16:03:45 DEBUG    j= 167, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:03:45 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:03:45 DEBUG    j= 173, row1 = [144]
2022-10-21 16:03:45 DEBUG    j= 173, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:03:45 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:03:45 DEBUG    j= 179, row1 = [149]
2022-10-21 16:03:45 DEBUG    j= 179, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:03:45 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:03:45 DEBUG    j= 185, row1 = [154]
2022-10-21 16:03:45 DEBUG    j= 185, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:03:45 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:03:45 DEBUG    j= 191, row1 = [159]
2022-10-21 16:03:45 DEBUG    j= 191, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:03:45 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:03:45 DEBUG    j= 197, row1 = [164]
2022-10-21 16:03:45 DEBUG    j= 197, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:03:45 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:03:45 DEBUG    j= 203, row1 = [169]
2022-10-21 16:03:45 DEBUG    j= 203, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:03:45 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:03:45 DEBUG    j= 209, row1 = [174]
2022-10-21 16:03:45 DEBUG    j= 209, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:03:45 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:03:45 DEBUG    j= 215, row1 = [179]
2022-10-21 16:03:45 DEBUG    j= 215, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:03:45 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:03:45 DEBUG    j= 221, row1 = [184]
2022-10-21 16:03:45 DEBUG    j= 221, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:03:45 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:03:45 DEBUG    j= 227, row1 = [189]
2022-10-21 16:03:45 DEBUG    j= 227, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:03:45 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:03:45 DEBUG    j= 233, row1 = [194]
2022-10-21 16:03:45 DEBUG    j= 233, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:03:45 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:03:45 DEBUG    j= 239, row1 = [199]
2022-10-21 16:03:45 DEBUG    j= 239, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:03:45 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:03:45 DEBUG    j= 245, row1 = [204]
2022-10-21 16:03:45 DEBUG    j= 245, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:03:45 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:03:45 DEBUG    j= 251, row1 = [209]
2022-10-21 16:03:45 DEBUG    j= 251, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:03:45 INFO     For loop ended
2022-10-21 16:03:45 INFO     fun_blade_wake done
2022-10-21 16:03:45 DEBUG    Setting input for FSI
2022-10-21 16:03:45 DEBUG    len(blade_obj) = 2
2022-10-21 16:03:45 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:03:45 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 16:03:45 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:03:45 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 16:03:45 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 16:03:45 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:03:45 INFO     inside fun_blade_wake
2022-10-21 16:03:45 DEBUG    wake was not empty, appending new wake
2022-10-21 16:03:45 DEBUG    wake index: w = 2
2022-10-21 16:03:45 DEBUG    wake property.shape: (3, 2)
2022-10-21 16:03:45 DEBUG    (obj.mx+1) = 6
2022-10-21 16:03:45 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:03:45 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:03:45 INFO     For loop started
2022-10-21 16:03:45 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:03:45 DEBUG    j= 5, row1 = [4]
2022-10-21 16:03:45 DEBUG    j= 5, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:03:45 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:03:45 DEBUG    j= 11, row1 = [9]
2022-10-21 16:03:45 DEBUG    j= 11, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:03:45 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:03:45 DEBUG    j= 17, row1 = [14]
2022-10-21 16:03:45 DEBUG    j= 17, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:03:45 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:03:45 DEBUG    j= 23, row1 = [19]
2022-10-21 16:03:45 DEBUG    j= 23, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:03:45 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:03:45 DEBUG    j= 29, row1 = [24]
2022-10-21 16:03:45 DEBUG    j= 29, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:03:45 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:03:45 DEBUG    j= 35, row1 = [29]
2022-10-21 16:03:45 DEBUG    j= 35, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:03:45 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:03:45 DEBUG    j= 41, row1 = [34]
2022-10-21 16:03:45 DEBUG    j= 41, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:03:45 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:03:45 DEBUG    j= 47, row1 = [39]
2022-10-21 16:03:45 DEBUG    j= 47, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:03:45 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:03:45 DEBUG    j= 53, row1 = [44]
2022-10-21 16:03:45 DEBUG    j= 53, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:03:45 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:03:45 DEBUG    j= 59, row1 = [49]
2022-10-21 16:03:45 DEBUG    j= 59, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:03:45 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:03:45 DEBUG    j= 65, row1 = [54]
2022-10-21 16:03:45 DEBUG    j= 65, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:03:45 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:03:45 DEBUG    j= 71, row1 = [59]
2022-10-21 16:03:45 DEBUG    j= 71, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:03:45 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:03:45 DEBUG    j= 77, row1 = [64]
2022-10-21 16:03:45 DEBUG    j= 77, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:03:45 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:03:45 DEBUG    j= 83, row1 = [69]
2022-10-21 16:03:45 DEBUG    j= 83, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:03:45 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:03:45 DEBUG    j= 89, row1 = [74]
2022-10-21 16:03:45 DEBUG    j= 89, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:03:45 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:03:45 DEBUG    j= 95, row1 = [79]
2022-10-21 16:03:45 DEBUG    j= 95, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:03:45 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:03:45 DEBUG    j= 101, row1 = [84]
2022-10-21 16:03:45 DEBUG    j= 101, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:03:45 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:03:45 DEBUG    j= 107, row1 = [89]
2022-10-21 16:03:45 DEBUG    j= 107, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:03:45 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:03:45 DEBUG    j= 113, row1 = [94]
2022-10-21 16:03:45 DEBUG    j= 113, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:03:45 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:03:45 DEBUG    j= 119, row1 = [99]
2022-10-21 16:03:45 DEBUG    j= 119, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:03:45 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:03:45 DEBUG    j= 125, row1 = [104]
2022-10-21 16:03:45 DEBUG    j= 125, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:03:45 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:03:45 DEBUG    j= 131, row1 = [109]
2022-10-21 16:03:45 DEBUG    j= 131, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:03:45 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:03:45 DEBUG    j= 137, row1 = [114]
2022-10-21 16:03:45 DEBUG    j= 137, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:03:45 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:03:45 DEBUG    j= 143, row1 = [119]
2022-10-21 16:03:45 DEBUG    j= 143, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:03:45 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:03:45 DEBUG    j= 149, row1 = [124]
2022-10-21 16:03:45 DEBUG    j= 149, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:03:45 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:03:45 DEBUG    j= 155, row1 = [129]
2022-10-21 16:03:45 DEBUG    j= 155, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:03:45 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:03:45 DEBUG    j= 161, row1 = [134]
2022-10-21 16:03:45 DEBUG    j= 161, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:03:45 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:03:45 DEBUG    j= 167, row1 = [139]
2022-10-21 16:03:45 DEBUG    j= 167, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:03:45 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:03:45 DEBUG    j= 173, row1 = [144]
2022-10-21 16:03:45 DEBUG    j= 173, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:03:45 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:03:45 DEBUG    j= 179, row1 = [149]
2022-10-21 16:03:45 DEBUG    j= 179, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:03:45 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:03:45 DEBUG    j= 185, row1 = [154]
2022-10-21 16:03:45 DEBUG    j= 185, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:03:45 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:03:45 DEBUG    j= 191, row1 = [159]
2022-10-21 16:03:45 DEBUG    j= 191, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:03:45 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:03:45 DEBUG    j= 197, row1 = [164]
2022-10-21 16:03:45 DEBUG    j= 197, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:03:45 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:03:45 DEBUG    j= 203, row1 = [169]
2022-10-21 16:03:45 DEBUG    j= 203, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:03:45 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:03:45 DEBUG    j= 209, row1 = [174]
2022-10-21 16:03:45 DEBUG    j= 209, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:03:45 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:03:45 DEBUG    j= 215, row1 = [179]
2022-10-21 16:03:45 DEBUG    j= 215, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:03:45 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:03:45 DEBUG    j= 221, row1 = [184]
2022-10-21 16:03:45 DEBUG    j= 221, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:03:45 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:03:45 DEBUG    j= 227, row1 = [189]
2022-10-21 16:03:45 DEBUG    j= 227, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:03:45 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:03:45 DEBUG    j= 233, row1 = [194]
2022-10-21 16:03:45 DEBUG    j= 233, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:03:45 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:03:45 DEBUG    j= 239, row1 = [199]
2022-10-21 16:03:45 DEBUG    j= 239, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:03:45 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:03:45 DEBUG    j= 245, row1 = [204]
2022-10-21 16:03:45 DEBUG    j= 245, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:03:45 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:03:45 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:03:45 DEBUG    j= 251, row1 = [209]
2022-10-21 16:03:45 DEBUG    j= 251, row2 = 0
2022-10-21 16:03:45 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:03:45 INFO     For loop ended
2022-10-21 16:03:45 INFO     fun_blade_wake done
2022-10-21 16:03:45 DEBUG    Setting input for FSI
2022-10-21 16:03:45 DEBUG    len(blade_obj) = 2
2022-10-21 16:03:45 DEBUG    len(simu_fsi.data) = 8
2022-10-21 16:03:45 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 16:03:46 INFO     Additional masses sections
2022-10-21 16:03:46 INFO     **************************************************
2022-10-21 16:03:46 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 16:03:46 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 16:06:21 DEBUG    len(simu_struct.constraints) = 4
2022-10-21 16:06:21 DEBUG    simu_struct.constraints = [SimulationSettings.Constraint(type='rigidsupport', nodes=array([2, 0]), phi1=array([6.94518669e-310, 4.65352092e-310, 0.00000000e+000])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([22, 23]), phi1=array([6.94518669e-310, 4.65352092e-310, 0.00000000e+000])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([73,  0]), phi1=array([6.94518669e-310, 4.65352092e-310, 0.00000000e+000])), SimulationSettings.Constraint(type='fixed', nodes=0, phi1=array([0, 0, 0]))]
2022-10-21 16:06:21 DEBUG    remo_internal_const = [2, 73, 73]
2022-10-21 16:15:20 INFO     read_yaml conversion started!
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:15:22 DEBUG    inz0: 51
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:15:22 DEBUG    inz0: 51
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:15:22 DEBUG    inz0: 130
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:15:22 DEBUG    inz0: 130
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:15:22 DEBUG    inz0: 51
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:15:22 DEBUG    inz0: 51
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:15:22 DEBUG    inz0: 130
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:15:22 DEBUG    inz0: 130
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:15:22 DEBUG    inz0: 101
2022-10-21 16:15:22 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:15:22 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 16:15:22 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:15:22 DEBUG    inz0: 51
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:15:22 DEBUG    inz0: 51
2022-10-21 16:15:22 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:15:22 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 16:15:22 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:15:22 DEBUG    inz0: 51
2022-10-21 16:15:22 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:15:22 DEBUG    inz0: 51
2022-10-21 16:15:24 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:15:24 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:15:24 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 16:15:24 DEBUG    matplotlib version 3.3.2
2022-10-21 16:15:24 DEBUG    interactive is False
2022-10-21 16:15:24 DEBUG    platform is linux
2022-10-21 16:15:24 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 16:15:24 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 16:15:24 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 16:15:24 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:15:24 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:16:27 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:27 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:16:28 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 16:19:05 INFO     read_yaml conversion started!
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:19:07 DEBUG    inz0: 51
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:19:07 DEBUG    inz0: 51
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:19:07 DEBUG    inz0: 130
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:19:07 DEBUG    inz0: 130
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:19:07 DEBUG    inz0: 51
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:19:07 DEBUG    inz0: 51
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:19:07 DEBUG    inz0: 130
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:19:07 DEBUG    inz0: 130
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:19:07 DEBUG    inz0: 101
2022-10-21 16:19:07 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:19:07 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 16:19:07 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:19:07 DEBUG    inz0: 51
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:19:07 DEBUG    inz0: 51
2022-10-21 16:19:07 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:19:07 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 16:19:07 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:19:07 DEBUG    inz0: 51
2022-10-21 16:19:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:19:07 DEBUG    inz0: 51
2022-10-21 16:19:08 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:19:08 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:19:08 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 16:19:08 DEBUG    matplotlib version 3.3.2
2022-10-21 16:19:08 DEBUG    interactive is False
2022-10-21 16:19:08 DEBUG    platform is linux
2022-10-21 16:19:08 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 16:19:08 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 16:19:08 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 16:19:09 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:19:09 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:19:09 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:19:09 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 16:19:10 INFO     i = 0,len(blade_obj) = 0
2022-10-21 16:19:10 INFO     i = 0,len(blade_obj) = 1
2022-10-21 16:19:10 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:19:10 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 16:19:10 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:19:10 DEBUG    wake = []
2022-10-21 16:19:10 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 16:19:10 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:19:10 INFO     inside fun_blade_wake
2022-10-21 16:19:10 DEBUG    wake was empty, creating new wake
2022-10-21 16:19:10 DEBUG    wake index: w = 0
2022-10-21 16:19:10 DEBUG    (obj.mx+1) = 6
2022-10-21 16:19:10 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:19:10 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:19:10 INFO     For loop started
2022-10-21 16:19:10 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:19:10 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:19:10 DEBUG    j= 5, row1 = [4]
2022-10-21 16:19:10 DEBUG    j= 5, row2 = 0
2022-10-21 16:19:10 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:19:10 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:19:10 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:19:10 DEBUG    j= 11, row1 = [9]
2022-10-21 16:19:10 DEBUG    j= 11, row2 = 0
2022-10-21 16:19:10 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:19:11 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:19:11 DEBUG    j= 17, row1 = [14]
2022-10-21 16:19:11 DEBUG    j= 17, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:19:11 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:19:11 DEBUG    j= 23, row1 = [19]
2022-10-21 16:19:11 DEBUG    j= 23, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:19:11 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:19:11 DEBUG    j= 29, row1 = [24]
2022-10-21 16:19:11 DEBUG    j= 29, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:19:11 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:19:11 DEBUG    j= 35, row1 = [29]
2022-10-21 16:19:11 DEBUG    j= 35, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:19:11 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:19:11 DEBUG    j= 41, row1 = [34]
2022-10-21 16:19:11 DEBUG    j= 41, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:19:11 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:19:11 DEBUG    j= 47, row1 = [39]
2022-10-21 16:19:11 DEBUG    j= 47, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:19:11 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:19:11 DEBUG    j= 53, row1 = [44]
2022-10-21 16:19:11 DEBUG    j= 53, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:19:11 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:19:11 DEBUG    j= 59, row1 = [49]
2022-10-21 16:19:11 DEBUG    j= 59, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:19:11 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:19:11 DEBUG    j= 65, row1 = [54]
2022-10-21 16:19:11 DEBUG    j= 65, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:19:11 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:19:11 DEBUG    j= 71, row1 = [59]
2022-10-21 16:19:11 DEBUG    j= 71, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:19:11 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:19:11 DEBUG    j= 77, row1 = [64]
2022-10-21 16:19:11 DEBUG    j= 77, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:19:11 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:19:11 DEBUG    j= 83, row1 = [69]
2022-10-21 16:19:11 DEBUG    j= 83, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:19:11 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:19:11 DEBUG    j= 89, row1 = [74]
2022-10-21 16:19:11 DEBUG    j= 89, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:19:11 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:19:11 DEBUG    j= 95, row1 = [79]
2022-10-21 16:19:11 DEBUG    j= 95, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:19:11 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:19:11 DEBUG    j= 101, row1 = [84]
2022-10-21 16:19:11 DEBUG    j= 101, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:19:11 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:19:11 DEBUG    j= 107, row1 = [89]
2022-10-21 16:19:11 DEBUG    j= 107, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:19:11 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:19:11 DEBUG    j= 113, row1 = [94]
2022-10-21 16:19:11 DEBUG    j= 113, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:19:11 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:19:11 DEBUG    j= 119, row1 = [99]
2022-10-21 16:19:11 DEBUG    j= 119, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:19:11 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:19:11 DEBUG    j= 125, row1 = [104]
2022-10-21 16:19:11 DEBUG    j= 125, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:19:11 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:19:11 DEBUG    j= 131, row1 = [109]
2022-10-21 16:19:11 DEBUG    j= 131, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:19:11 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:19:11 DEBUG    j= 137, row1 = [114]
2022-10-21 16:19:11 DEBUG    j= 137, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:19:11 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:19:11 DEBUG    j= 143, row1 = [119]
2022-10-21 16:19:11 DEBUG    j= 143, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:19:11 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:19:11 DEBUG    j= 149, row1 = [124]
2022-10-21 16:19:11 DEBUG    j= 149, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:19:11 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:19:11 DEBUG    j= 155, row1 = [129]
2022-10-21 16:19:11 DEBUG    j= 155, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:19:11 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:19:11 DEBUG    j= 161, row1 = [134]
2022-10-21 16:19:11 DEBUG    j= 161, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:19:11 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:19:11 DEBUG    j= 167, row1 = [139]
2022-10-21 16:19:11 DEBUG    j= 167, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:19:11 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:19:11 DEBUG    j= 173, row1 = [144]
2022-10-21 16:19:11 DEBUG    j= 173, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:19:11 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:19:11 DEBUG    j= 179, row1 = [149]
2022-10-21 16:19:11 DEBUG    j= 179, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:19:11 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:19:11 DEBUG    j= 185, row1 = [154]
2022-10-21 16:19:11 DEBUG    j= 185, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:19:11 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:19:11 DEBUG    j= 191, row1 = [159]
2022-10-21 16:19:11 DEBUG    j= 191, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:19:11 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:19:11 DEBUG    j= 197, row1 = [164]
2022-10-21 16:19:11 DEBUG    j= 197, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:19:11 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:19:11 DEBUG    j= 203, row1 = [169]
2022-10-21 16:19:11 DEBUG    j= 203, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:19:11 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:19:11 DEBUG    j= 209, row1 = [174]
2022-10-21 16:19:11 DEBUG    j= 209, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:19:11 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:19:11 DEBUG    j= 215, row1 = [179]
2022-10-21 16:19:11 DEBUG    j= 215, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:19:11 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:19:11 DEBUG    j= 221, row1 = [184]
2022-10-21 16:19:11 DEBUG    j= 221, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:19:11 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:19:11 DEBUG    j= 227, row1 = [189]
2022-10-21 16:19:11 DEBUG    j= 227, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:19:11 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:19:11 DEBUG    j= 233, row1 = [194]
2022-10-21 16:19:11 DEBUG    j= 233, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:19:11 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:19:11 DEBUG    j= 239, row1 = [199]
2022-10-21 16:19:11 DEBUG    j= 239, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:19:11 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:19:11 DEBUG    j= 245, row1 = [204]
2022-10-21 16:19:11 DEBUG    j= 245, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:19:11 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:19:11 DEBUG    j= 251, row1 = [209]
2022-10-21 16:19:11 DEBUG    j= 251, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:19:11 INFO     For loop ended
2022-10-21 16:19:11 INFO     fun_blade_wake done
2022-10-21 16:19:11 DEBUG    Setting input for FSI
2022-10-21 16:19:11 DEBUG    len(blade_obj) = 2
2022-10-21 16:19:11 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:19:11 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 16:19:11 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:19:11 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 16:19:11 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 16:19:11 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:19:11 INFO     inside fun_blade_wake
2022-10-21 16:19:11 DEBUG    wake was not empty, appending new wake
2022-10-21 16:19:11 DEBUG    wake index: w = 1
2022-10-21 16:19:11 DEBUG    wake property.shape: (2, 2)
2022-10-21 16:19:11 DEBUG    (obj.mx+1) = 6
2022-10-21 16:19:11 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:19:11 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:19:11 INFO     For loop started
2022-10-21 16:19:11 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:19:11 DEBUG    j= 5, row1 = [4]
2022-10-21 16:19:11 DEBUG    j= 5, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:19:11 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:19:11 DEBUG    j= 11, row1 = [9]
2022-10-21 16:19:11 DEBUG    j= 11, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:19:11 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:19:11 DEBUG    j= 17, row1 = [14]
2022-10-21 16:19:11 DEBUG    j= 17, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:19:11 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:19:11 DEBUG    j= 23, row1 = [19]
2022-10-21 16:19:11 DEBUG    j= 23, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:19:11 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:19:11 DEBUG    j= 29, row1 = [24]
2022-10-21 16:19:11 DEBUG    j= 29, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:19:11 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:19:11 DEBUG    j= 35, row1 = [29]
2022-10-21 16:19:11 DEBUG    j= 35, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:19:11 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:19:11 DEBUG    j= 41, row1 = [34]
2022-10-21 16:19:11 DEBUG    j= 41, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:19:11 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:19:11 DEBUG    j= 47, row1 = [39]
2022-10-21 16:19:11 DEBUG    j= 47, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:19:11 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:19:11 DEBUG    j= 53, row1 = [44]
2022-10-21 16:19:11 DEBUG    j= 53, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:19:11 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:19:11 DEBUG    j= 59, row1 = [49]
2022-10-21 16:19:11 DEBUG    j= 59, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:19:11 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:19:11 DEBUG    j= 65, row1 = [54]
2022-10-21 16:19:11 DEBUG    j= 65, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:19:11 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:19:11 DEBUG    j= 71, row1 = [59]
2022-10-21 16:19:11 DEBUG    j= 71, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:19:11 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:19:11 DEBUG    j= 77, row1 = [64]
2022-10-21 16:19:11 DEBUG    j= 77, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:19:11 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:19:11 DEBUG    j= 83, row1 = [69]
2022-10-21 16:19:11 DEBUG    j= 83, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:19:11 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:19:11 DEBUG    j= 89, row1 = [74]
2022-10-21 16:19:11 DEBUG    j= 89, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:19:11 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:19:11 DEBUG    j= 95, row1 = [79]
2022-10-21 16:19:11 DEBUG    j= 95, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:19:11 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:19:11 DEBUG    j= 101, row1 = [84]
2022-10-21 16:19:11 DEBUG    j= 101, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:19:11 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:19:11 DEBUG    j= 107, row1 = [89]
2022-10-21 16:19:11 DEBUG    j= 107, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:19:11 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:19:11 DEBUG    j= 113, row1 = [94]
2022-10-21 16:19:11 DEBUG    j= 113, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:19:11 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:19:11 DEBUG    j= 119, row1 = [99]
2022-10-21 16:19:11 DEBUG    j= 119, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:19:11 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:19:11 DEBUG    j= 125, row1 = [104]
2022-10-21 16:19:11 DEBUG    j= 125, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:19:11 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:19:11 DEBUG    j= 131, row1 = [109]
2022-10-21 16:19:11 DEBUG    j= 131, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:19:11 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:19:11 DEBUG    j= 137, row1 = [114]
2022-10-21 16:19:11 DEBUG    j= 137, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:19:11 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:19:11 DEBUG    j= 143, row1 = [119]
2022-10-21 16:19:11 DEBUG    j= 143, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:19:11 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:19:11 DEBUG    j= 149, row1 = [124]
2022-10-21 16:19:11 DEBUG    j= 149, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:19:11 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:19:11 DEBUG    j= 155, row1 = [129]
2022-10-21 16:19:11 DEBUG    j= 155, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:19:11 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:19:11 DEBUG    j= 161, row1 = [134]
2022-10-21 16:19:11 DEBUG    j= 161, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:19:11 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:19:11 DEBUG    j= 167, row1 = [139]
2022-10-21 16:19:11 DEBUG    j= 167, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:19:11 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:19:11 DEBUG    j= 173, row1 = [144]
2022-10-21 16:19:11 DEBUG    j= 173, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:19:11 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:19:11 DEBUG    j= 179, row1 = [149]
2022-10-21 16:19:11 DEBUG    j= 179, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:19:11 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:19:11 DEBUG    j= 185, row1 = [154]
2022-10-21 16:19:11 DEBUG    j= 185, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:19:11 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:19:11 DEBUG    j= 191, row1 = [159]
2022-10-21 16:19:11 DEBUG    j= 191, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:19:11 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:19:11 DEBUG    j= 197, row1 = [164]
2022-10-21 16:19:11 DEBUG    j= 197, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:19:11 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:19:11 DEBUG    j= 203, row1 = [169]
2022-10-21 16:19:11 DEBUG    j= 203, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:19:11 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:19:11 DEBUG    j= 209, row1 = [174]
2022-10-21 16:19:11 DEBUG    j= 209, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:19:11 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:19:11 DEBUG    j= 215, row1 = [179]
2022-10-21 16:19:11 DEBUG    j= 215, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:19:11 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:19:11 DEBUG    j= 221, row1 = [184]
2022-10-21 16:19:11 DEBUG    j= 221, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:19:11 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:19:11 DEBUG    j= 227, row1 = [189]
2022-10-21 16:19:11 DEBUG    j= 227, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:19:11 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:19:11 DEBUG    j= 233, row1 = [194]
2022-10-21 16:19:11 DEBUG    j= 233, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:19:11 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:19:11 DEBUG    j= 239, row1 = [199]
2022-10-21 16:19:11 DEBUG    j= 239, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:19:11 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:19:11 DEBUG    j= 245, row1 = [204]
2022-10-21 16:19:11 DEBUG    j= 245, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:19:11 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:19:11 DEBUG    j= 251, row1 = [209]
2022-10-21 16:19:11 DEBUG    j= 251, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:19:11 INFO     For loop ended
2022-10-21 16:19:11 INFO     fun_blade_wake done
2022-10-21 16:19:11 DEBUG    Setting input for FSI
2022-10-21 16:19:11 DEBUG    len(blade_obj) = 2
2022-10-21 16:19:11 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:19:11 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 16:19:11 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:19:11 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 16:19:11 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 16:19:11 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:19:11 INFO     inside fun_blade_wake
2022-10-21 16:19:11 DEBUG    wake was not empty, appending new wake
2022-10-21 16:19:11 DEBUG    wake index: w = 2
2022-10-21 16:19:11 DEBUG    wake property.shape: (3, 2)
2022-10-21 16:19:11 DEBUG    (obj.mx+1) = 6
2022-10-21 16:19:11 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:19:11 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:19:11 INFO     For loop started
2022-10-21 16:19:11 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:19:11 DEBUG    j= 5, row1 = [4]
2022-10-21 16:19:11 DEBUG    j= 5, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:19:11 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:19:11 DEBUG    j= 11, row1 = [9]
2022-10-21 16:19:11 DEBUG    j= 11, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:19:11 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:19:11 DEBUG    j= 17, row1 = [14]
2022-10-21 16:19:11 DEBUG    j= 17, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:19:11 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:19:11 DEBUG    j= 23, row1 = [19]
2022-10-21 16:19:11 DEBUG    j= 23, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:19:11 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:19:11 DEBUG    j= 29, row1 = [24]
2022-10-21 16:19:11 DEBUG    j= 29, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:19:11 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:19:11 DEBUG    j= 35, row1 = [29]
2022-10-21 16:19:11 DEBUG    j= 35, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:19:11 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:19:11 DEBUG    j= 41, row1 = [34]
2022-10-21 16:19:11 DEBUG    j= 41, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:19:11 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:19:11 DEBUG    j= 47, row1 = [39]
2022-10-21 16:19:11 DEBUG    j= 47, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:19:11 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:19:11 DEBUG    j= 53, row1 = [44]
2022-10-21 16:19:11 DEBUG    j= 53, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:19:11 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:19:11 DEBUG    j= 59, row1 = [49]
2022-10-21 16:19:11 DEBUG    j= 59, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:19:11 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:19:11 DEBUG    j= 65, row1 = [54]
2022-10-21 16:19:11 DEBUG    j= 65, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:19:11 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:19:11 DEBUG    j= 71, row1 = [59]
2022-10-21 16:19:11 DEBUG    j= 71, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:19:11 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:19:11 DEBUG    j= 77, row1 = [64]
2022-10-21 16:19:11 DEBUG    j= 77, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:19:11 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:19:11 DEBUG    j= 83, row1 = [69]
2022-10-21 16:19:11 DEBUG    j= 83, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:19:11 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:19:11 DEBUG    j= 89, row1 = [74]
2022-10-21 16:19:11 DEBUG    j= 89, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:19:11 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:19:11 DEBUG    j= 95, row1 = [79]
2022-10-21 16:19:11 DEBUG    j= 95, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:19:11 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:19:11 DEBUG    j= 101, row1 = [84]
2022-10-21 16:19:11 DEBUG    j= 101, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:19:11 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:19:11 DEBUG    j= 107, row1 = [89]
2022-10-21 16:19:11 DEBUG    j= 107, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:19:11 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:19:11 DEBUG    j= 113, row1 = [94]
2022-10-21 16:19:11 DEBUG    j= 113, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:19:11 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:19:11 DEBUG    j= 119, row1 = [99]
2022-10-21 16:19:11 DEBUG    j= 119, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:19:11 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:19:11 DEBUG    j= 125, row1 = [104]
2022-10-21 16:19:11 DEBUG    j= 125, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:19:11 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:19:11 DEBUG    j= 131, row1 = [109]
2022-10-21 16:19:11 DEBUG    j= 131, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:19:11 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:19:11 DEBUG    j= 137, row1 = [114]
2022-10-21 16:19:11 DEBUG    j= 137, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:19:11 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:19:11 DEBUG    j= 143, row1 = [119]
2022-10-21 16:19:11 DEBUG    j= 143, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:19:11 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:19:11 DEBUG    j= 149, row1 = [124]
2022-10-21 16:19:11 DEBUG    j= 149, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:19:11 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:19:11 DEBUG    j= 155, row1 = [129]
2022-10-21 16:19:11 DEBUG    j= 155, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:19:11 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:19:11 DEBUG    j= 161, row1 = [134]
2022-10-21 16:19:11 DEBUG    j= 161, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:19:11 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:19:11 DEBUG    j= 167, row1 = [139]
2022-10-21 16:19:11 DEBUG    j= 167, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:19:11 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:19:11 DEBUG    j= 173, row1 = [144]
2022-10-21 16:19:11 DEBUG    j= 173, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:19:11 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:19:11 DEBUG    j= 179, row1 = [149]
2022-10-21 16:19:11 DEBUG    j= 179, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:19:11 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:19:11 DEBUG    j= 185, row1 = [154]
2022-10-21 16:19:11 DEBUG    j= 185, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:19:11 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:19:11 DEBUG    j= 191, row1 = [159]
2022-10-21 16:19:11 DEBUG    j= 191, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:19:11 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:19:11 DEBUG    j= 197, row1 = [164]
2022-10-21 16:19:11 DEBUG    j= 197, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:19:11 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:19:11 DEBUG    j= 203, row1 = [169]
2022-10-21 16:19:11 DEBUG    j= 203, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:19:11 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:19:11 DEBUG    j= 209, row1 = [174]
2022-10-21 16:19:11 DEBUG    j= 209, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:19:11 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:19:11 DEBUG    j= 215, row1 = [179]
2022-10-21 16:19:11 DEBUG    j= 215, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:19:11 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:19:11 DEBUG    j= 221, row1 = [184]
2022-10-21 16:19:11 DEBUG    j= 221, row2 = 0
2022-10-21 16:19:11 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:19:11 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:19:11 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:19:11 DEBUG    j= 227, row1 = [189]
2022-10-21 16:19:11 DEBUG    j= 227, row2 = 0
2022-10-21 16:19:12 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:19:12 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:19:12 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:19:12 DEBUG    j= 233, row1 = [194]
2022-10-21 16:19:12 DEBUG    j= 233, row2 = 0
2022-10-21 16:19:12 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:19:12 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:19:12 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:19:12 DEBUG    j= 239, row1 = [199]
2022-10-21 16:19:12 DEBUG    j= 239, row2 = 0
2022-10-21 16:19:12 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:19:12 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:19:12 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:19:12 DEBUG    j= 245, row1 = [204]
2022-10-21 16:19:12 DEBUG    j= 245, row2 = 0
2022-10-21 16:19:12 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:19:12 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:19:12 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:19:12 DEBUG    j= 251, row1 = [209]
2022-10-21 16:19:12 DEBUG    j= 251, row2 = 0
2022-10-21 16:19:12 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:19:12 INFO     For loop ended
2022-10-21 16:19:12 INFO     fun_blade_wake done
2022-10-21 16:19:12 DEBUG    Setting input for FSI
2022-10-21 16:19:12 DEBUG    len(blade_obj) = 2
2022-10-21 16:19:12 DEBUG    len(simu_fsi.data) = 8
2022-10-21 16:19:12 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 16:19:12 INFO     Additional masses sections
2022-10-21 16:19:12 INFO     **************************************************
2022-10-21 16:19:12 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 16:19:12 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 16:19:12 INFO     Additional masses sections end
2022-10-21 16:19:12 INFO     **************************************************
2022-10-21 16:19:12 INFO     Constraints sections
2022-10-21 16:19:12 INFO     **************************************************
2022-10-21 16:19:13 DEBUG    len(simu_struct.constraints) = 4
2022-10-21 16:19:13 DEBUG    simu_struct.constraints = [SimulationSettings.Constraint(type='rigidsupport', nodes=array([2, 0]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([22, 23]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([73,  0]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='fixed', nodes=0, phi1=array([0, 0, 0]))]
2022-10-21 16:19:13 DEBUG    remo_internal_const = [2, 73, 73]
2022-10-21 16:23:03 INFO     read_yaml conversion started!
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:23:04 DEBUG    inz0: 51
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:23:04 DEBUG    inz0: 51
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:04 DEBUG    inz0: 101
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:04 DEBUG    inz0: 101
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:23:04 DEBUG    inz0: 130
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:04 DEBUG    inz0: 101
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:23:04 DEBUG    inz0: 130
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:04 DEBUG    inz0: 101
2022-10-21 16:23:04 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:04 DEBUG    inz0: 101
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:05 DEBUG    inz0: 101
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:23:05 DEBUG    inz0: 51
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:23:05 DEBUG    inz0: 51
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:05 DEBUG    inz0: 101
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:05 DEBUG    inz0: 101
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:23:05 DEBUG    inz0: 130
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:05 DEBUG    inz0: 101
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:23:05 DEBUG    inz0: 130
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:05 DEBUG    inz0: 101
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:05 DEBUG    inz0: 101
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:23:05 DEBUG    inz0: 101
2022-10-21 16:23:05 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:23:05 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 16:23:05 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:23:05 DEBUG    inz0: 51
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:23:05 DEBUG    inz0: 51
2022-10-21 16:23:05 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:23:05 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 16:23:05 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:23:05 DEBUG    inz0: 51
2022-10-21 16:23:05 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:23:05 DEBUG    inz0: 51
2022-10-21 16:23:06 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:23:06 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:23:06 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 16:23:06 DEBUG    matplotlib version 3.3.2
2022-10-21 16:23:06 DEBUG    interactive is False
2022-10-21 16:23:06 DEBUG    platform is linux
2022-10-21 16:23:06 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 16:23:06 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 16:23:06 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 16:23:07 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:23:07 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:23:07 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:23:07 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 16:23:08 INFO     i = 0,len(blade_obj) = 0
2022-10-21 16:23:08 INFO     i = 0,len(blade_obj) = 1
2022-10-21 16:23:08 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:23:08 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 16:23:08 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:23:08 DEBUG    wake = []
2022-10-21 16:23:08 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 16:23:08 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:23:08 INFO     inside fun_blade_wake
2022-10-21 16:23:08 DEBUG    wake was empty, creating new wake
2022-10-21 16:23:08 DEBUG    wake index: w = 0
2022-10-21 16:23:08 DEBUG    (obj.mx+1) = 6
2022-10-21 16:23:08 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:23:08 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:23:08 INFO     For loop started
2022-10-21 16:23:08 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:23:08 DEBUG    j= 5, row1 = [4]
2022-10-21 16:23:08 DEBUG    j= 5, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:23:08 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:23:08 DEBUG    j= 11, row1 = [9]
2022-10-21 16:23:08 DEBUG    j= 11, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:23:08 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:23:08 DEBUG    j= 17, row1 = [14]
2022-10-21 16:23:08 DEBUG    j= 17, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:23:08 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:23:08 DEBUG    j= 23, row1 = [19]
2022-10-21 16:23:08 DEBUG    j= 23, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:23:08 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:23:08 DEBUG    j= 29, row1 = [24]
2022-10-21 16:23:08 DEBUG    j= 29, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:23:08 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:23:08 DEBUG    j= 35, row1 = [29]
2022-10-21 16:23:08 DEBUG    j= 35, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:23:08 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:23:08 DEBUG    j= 41, row1 = [34]
2022-10-21 16:23:08 DEBUG    j= 41, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:23:08 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:23:08 DEBUG    j= 47, row1 = [39]
2022-10-21 16:23:08 DEBUG    j= 47, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:23:08 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:23:08 DEBUG    j= 53, row1 = [44]
2022-10-21 16:23:08 DEBUG    j= 53, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:23:08 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:23:08 DEBUG    j= 59, row1 = [49]
2022-10-21 16:23:08 DEBUG    j= 59, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:23:08 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:23:08 DEBUG    j= 65, row1 = [54]
2022-10-21 16:23:08 DEBUG    j= 65, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:23:08 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:23:08 DEBUG    j= 71, row1 = [59]
2022-10-21 16:23:08 DEBUG    j= 71, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:23:08 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:23:08 DEBUG    j= 77, row1 = [64]
2022-10-21 16:23:08 DEBUG    j= 77, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:23:08 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:23:08 DEBUG    j= 83, row1 = [69]
2022-10-21 16:23:08 DEBUG    j= 83, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:23:08 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:23:08 DEBUG    j= 89, row1 = [74]
2022-10-21 16:23:08 DEBUG    j= 89, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:23:08 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:23:08 DEBUG    j= 95, row1 = [79]
2022-10-21 16:23:08 DEBUG    j= 95, row2 = 0
2022-10-21 16:23:08 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:23:08 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:23:08 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:23:08 DEBUG    j= 101, row1 = [84]
2022-10-21 16:23:08 DEBUG    j= 101, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:23:09 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:23:09 DEBUG    j= 107, row1 = [89]
2022-10-21 16:23:09 DEBUG    j= 107, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:23:09 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:23:09 DEBUG    j= 113, row1 = [94]
2022-10-21 16:23:09 DEBUG    j= 113, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:23:09 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:23:09 DEBUG    j= 119, row1 = [99]
2022-10-21 16:23:09 DEBUG    j= 119, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:23:09 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:23:09 DEBUG    j= 125, row1 = [104]
2022-10-21 16:23:09 DEBUG    j= 125, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:23:09 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:23:09 DEBUG    j= 131, row1 = [109]
2022-10-21 16:23:09 DEBUG    j= 131, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:23:09 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:23:09 DEBUG    j= 137, row1 = [114]
2022-10-21 16:23:09 DEBUG    j= 137, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:23:09 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:23:09 DEBUG    j= 143, row1 = [119]
2022-10-21 16:23:09 DEBUG    j= 143, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:23:09 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:23:09 DEBUG    j= 149, row1 = [124]
2022-10-21 16:23:09 DEBUG    j= 149, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:23:09 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:23:09 DEBUG    j= 155, row1 = [129]
2022-10-21 16:23:09 DEBUG    j= 155, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:23:09 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:23:09 DEBUG    j= 161, row1 = [134]
2022-10-21 16:23:09 DEBUG    j= 161, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:23:09 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:23:09 DEBUG    j= 167, row1 = [139]
2022-10-21 16:23:09 DEBUG    j= 167, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:23:09 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:23:09 DEBUG    j= 173, row1 = [144]
2022-10-21 16:23:09 DEBUG    j= 173, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:23:09 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:23:09 DEBUG    j= 179, row1 = [149]
2022-10-21 16:23:09 DEBUG    j= 179, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:23:09 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:23:09 DEBUG    j= 185, row1 = [154]
2022-10-21 16:23:09 DEBUG    j= 185, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:23:09 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:23:09 DEBUG    j= 191, row1 = [159]
2022-10-21 16:23:09 DEBUG    j= 191, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:23:09 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:23:09 DEBUG    j= 197, row1 = [164]
2022-10-21 16:23:09 DEBUG    j= 197, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:23:09 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:23:09 DEBUG    j= 203, row1 = [169]
2022-10-21 16:23:09 DEBUG    j= 203, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:23:09 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:23:09 DEBUG    j= 209, row1 = [174]
2022-10-21 16:23:09 DEBUG    j= 209, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:23:09 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:23:09 DEBUG    j= 215, row1 = [179]
2022-10-21 16:23:09 DEBUG    j= 215, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:23:09 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:23:09 DEBUG    j= 221, row1 = [184]
2022-10-21 16:23:09 DEBUG    j= 221, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:23:09 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:23:09 DEBUG    j= 227, row1 = [189]
2022-10-21 16:23:09 DEBUG    j= 227, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:23:09 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:23:09 DEBUG    j= 233, row1 = [194]
2022-10-21 16:23:09 DEBUG    j= 233, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:23:09 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:23:09 DEBUG    j= 239, row1 = [199]
2022-10-21 16:23:09 DEBUG    j= 239, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:23:09 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:23:09 DEBUG    j= 245, row1 = [204]
2022-10-21 16:23:09 DEBUG    j= 245, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:23:09 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:23:09 DEBUG    j= 251, row1 = [209]
2022-10-21 16:23:09 DEBUG    j= 251, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:23:09 INFO     For loop ended
2022-10-21 16:23:09 INFO     fun_blade_wake done
2022-10-21 16:23:09 DEBUG    Setting input for FSI
2022-10-21 16:23:09 DEBUG    len(blade_obj) = 2
2022-10-21 16:23:09 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:23:09 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 16:23:09 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:23:09 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 16:23:09 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 16:23:09 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:23:09 INFO     inside fun_blade_wake
2022-10-21 16:23:09 DEBUG    wake was not empty, appending new wake
2022-10-21 16:23:09 DEBUG    wake index: w = 1
2022-10-21 16:23:09 DEBUG    wake property.shape: (2, 2)
2022-10-21 16:23:09 DEBUG    (obj.mx+1) = 6
2022-10-21 16:23:09 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:23:09 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:23:09 INFO     For loop started
2022-10-21 16:23:09 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:23:09 DEBUG    j= 5, row1 = [4]
2022-10-21 16:23:09 DEBUG    j= 5, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:23:09 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:23:09 DEBUG    j= 11, row1 = [9]
2022-10-21 16:23:09 DEBUG    j= 11, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:23:09 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:23:09 DEBUG    j= 17, row1 = [14]
2022-10-21 16:23:09 DEBUG    j= 17, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:23:09 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:23:09 DEBUG    j= 23, row1 = [19]
2022-10-21 16:23:09 DEBUG    j= 23, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:23:09 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:23:09 DEBUG    j= 29, row1 = [24]
2022-10-21 16:23:09 DEBUG    j= 29, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:23:09 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:23:09 DEBUG    j= 35, row1 = [29]
2022-10-21 16:23:09 DEBUG    j= 35, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:23:09 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:23:09 DEBUG    j= 41, row1 = [34]
2022-10-21 16:23:09 DEBUG    j= 41, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:23:09 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:23:09 DEBUG    j= 47, row1 = [39]
2022-10-21 16:23:09 DEBUG    j= 47, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:23:09 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:23:09 DEBUG    j= 53, row1 = [44]
2022-10-21 16:23:09 DEBUG    j= 53, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:23:09 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:23:09 DEBUG    j= 59, row1 = [49]
2022-10-21 16:23:09 DEBUG    j= 59, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:23:09 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:23:09 DEBUG    j= 65, row1 = [54]
2022-10-21 16:23:09 DEBUG    j= 65, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:23:09 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:23:09 DEBUG    j= 71, row1 = [59]
2022-10-21 16:23:09 DEBUG    j= 71, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:23:09 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:23:09 DEBUG    j= 77, row1 = [64]
2022-10-21 16:23:09 DEBUG    j= 77, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:23:09 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:23:09 DEBUG    j= 83, row1 = [69]
2022-10-21 16:23:09 DEBUG    j= 83, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:23:09 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:23:09 DEBUG    j= 89, row1 = [74]
2022-10-21 16:23:09 DEBUG    j= 89, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:23:09 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:23:09 DEBUG    j= 95, row1 = [79]
2022-10-21 16:23:09 DEBUG    j= 95, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:23:09 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:23:09 DEBUG    j= 101, row1 = [84]
2022-10-21 16:23:09 DEBUG    j= 101, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:23:09 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:23:09 DEBUG    j= 107, row1 = [89]
2022-10-21 16:23:09 DEBUG    j= 107, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:23:09 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:23:09 DEBUG    j= 113, row1 = [94]
2022-10-21 16:23:09 DEBUG    j= 113, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:23:09 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:23:09 DEBUG    j= 119, row1 = [99]
2022-10-21 16:23:09 DEBUG    j= 119, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:23:09 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:23:09 DEBUG    j= 125, row1 = [104]
2022-10-21 16:23:09 DEBUG    j= 125, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:23:09 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:23:09 DEBUG    j= 131, row1 = [109]
2022-10-21 16:23:09 DEBUG    j= 131, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:23:09 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:23:09 DEBUG    j= 137, row1 = [114]
2022-10-21 16:23:09 DEBUG    j= 137, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:23:09 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:23:09 DEBUG    j= 143, row1 = [119]
2022-10-21 16:23:09 DEBUG    j= 143, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:23:09 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:23:09 DEBUG    j= 149, row1 = [124]
2022-10-21 16:23:09 DEBUG    j= 149, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:23:09 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:23:09 DEBUG    j= 155, row1 = [129]
2022-10-21 16:23:09 DEBUG    j= 155, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:23:09 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:23:09 DEBUG    j= 161, row1 = [134]
2022-10-21 16:23:09 DEBUG    j= 161, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:23:09 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:23:09 DEBUG    j= 167, row1 = [139]
2022-10-21 16:23:09 DEBUG    j= 167, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:23:09 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:23:09 DEBUG    j= 173, row1 = [144]
2022-10-21 16:23:09 DEBUG    j= 173, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:23:09 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:23:09 DEBUG    j= 179, row1 = [149]
2022-10-21 16:23:09 DEBUG    j= 179, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:23:09 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:23:09 DEBUG    j= 185, row1 = [154]
2022-10-21 16:23:09 DEBUG    j= 185, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:23:09 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:23:09 DEBUG    j= 191, row1 = [159]
2022-10-21 16:23:09 DEBUG    j= 191, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:23:09 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:23:09 DEBUG    j= 197, row1 = [164]
2022-10-21 16:23:09 DEBUG    j= 197, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:23:09 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:23:09 DEBUG    j= 203, row1 = [169]
2022-10-21 16:23:09 DEBUG    j= 203, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:23:09 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:23:09 DEBUG    j= 209, row1 = [174]
2022-10-21 16:23:09 DEBUG    j= 209, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:23:09 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:23:09 DEBUG    j= 215, row1 = [179]
2022-10-21 16:23:09 DEBUG    j= 215, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:23:09 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:23:09 DEBUG    j= 221, row1 = [184]
2022-10-21 16:23:09 DEBUG    j= 221, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:23:09 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:23:09 DEBUG    j= 227, row1 = [189]
2022-10-21 16:23:09 DEBUG    j= 227, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:23:09 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:23:09 DEBUG    j= 233, row1 = [194]
2022-10-21 16:23:09 DEBUG    j= 233, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:23:09 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:23:09 DEBUG    j= 239, row1 = [199]
2022-10-21 16:23:09 DEBUG    j= 239, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:23:09 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:23:09 DEBUG    j= 245, row1 = [204]
2022-10-21 16:23:09 DEBUG    j= 245, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:23:09 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:23:09 DEBUG    j= 251, row1 = [209]
2022-10-21 16:23:09 DEBUG    j= 251, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:23:09 INFO     For loop ended
2022-10-21 16:23:09 INFO     fun_blade_wake done
2022-10-21 16:23:09 DEBUG    Setting input for FSI
2022-10-21 16:23:09 DEBUG    len(blade_obj) = 2
2022-10-21 16:23:09 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:23:09 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 16:23:09 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:23:09 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 16:23:09 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 16:23:09 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:23:09 INFO     inside fun_blade_wake
2022-10-21 16:23:09 DEBUG    wake was not empty, appending new wake
2022-10-21 16:23:09 DEBUG    wake index: w = 2
2022-10-21 16:23:09 DEBUG    wake property.shape: (3, 2)
2022-10-21 16:23:09 DEBUG    (obj.mx+1) = 6
2022-10-21 16:23:09 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:23:09 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:23:09 INFO     For loop started
2022-10-21 16:23:09 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:23:09 DEBUG    j= 5, row1 = [4]
2022-10-21 16:23:09 DEBUG    j= 5, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:23:09 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:23:09 DEBUG    j= 11, row1 = [9]
2022-10-21 16:23:09 DEBUG    j= 11, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:23:09 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:23:09 DEBUG    j= 17, row1 = [14]
2022-10-21 16:23:09 DEBUG    j= 17, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:23:09 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:23:09 DEBUG    j= 23, row1 = [19]
2022-10-21 16:23:09 DEBUG    j= 23, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:23:09 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:23:09 DEBUG    j= 29, row1 = [24]
2022-10-21 16:23:09 DEBUG    j= 29, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:23:09 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:23:09 DEBUG    j= 35, row1 = [29]
2022-10-21 16:23:09 DEBUG    j= 35, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:23:09 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:23:09 DEBUG    j= 41, row1 = [34]
2022-10-21 16:23:09 DEBUG    j= 41, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:23:09 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:23:09 DEBUG    j= 47, row1 = [39]
2022-10-21 16:23:09 DEBUG    j= 47, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:23:09 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:23:09 DEBUG    j= 53, row1 = [44]
2022-10-21 16:23:09 DEBUG    j= 53, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:23:09 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:23:09 DEBUG    j= 59, row1 = [49]
2022-10-21 16:23:09 DEBUG    j= 59, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:23:09 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:23:09 DEBUG    j= 65, row1 = [54]
2022-10-21 16:23:09 DEBUG    j= 65, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:23:09 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:23:09 DEBUG    j= 71, row1 = [59]
2022-10-21 16:23:09 DEBUG    j= 71, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:23:09 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:23:09 DEBUG    j= 77, row1 = [64]
2022-10-21 16:23:09 DEBUG    j= 77, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:23:09 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:23:09 DEBUG    j= 83, row1 = [69]
2022-10-21 16:23:09 DEBUG    j= 83, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:23:09 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:23:09 DEBUG    j= 89, row1 = [74]
2022-10-21 16:23:09 DEBUG    j= 89, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:23:09 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:23:09 DEBUG    j= 95, row1 = [79]
2022-10-21 16:23:09 DEBUG    j= 95, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:23:09 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:23:09 DEBUG    j= 101, row1 = [84]
2022-10-21 16:23:09 DEBUG    j= 101, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:23:09 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:23:09 DEBUG    j= 107, row1 = [89]
2022-10-21 16:23:09 DEBUG    j= 107, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:23:09 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:23:09 DEBUG    j= 113, row1 = [94]
2022-10-21 16:23:09 DEBUG    j= 113, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:23:09 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:23:09 DEBUG    j= 119, row1 = [99]
2022-10-21 16:23:09 DEBUG    j= 119, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:23:09 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:23:09 DEBUG    j= 125, row1 = [104]
2022-10-21 16:23:09 DEBUG    j= 125, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:23:09 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:23:09 DEBUG    j= 131, row1 = [109]
2022-10-21 16:23:09 DEBUG    j= 131, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:23:09 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:23:09 DEBUG    j= 137, row1 = [114]
2022-10-21 16:23:09 DEBUG    j= 137, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:23:09 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:23:09 DEBUG    j= 143, row1 = [119]
2022-10-21 16:23:09 DEBUG    j= 143, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:23:09 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:23:09 DEBUG    j= 149, row1 = [124]
2022-10-21 16:23:09 DEBUG    j= 149, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:23:09 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:23:09 DEBUG    j= 155, row1 = [129]
2022-10-21 16:23:09 DEBUG    j= 155, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:23:09 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:23:09 DEBUG    j= 161, row1 = [134]
2022-10-21 16:23:09 DEBUG    j= 161, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:23:09 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:23:09 DEBUG    j= 167, row1 = [139]
2022-10-21 16:23:09 DEBUG    j= 167, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:23:09 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:23:09 DEBUG    j= 173, row1 = [144]
2022-10-21 16:23:09 DEBUG    j= 173, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:23:09 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:23:09 DEBUG    j= 179, row1 = [149]
2022-10-21 16:23:09 DEBUG    j= 179, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:23:09 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:23:09 DEBUG    j= 185, row1 = [154]
2022-10-21 16:23:09 DEBUG    j= 185, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:23:09 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:23:09 DEBUG    j= 191, row1 = [159]
2022-10-21 16:23:09 DEBUG    j= 191, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:23:09 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:23:09 DEBUG    j= 197, row1 = [164]
2022-10-21 16:23:09 DEBUG    j= 197, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:23:09 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:23:09 DEBUG    j= 203, row1 = [169]
2022-10-21 16:23:09 DEBUG    j= 203, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:23:09 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:23:09 DEBUG    j= 209, row1 = [174]
2022-10-21 16:23:09 DEBUG    j= 209, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:23:09 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:23:09 DEBUG    j= 215, row1 = [179]
2022-10-21 16:23:09 DEBUG    j= 215, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:23:09 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:23:09 DEBUG    j= 221, row1 = [184]
2022-10-21 16:23:09 DEBUG    j= 221, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:23:09 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:23:09 DEBUG    j= 227, row1 = [189]
2022-10-21 16:23:09 DEBUG    j= 227, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:23:09 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:23:09 DEBUG    j= 233, row1 = [194]
2022-10-21 16:23:09 DEBUG    j= 233, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:23:09 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:23:09 DEBUG    j= 239, row1 = [199]
2022-10-21 16:23:09 DEBUG    j= 239, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:23:09 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:23:09 DEBUG    j= 245, row1 = [204]
2022-10-21 16:23:09 DEBUG    j= 245, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:23:09 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:23:09 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:23:09 DEBUG    j= 251, row1 = [209]
2022-10-21 16:23:09 DEBUG    j= 251, row2 = 0
2022-10-21 16:23:09 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:23:09 INFO     For loop ended
2022-10-21 16:23:09 INFO     fun_blade_wake done
2022-10-21 16:23:09 DEBUG    Setting input for FSI
2022-10-21 16:23:09 DEBUG    len(blade_obj) = 2
2022-10-21 16:23:09 DEBUG    len(simu_fsi.data) = 8
2022-10-21 16:23:09 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 16:23:10 INFO     Additional masses sections
2022-10-21 16:23:10 INFO     **************************************************
2022-10-21 16:23:10 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 16:23:10 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 16:23:10 INFO     Additional masses sections end
2022-10-21 16:23:10 INFO     **************************************************
2022-10-21 16:23:10 INFO     Constraints sections
2022-10-21 16:23:10 INFO     **************************************************
2022-10-21 16:23:10 DEBUG    len(simu_struct.constraints) = 4
2022-10-21 16:23:10 DEBUG    simu_struct.constraints = [SimulationSettings.Constraint(type='rigidsupport', nodes=array([2, 0]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([22, 23]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([73,  0]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='fixed', nodes=0, phi1=array([0, 0, 0]))]
2022-10-21 16:23:10 DEBUG    remo_internal_const = [2, 22, 73]
2022-10-21 16:31:04 INFO     read_yaml conversion started!
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:31:06 DEBUG    inz0: 51
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:31:06 DEBUG    inz0: 51
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:31:06 DEBUG    inz0: 130
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:31:06 DEBUG    inz0: 130
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:31:06 DEBUG    inz0: 51
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:31:06 DEBUG    inz0: 51
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:31:06 DEBUG    inz0: 130
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:31:06 DEBUG    inz0: 130
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:06 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:31:06 DEBUG    inz0: 101
2022-10-21 16:31:07 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:31:07 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 16:31:07 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 16:31:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:31:07 DEBUG    inz0: 51
2022-10-21 16:31:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:31:07 DEBUG    inz0: 51
2022-10-21 16:31:07 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:31:07 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 16:31:07 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 16:31:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:31:07 DEBUG    inz0: 51
2022-10-21 16:31:07 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:31:07 DEBUG    inz0: 51
2022-10-21 16:31:08 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:31:08 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:31:08 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 16:31:08 DEBUG    matplotlib version 3.3.2
2022-10-21 16:31:08 DEBUG    interactive is False
2022-10-21 16:31:08 DEBUG    platform is linux
2022-10-21 16:31:08 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 16:31:08 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 16:31:08 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 16:31:08 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:31:08 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:31:08 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:08 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:31:09 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 16:31:10 INFO     i = 0,len(blade_obj) = 0
2022-10-21 16:31:10 INFO     i = 0,len(blade_obj) = 1
2022-10-21 16:31:10 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:31:10 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 16:31:10 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:31:10 DEBUG    wake = []
2022-10-21 16:31:10 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 16:31:10 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:31:10 INFO     inside fun_blade_wake
2022-10-21 16:31:10 DEBUG    wake was empty, creating new wake
2022-10-21 16:31:10 DEBUG    wake index: w = 0
2022-10-21 16:31:10 DEBUG    (obj.mx+1) = 6
2022-10-21 16:31:10 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:31:10 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:31:10 INFO     For loop started
2022-10-21 16:31:10 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:31:10 DEBUG    j= 5, row1 = [4]
2022-10-21 16:31:10 DEBUG    j= 5, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:31:10 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:31:10 DEBUG    j= 11, row1 = [9]
2022-10-21 16:31:10 DEBUG    j= 11, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:31:10 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:31:10 DEBUG    j= 17, row1 = [14]
2022-10-21 16:31:10 DEBUG    j= 17, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:31:10 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:31:10 DEBUG    j= 23, row1 = [19]
2022-10-21 16:31:10 DEBUG    j= 23, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:31:10 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:31:10 DEBUG    j= 29, row1 = [24]
2022-10-21 16:31:10 DEBUG    j= 29, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:31:10 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:31:10 DEBUG    j= 35, row1 = [29]
2022-10-21 16:31:10 DEBUG    j= 35, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:31:10 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:31:10 DEBUG    j= 41, row1 = [34]
2022-10-21 16:31:10 DEBUG    j= 41, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:31:10 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:31:10 DEBUG    j= 47, row1 = [39]
2022-10-21 16:31:10 DEBUG    j= 47, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:31:10 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:31:10 DEBUG    j= 53, row1 = [44]
2022-10-21 16:31:10 DEBUG    j= 53, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:31:10 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:31:10 DEBUG    j= 59, row1 = [49]
2022-10-21 16:31:10 DEBUG    j= 59, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:31:10 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:31:10 DEBUG    j= 65, row1 = [54]
2022-10-21 16:31:10 DEBUG    j= 65, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:31:10 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:31:10 DEBUG    j= 71, row1 = [59]
2022-10-21 16:31:10 DEBUG    j= 71, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:31:10 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:31:10 DEBUG    j= 77, row1 = [64]
2022-10-21 16:31:10 DEBUG    j= 77, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:31:10 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:31:10 DEBUG    j= 83, row1 = [69]
2022-10-21 16:31:10 DEBUG    j= 83, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:31:10 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:31:10 DEBUG    j= 89, row1 = [74]
2022-10-21 16:31:10 DEBUG    j= 89, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:31:10 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:31:10 DEBUG    j= 95, row1 = [79]
2022-10-21 16:31:10 DEBUG    j= 95, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:31:10 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:31:10 DEBUG    j= 101, row1 = [84]
2022-10-21 16:31:10 DEBUG    j= 101, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:31:10 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:31:10 DEBUG    j= 107, row1 = [89]
2022-10-21 16:31:10 DEBUG    j= 107, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:31:10 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:31:10 DEBUG    j= 113, row1 = [94]
2022-10-21 16:31:10 DEBUG    j= 113, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:31:10 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:31:10 DEBUG    j= 119, row1 = [99]
2022-10-21 16:31:10 DEBUG    j= 119, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:31:10 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:31:10 DEBUG    j= 125, row1 = [104]
2022-10-21 16:31:10 DEBUG    j= 125, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:31:10 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:31:10 DEBUG    j= 131, row1 = [109]
2022-10-21 16:31:10 DEBUG    j= 131, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:31:10 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:31:10 DEBUG    j= 137, row1 = [114]
2022-10-21 16:31:10 DEBUG    j= 137, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:31:10 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:31:10 DEBUG    j= 143, row1 = [119]
2022-10-21 16:31:10 DEBUG    j= 143, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:31:10 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:31:10 DEBUG    j= 149, row1 = [124]
2022-10-21 16:31:10 DEBUG    j= 149, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:31:10 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:31:10 DEBUG    j= 155, row1 = [129]
2022-10-21 16:31:10 DEBUG    j= 155, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:31:10 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:31:10 DEBUG    j= 161, row1 = [134]
2022-10-21 16:31:10 DEBUG    j= 161, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:31:10 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:31:10 DEBUG    j= 167, row1 = [139]
2022-10-21 16:31:10 DEBUG    j= 167, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:31:10 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:31:10 DEBUG    j= 173, row1 = [144]
2022-10-21 16:31:10 DEBUG    j= 173, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:31:10 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:31:10 DEBUG    j= 179, row1 = [149]
2022-10-21 16:31:10 DEBUG    j= 179, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:31:10 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:31:10 DEBUG    j= 185, row1 = [154]
2022-10-21 16:31:10 DEBUG    j= 185, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:31:10 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:31:10 DEBUG    j= 191, row1 = [159]
2022-10-21 16:31:10 DEBUG    j= 191, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:31:10 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:31:10 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:31:10 DEBUG    j= 197, row1 = [164]
2022-10-21 16:31:10 DEBUG    j= 197, row2 = 0
2022-10-21 16:31:10 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:31:10 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:31:11 DEBUG    j= 203, row1 = [169]
2022-10-21 16:31:11 DEBUG    j= 203, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:31:11 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:31:11 DEBUG    j= 209, row1 = [174]
2022-10-21 16:31:11 DEBUG    j= 209, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:31:11 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:31:11 DEBUG    j= 215, row1 = [179]
2022-10-21 16:31:11 DEBUG    j= 215, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:31:11 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:31:11 DEBUG    j= 221, row1 = [184]
2022-10-21 16:31:11 DEBUG    j= 221, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:31:11 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:31:11 DEBUG    j= 227, row1 = [189]
2022-10-21 16:31:11 DEBUG    j= 227, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:31:11 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:31:11 DEBUG    j= 233, row1 = [194]
2022-10-21 16:31:11 DEBUG    j= 233, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:31:11 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:31:11 DEBUG    j= 239, row1 = [199]
2022-10-21 16:31:11 DEBUG    j= 239, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:31:11 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:31:11 DEBUG    j= 245, row1 = [204]
2022-10-21 16:31:11 DEBUG    j= 245, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:31:11 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:31:11 DEBUG    j= 251, row1 = [209]
2022-10-21 16:31:11 DEBUG    j= 251, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:31:11 INFO     For loop ended
2022-10-21 16:31:11 INFO     fun_blade_wake done
2022-10-21 16:31:11 DEBUG    Setting input for FSI
2022-10-21 16:31:11 DEBUG    len(blade_obj) = 2
2022-10-21 16:31:11 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:31:11 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 16:31:11 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:31:11 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 16:31:11 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 16:31:11 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:31:11 INFO     inside fun_blade_wake
2022-10-21 16:31:11 DEBUG    wake was not empty, appending new wake
2022-10-21 16:31:11 DEBUG    wake index: w = 1
2022-10-21 16:31:11 DEBUG    wake property.shape: (2, 2)
2022-10-21 16:31:11 DEBUG    (obj.mx+1) = 6
2022-10-21 16:31:11 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:31:11 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:31:11 INFO     For loop started
2022-10-21 16:31:11 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:31:11 DEBUG    j= 5, row1 = [4]
2022-10-21 16:31:11 DEBUG    j= 5, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:31:11 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:31:11 DEBUG    j= 11, row1 = [9]
2022-10-21 16:31:11 DEBUG    j= 11, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:31:11 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:31:11 DEBUG    j= 17, row1 = [14]
2022-10-21 16:31:11 DEBUG    j= 17, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:31:11 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:31:11 DEBUG    j= 23, row1 = [19]
2022-10-21 16:31:11 DEBUG    j= 23, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:31:11 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:31:11 DEBUG    j= 29, row1 = [24]
2022-10-21 16:31:11 DEBUG    j= 29, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:31:11 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:31:11 DEBUG    j= 35, row1 = [29]
2022-10-21 16:31:11 DEBUG    j= 35, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:31:11 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:31:11 DEBUG    j= 41, row1 = [34]
2022-10-21 16:31:11 DEBUG    j= 41, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:31:11 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:31:11 DEBUG    j= 47, row1 = [39]
2022-10-21 16:31:11 DEBUG    j= 47, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:31:11 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:31:11 DEBUG    j= 53, row1 = [44]
2022-10-21 16:31:11 DEBUG    j= 53, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:31:11 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:31:11 DEBUG    j= 59, row1 = [49]
2022-10-21 16:31:11 DEBUG    j= 59, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:31:11 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:31:11 DEBUG    j= 65, row1 = [54]
2022-10-21 16:31:11 DEBUG    j= 65, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:31:11 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:31:11 DEBUG    j= 71, row1 = [59]
2022-10-21 16:31:11 DEBUG    j= 71, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:31:11 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:31:11 DEBUG    j= 77, row1 = [64]
2022-10-21 16:31:11 DEBUG    j= 77, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:31:11 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:31:11 DEBUG    j= 83, row1 = [69]
2022-10-21 16:31:11 DEBUG    j= 83, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:31:11 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:31:11 DEBUG    j= 89, row1 = [74]
2022-10-21 16:31:11 DEBUG    j= 89, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:31:11 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:31:11 DEBUG    j= 95, row1 = [79]
2022-10-21 16:31:11 DEBUG    j= 95, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:31:11 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:31:11 DEBUG    j= 101, row1 = [84]
2022-10-21 16:31:11 DEBUG    j= 101, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:31:11 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:31:11 DEBUG    j= 107, row1 = [89]
2022-10-21 16:31:11 DEBUG    j= 107, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:31:11 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:31:11 DEBUG    j= 113, row1 = [94]
2022-10-21 16:31:11 DEBUG    j= 113, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:31:11 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:31:11 DEBUG    j= 119, row1 = [99]
2022-10-21 16:31:11 DEBUG    j= 119, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:31:11 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:31:11 DEBUG    j= 125, row1 = [104]
2022-10-21 16:31:11 DEBUG    j= 125, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:31:11 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:31:11 DEBUG    j= 131, row1 = [109]
2022-10-21 16:31:11 DEBUG    j= 131, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:31:11 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:31:11 DEBUG    j= 137, row1 = [114]
2022-10-21 16:31:11 DEBUG    j= 137, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:31:11 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:31:11 DEBUG    j= 143, row1 = [119]
2022-10-21 16:31:11 DEBUG    j= 143, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:31:11 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:31:11 DEBUG    j= 149, row1 = [124]
2022-10-21 16:31:11 DEBUG    j= 149, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:31:11 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:31:11 DEBUG    j= 155, row1 = [129]
2022-10-21 16:31:11 DEBUG    j= 155, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:31:11 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:31:11 DEBUG    j= 161, row1 = [134]
2022-10-21 16:31:11 DEBUG    j= 161, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:31:11 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:31:11 DEBUG    j= 167, row1 = [139]
2022-10-21 16:31:11 DEBUG    j= 167, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:31:11 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:31:11 DEBUG    j= 173, row1 = [144]
2022-10-21 16:31:11 DEBUG    j= 173, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:31:11 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:31:11 DEBUG    j= 179, row1 = [149]
2022-10-21 16:31:11 DEBUG    j= 179, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:31:11 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:31:11 DEBUG    j= 185, row1 = [154]
2022-10-21 16:31:11 DEBUG    j= 185, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:31:11 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:31:11 DEBUG    j= 191, row1 = [159]
2022-10-21 16:31:11 DEBUG    j= 191, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:31:11 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:31:11 DEBUG    j= 197, row1 = [164]
2022-10-21 16:31:11 DEBUG    j= 197, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:31:11 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:31:11 DEBUG    j= 203, row1 = [169]
2022-10-21 16:31:11 DEBUG    j= 203, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:31:11 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:31:11 DEBUG    j= 209, row1 = [174]
2022-10-21 16:31:11 DEBUG    j= 209, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:31:11 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:31:11 DEBUG    j= 215, row1 = [179]
2022-10-21 16:31:11 DEBUG    j= 215, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:31:11 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:31:11 DEBUG    j= 221, row1 = [184]
2022-10-21 16:31:11 DEBUG    j= 221, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:31:11 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:31:11 DEBUG    j= 227, row1 = [189]
2022-10-21 16:31:11 DEBUG    j= 227, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:31:11 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:31:11 DEBUG    j= 233, row1 = [194]
2022-10-21 16:31:11 DEBUG    j= 233, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:31:11 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:31:11 DEBUG    j= 239, row1 = [199]
2022-10-21 16:31:11 DEBUG    j= 239, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:31:11 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:31:11 DEBUG    j= 245, row1 = [204]
2022-10-21 16:31:11 DEBUG    j= 245, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:31:11 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:31:11 DEBUG    j= 251, row1 = [209]
2022-10-21 16:31:11 DEBUG    j= 251, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:31:11 INFO     For loop ended
2022-10-21 16:31:11 INFO     fun_blade_wake done
2022-10-21 16:31:11 DEBUG    Setting input for FSI
2022-10-21 16:31:11 DEBUG    len(blade_obj) = 2
2022-10-21 16:31:11 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:31:11 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 16:31:11 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:31:11 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 16:31:11 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 16:31:11 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:31:11 INFO     inside fun_blade_wake
2022-10-21 16:31:11 DEBUG    wake was not empty, appending new wake
2022-10-21 16:31:11 DEBUG    wake index: w = 2
2022-10-21 16:31:11 DEBUG    wake property.shape: (3, 2)
2022-10-21 16:31:11 DEBUG    (obj.mx+1) = 6
2022-10-21 16:31:11 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:31:11 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:31:11 INFO     For loop started
2022-10-21 16:31:11 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:31:11 DEBUG    j= 5, row1 = [4]
2022-10-21 16:31:11 DEBUG    j= 5, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:31:11 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:31:11 DEBUG    j= 11, row1 = [9]
2022-10-21 16:31:11 DEBUG    j= 11, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:31:11 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:31:11 DEBUG    j= 17, row1 = [14]
2022-10-21 16:31:11 DEBUG    j= 17, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:31:11 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:31:11 DEBUG    j= 23, row1 = [19]
2022-10-21 16:31:11 DEBUG    j= 23, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:31:11 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:31:11 DEBUG    j= 29, row1 = [24]
2022-10-21 16:31:11 DEBUG    j= 29, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:31:11 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:31:11 DEBUG    j= 35, row1 = [29]
2022-10-21 16:31:11 DEBUG    j= 35, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:31:11 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:31:11 DEBUG    j= 41, row1 = [34]
2022-10-21 16:31:11 DEBUG    j= 41, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:31:11 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:31:11 DEBUG    j= 47, row1 = [39]
2022-10-21 16:31:11 DEBUG    j= 47, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:31:11 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:31:11 DEBUG    j= 53, row1 = [44]
2022-10-21 16:31:11 DEBUG    j= 53, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:31:11 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:31:11 DEBUG    j= 59, row1 = [49]
2022-10-21 16:31:11 DEBUG    j= 59, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:31:11 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:31:11 DEBUG    j= 65, row1 = [54]
2022-10-21 16:31:11 DEBUG    j= 65, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:31:11 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:31:11 DEBUG    j= 71, row1 = [59]
2022-10-21 16:31:11 DEBUG    j= 71, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:31:11 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:31:11 DEBUG    j= 77, row1 = [64]
2022-10-21 16:31:11 DEBUG    j= 77, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:31:11 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:31:11 DEBUG    j= 83, row1 = [69]
2022-10-21 16:31:11 DEBUG    j= 83, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:31:11 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:31:11 DEBUG    j= 89, row1 = [74]
2022-10-21 16:31:11 DEBUG    j= 89, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:31:11 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:31:11 DEBUG    j= 95, row1 = [79]
2022-10-21 16:31:11 DEBUG    j= 95, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:31:11 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:31:11 DEBUG    j= 101, row1 = [84]
2022-10-21 16:31:11 DEBUG    j= 101, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:31:11 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:31:11 DEBUG    j= 107, row1 = [89]
2022-10-21 16:31:11 DEBUG    j= 107, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:31:11 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:31:11 DEBUG    j= 113, row1 = [94]
2022-10-21 16:31:11 DEBUG    j= 113, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:31:11 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:31:11 DEBUG    j= 119, row1 = [99]
2022-10-21 16:31:11 DEBUG    j= 119, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:31:11 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:31:11 DEBUG    j= 125, row1 = [104]
2022-10-21 16:31:11 DEBUG    j= 125, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:31:11 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:31:11 DEBUG    j= 131, row1 = [109]
2022-10-21 16:31:11 DEBUG    j= 131, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:31:11 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:31:11 DEBUG    j= 137, row1 = [114]
2022-10-21 16:31:11 DEBUG    j= 137, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:31:11 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:31:11 DEBUG    j= 143, row1 = [119]
2022-10-21 16:31:11 DEBUG    j= 143, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:31:11 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:31:11 DEBUG    j= 149, row1 = [124]
2022-10-21 16:31:11 DEBUG    j= 149, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:31:11 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:31:11 DEBUG    j= 155, row1 = [129]
2022-10-21 16:31:11 DEBUG    j= 155, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:31:11 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:31:11 DEBUG    j= 161, row1 = [134]
2022-10-21 16:31:11 DEBUG    j= 161, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:31:11 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:31:11 DEBUG    j= 167, row1 = [139]
2022-10-21 16:31:11 DEBUG    j= 167, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:31:11 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:31:11 DEBUG    j= 173, row1 = [144]
2022-10-21 16:31:11 DEBUG    j= 173, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:31:11 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:31:11 DEBUG    j= 179, row1 = [149]
2022-10-21 16:31:11 DEBUG    j= 179, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:31:11 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:31:11 DEBUG    j= 185, row1 = [154]
2022-10-21 16:31:11 DEBUG    j= 185, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:31:11 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:31:11 DEBUG    j= 191, row1 = [159]
2022-10-21 16:31:11 DEBUG    j= 191, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:31:11 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:31:11 DEBUG    j= 197, row1 = [164]
2022-10-21 16:31:11 DEBUG    j= 197, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:31:11 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:31:11 DEBUG    j= 203, row1 = [169]
2022-10-21 16:31:11 DEBUG    j= 203, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:31:11 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:31:11 DEBUG    j= 209, row1 = [174]
2022-10-21 16:31:11 DEBUG    j= 209, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:31:11 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:31:11 DEBUG    j= 215, row1 = [179]
2022-10-21 16:31:11 DEBUG    j= 215, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:31:11 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:31:11 DEBUG    j= 221, row1 = [184]
2022-10-21 16:31:11 DEBUG    j= 221, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:31:11 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:31:11 DEBUG    j= 227, row1 = [189]
2022-10-21 16:31:11 DEBUG    j= 227, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:31:11 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:31:11 DEBUG    j= 233, row1 = [194]
2022-10-21 16:31:11 DEBUG    j= 233, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:31:11 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:31:11 DEBUG    j= 239, row1 = [199]
2022-10-21 16:31:11 DEBUG    j= 239, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:31:11 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:31:11 DEBUG    j= 245, row1 = [204]
2022-10-21 16:31:11 DEBUG    j= 245, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:31:11 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:31:11 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:31:11 DEBUG    j= 251, row1 = [209]
2022-10-21 16:31:11 DEBUG    j= 251, row2 = 0
2022-10-21 16:31:11 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:31:11 INFO     For loop ended
2022-10-21 16:31:11 INFO     fun_blade_wake done
2022-10-21 16:31:11 DEBUG    Setting input for FSI
2022-10-21 16:31:11 DEBUG    len(blade_obj) = 2
2022-10-21 16:31:11 DEBUG    len(simu_fsi.data) = 8
2022-10-21 16:31:11 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 16:31:12 INFO     Additional masses sections
2022-10-21 16:31:12 INFO     **************************************************
2022-10-21 16:31:12 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 16:31:12 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 16:31:12 INFO     Additional masses sections end
2022-10-21 16:31:12 INFO     **************************************************
2022-10-21 16:31:12 INFO     Constraints sections
2022-10-21 16:31:12 INFO     **************************************************
2022-10-21 16:31:58 INFO     read_yaml conversion started!
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:32:00 DEBUG    inz0: 51
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:32:00 DEBUG    inz0: 51
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:32:00 DEBUG    inz0: 130
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:32:00 DEBUG    inz0: 130
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:32:00 DEBUG    inz0: 51
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:32:00 DEBUG    inz0: 51
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:32:00 DEBUG    inz0: 130
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 16:32:00 DEBUG    inz0: 130
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 16:32:00 DEBUG    inz0: 101
2022-10-21 16:32:00 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:32:00 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 16:32:00 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:32:00 DEBUG    inz0: 51
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:32:00 DEBUG    inz0: 51
2022-10-21 16:32:00 DEBUG    UVLM class:
Inside pipe:
2022-10-21 16:32:00 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 16:32:00 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:32:00 DEBUG    inz0: 51
2022-10-21 16:32:00 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 16:32:00 DEBUG    inz0: 51
2022-10-21 16:32:01 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:32:01 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 16:32:01 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 16:32:01 DEBUG    matplotlib version 3.3.2
2022-10-21 16:32:01 DEBUG    interactive is False
2022-10-21 16:32:01 DEBUG    platform is linux
2022-10-21 16:32:01 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 16:32:01 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 16:32:01 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 16:32:02 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:32:02 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 16:32:02 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 16:32:02 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 16:32:03 INFO     i = 0,len(blade_obj) = 0
2022-10-21 16:32:03 INFO     i = 0,len(blade_obj) = 1
2022-10-21 16:32:03 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:32:03 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 16:32:03 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:32:03 DEBUG    wake = []
2022-10-21 16:32:03 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 16:32:03 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:32:03 INFO     inside fun_blade_wake
2022-10-21 16:32:03 DEBUG    wake was empty, creating new wake
2022-10-21 16:32:03 DEBUG    wake index: w = 0
2022-10-21 16:32:03 DEBUG    (obj.mx+1) = 6
2022-10-21 16:32:03 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:32:03 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:32:03 INFO     For loop started
2022-10-21 16:32:03 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:32:03 DEBUG    j= 5, row1 = [4]
2022-10-21 16:32:03 DEBUG    j= 5, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:32:03 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:32:03 DEBUG    j= 11, row1 = [9]
2022-10-21 16:32:03 DEBUG    j= 11, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:32:03 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:32:03 DEBUG    j= 17, row1 = [14]
2022-10-21 16:32:03 DEBUG    j= 17, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:32:03 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:32:03 DEBUG    j= 23, row1 = [19]
2022-10-21 16:32:03 DEBUG    j= 23, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:32:03 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:32:03 DEBUG    j= 29, row1 = [24]
2022-10-21 16:32:03 DEBUG    j= 29, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:32:03 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:32:03 DEBUG    j= 35, row1 = [29]
2022-10-21 16:32:03 DEBUG    j= 35, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:32:03 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:32:03 DEBUG    j= 41, row1 = [34]
2022-10-21 16:32:03 DEBUG    j= 41, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:32:03 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:32:03 DEBUG    j= 47, row1 = [39]
2022-10-21 16:32:03 DEBUG    j= 47, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:32:03 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:32:03 DEBUG    j= 53, row1 = [44]
2022-10-21 16:32:03 DEBUG    j= 53, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:32:03 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:32:03 DEBUG    j= 59, row1 = [49]
2022-10-21 16:32:03 DEBUG    j= 59, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:32:03 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:32:03 DEBUG    j= 65, row1 = [54]
2022-10-21 16:32:03 DEBUG    j= 65, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:32:03 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:32:03 DEBUG    j= 71, row1 = [59]
2022-10-21 16:32:03 DEBUG    j= 71, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:32:03 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:32:03 DEBUG    j= 77, row1 = [64]
2022-10-21 16:32:03 DEBUG    j= 77, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:32:03 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:32:03 DEBUG    j= 83, row1 = [69]
2022-10-21 16:32:03 DEBUG    j= 83, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:32:03 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:32:03 DEBUG    j= 89, row1 = [74]
2022-10-21 16:32:03 DEBUG    j= 89, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:32:03 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:32:03 DEBUG    j= 95, row1 = [79]
2022-10-21 16:32:03 DEBUG    j= 95, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:32:03 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:32:03 DEBUG    j= 101, row1 = [84]
2022-10-21 16:32:03 DEBUG    j= 101, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:32:03 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:32:03 DEBUG    j= 107, row1 = [89]
2022-10-21 16:32:03 DEBUG    j= 107, row2 = 0
2022-10-21 16:32:03 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:32:03 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:32:03 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:32:03 DEBUG    j= 113, row1 = [94]
2022-10-21 16:32:04 DEBUG    j= 113, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:32:04 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:32:04 DEBUG    j= 119, row1 = [99]
2022-10-21 16:32:04 DEBUG    j= 119, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:32:04 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:32:04 DEBUG    j= 125, row1 = [104]
2022-10-21 16:32:04 DEBUG    j= 125, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:32:04 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:32:04 DEBUG    j= 131, row1 = [109]
2022-10-21 16:32:04 DEBUG    j= 131, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:32:04 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:32:04 DEBUG    j= 137, row1 = [114]
2022-10-21 16:32:04 DEBUG    j= 137, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:32:04 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:32:04 DEBUG    j= 143, row1 = [119]
2022-10-21 16:32:04 DEBUG    j= 143, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:32:04 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:32:04 DEBUG    j= 149, row1 = [124]
2022-10-21 16:32:04 DEBUG    j= 149, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:32:04 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:32:04 DEBUG    j= 155, row1 = [129]
2022-10-21 16:32:04 DEBUG    j= 155, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:32:04 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:32:04 DEBUG    j= 161, row1 = [134]
2022-10-21 16:32:04 DEBUG    j= 161, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:32:04 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:32:04 DEBUG    j= 167, row1 = [139]
2022-10-21 16:32:04 DEBUG    j= 167, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:32:04 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:32:04 DEBUG    j= 173, row1 = [144]
2022-10-21 16:32:04 DEBUG    j= 173, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:32:04 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:32:04 DEBUG    j= 179, row1 = [149]
2022-10-21 16:32:04 DEBUG    j= 179, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:32:04 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:32:04 DEBUG    j= 185, row1 = [154]
2022-10-21 16:32:04 DEBUG    j= 185, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:32:04 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:32:04 DEBUG    j= 191, row1 = [159]
2022-10-21 16:32:04 DEBUG    j= 191, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:32:04 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:32:04 DEBUG    j= 197, row1 = [164]
2022-10-21 16:32:04 DEBUG    j= 197, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:32:04 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:32:04 DEBUG    j= 203, row1 = [169]
2022-10-21 16:32:04 DEBUG    j= 203, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:32:04 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:32:04 DEBUG    j= 209, row1 = [174]
2022-10-21 16:32:04 DEBUG    j= 209, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:32:04 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:32:04 DEBUG    j= 215, row1 = [179]
2022-10-21 16:32:04 DEBUG    j= 215, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:32:04 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:32:04 DEBUG    j= 221, row1 = [184]
2022-10-21 16:32:04 DEBUG    j= 221, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:32:04 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:32:04 DEBUG    j= 227, row1 = [189]
2022-10-21 16:32:04 DEBUG    j= 227, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:32:04 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:32:04 DEBUG    j= 233, row1 = [194]
2022-10-21 16:32:04 DEBUG    j= 233, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:32:04 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:32:04 DEBUG    j= 239, row1 = [199]
2022-10-21 16:32:04 DEBUG    j= 239, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:32:04 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:32:04 DEBUG    j= 245, row1 = [204]
2022-10-21 16:32:04 DEBUG    j= 245, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:32:04 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:32:04 DEBUG    j= 251, row1 = [209]
2022-10-21 16:32:04 DEBUG    j= 251, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:32:04 INFO     For loop ended
2022-10-21 16:32:04 INFO     fun_blade_wake done
2022-10-21 16:32:04 DEBUG    Setting input for FSI
2022-10-21 16:32:04 DEBUG    len(blade_obj) = 2
2022-10-21 16:32:04 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:32:04 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 16:32:04 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:32:04 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 16:32:04 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 16:32:04 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:32:04 INFO     inside fun_blade_wake
2022-10-21 16:32:04 DEBUG    wake was not empty, appending new wake
2022-10-21 16:32:04 DEBUG    wake index: w = 1
2022-10-21 16:32:04 DEBUG    wake property.shape: (2, 2)
2022-10-21 16:32:04 DEBUG    (obj.mx+1) = 6
2022-10-21 16:32:04 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:32:04 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:32:04 INFO     For loop started
2022-10-21 16:32:04 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:32:04 DEBUG    j= 5, row1 = [4]
2022-10-21 16:32:04 DEBUG    j= 5, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:32:04 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:32:04 DEBUG    j= 11, row1 = [9]
2022-10-21 16:32:04 DEBUG    j= 11, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:32:04 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:32:04 DEBUG    j= 17, row1 = [14]
2022-10-21 16:32:04 DEBUG    j= 17, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:32:04 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:32:04 DEBUG    j= 23, row1 = [19]
2022-10-21 16:32:04 DEBUG    j= 23, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:32:04 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:32:04 DEBUG    j= 29, row1 = [24]
2022-10-21 16:32:04 DEBUG    j= 29, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:32:04 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:32:04 DEBUG    j= 35, row1 = [29]
2022-10-21 16:32:04 DEBUG    j= 35, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:32:04 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:32:04 DEBUG    j= 41, row1 = [34]
2022-10-21 16:32:04 DEBUG    j= 41, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:32:04 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:32:04 DEBUG    j= 47, row1 = [39]
2022-10-21 16:32:04 DEBUG    j= 47, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:32:04 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:32:04 DEBUG    j= 53, row1 = [44]
2022-10-21 16:32:04 DEBUG    j= 53, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:32:04 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:32:04 DEBUG    j= 59, row1 = [49]
2022-10-21 16:32:04 DEBUG    j= 59, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:32:04 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:32:04 DEBUG    j= 65, row1 = [54]
2022-10-21 16:32:04 DEBUG    j= 65, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:32:04 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:32:04 DEBUG    j= 71, row1 = [59]
2022-10-21 16:32:04 DEBUG    j= 71, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:32:04 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:32:04 DEBUG    j= 77, row1 = [64]
2022-10-21 16:32:04 DEBUG    j= 77, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:32:04 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:32:04 DEBUG    j= 83, row1 = [69]
2022-10-21 16:32:04 DEBUG    j= 83, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:32:04 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:32:04 DEBUG    j= 89, row1 = [74]
2022-10-21 16:32:04 DEBUG    j= 89, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:32:04 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:32:04 DEBUG    j= 95, row1 = [79]
2022-10-21 16:32:04 DEBUG    j= 95, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:32:04 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:32:04 DEBUG    j= 101, row1 = [84]
2022-10-21 16:32:04 DEBUG    j= 101, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:32:04 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:32:04 DEBUG    j= 107, row1 = [89]
2022-10-21 16:32:04 DEBUG    j= 107, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:32:04 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:32:04 DEBUG    j= 113, row1 = [94]
2022-10-21 16:32:04 DEBUG    j= 113, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:32:04 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:32:04 DEBUG    j= 119, row1 = [99]
2022-10-21 16:32:04 DEBUG    j= 119, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:32:04 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:32:04 DEBUG    j= 125, row1 = [104]
2022-10-21 16:32:04 DEBUG    j= 125, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:32:04 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:32:04 DEBUG    j= 131, row1 = [109]
2022-10-21 16:32:04 DEBUG    j= 131, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:32:04 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:32:04 DEBUG    j= 137, row1 = [114]
2022-10-21 16:32:04 DEBUG    j= 137, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:32:04 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:32:04 DEBUG    j= 143, row1 = [119]
2022-10-21 16:32:04 DEBUG    j= 143, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:32:04 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:32:04 DEBUG    j= 149, row1 = [124]
2022-10-21 16:32:04 DEBUG    j= 149, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:32:04 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:32:04 DEBUG    j= 155, row1 = [129]
2022-10-21 16:32:04 DEBUG    j= 155, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:32:04 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:32:04 DEBUG    j= 161, row1 = [134]
2022-10-21 16:32:04 DEBUG    j= 161, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:32:04 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:32:04 DEBUG    j= 167, row1 = [139]
2022-10-21 16:32:04 DEBUG    j= 167, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:32:04 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:32:04 DEBUG    j= 173, row1 = [144]
2022-10-21 16:32:04 DEBUG    j= 173, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:32:04 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:32:04 DEBUG    j= 179, row1 = [149]
2022-10-21 16:32:04 DEBUG    j= 179, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:32:04 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:32:04 DEBUG    j= 185, row1 = [154]
2022-10-21 16:32:04 DEBUG    j= 185, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:32:04 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:32:04 DEBUG    j= 191, row1 = [159]
2022-10-21 16:32:04 DEBUG    j= 191, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:32:04 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:32:04 DEBUG    j= 197, row1 = [164]
2022-10-21 16:32:04 DEBUG    j= 197, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:32:04 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:32:04 DEBUG    j= 203, row1 = [169]
2022-10-21 16:32:04 DEBUG    j= 203, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:32:04 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:32:04 DEBUG    j= 209, row1 = [174]
2022-10-21 16:32:04 DEBUG    j= 209, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:32:04 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:32:04 DEBUG    j= 215, row1 = [179]
2022-10-21 16:32:04 DEBUG    j= 215, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:32:04 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:32:04 DEBUG    j= 221, row1 = [184]
2022-10-21 16:32:04 DEBUG    j= 221, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:32:04 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:32:04 DEBUG    j= 227, row1 = [189]
2022-10-21 16:32:04 DEBUG    j= 227, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:32:04 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:32:04 DEBUG    j= 233, row1 = [194]
2022-10-21 16:32:04 DEBUG    j= 233, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:32:04 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:32:04 DEBUG    j= 239, row1 = [199]
2022-10-21 16:32:04 DEBUG    j= 239, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:32:04 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:32:04 DEBUG    j= 245, row1 = [204]
2022-10-21 16:32:04 DEBUG    j= 245, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:32:04 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:32:04 DEBUG    j= 251, row1 = [209]
2022-10-21 16:32:04 DEBUG    j= 251, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:32:04 INFO     For loop ended
2022-10-21 16:32:04 INFO     fun_blade_wake done
2022-10-21 16:32:04 DEBUG    Setting input for FSI
2022-10-21 16:32:04 DEBUG    len(blade_obj) = 2
2022-10-21 16:32:04 DEBUG    Inputs to fun_blade_wake
2022-10-21 16:32:04 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 16:32:04 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 16:32:04 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 16:32:04 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 16:32:04 DEBUG    Inputs to fun_blade_wake end
2022-10-21 16:32:04 INFO     inside fun_blade_wake
2022-10-21 16:32:04 DEBUG    wake was not empty, appending new wake
2022-10-21 16:32:04 DEBUG    wake index: w = 2
2022-10-21 16:32:04 DEBUG    wake property.shape: (3, 2)
2022-10-21 16:32:04 DEBUG    (obj.mx+1) = 6
2022-10-21 16:32:04 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 16:32:04 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 16:32:04 INFO     For loop started
2022-10-21 16:32:04 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 16:32:04 DEBUG    j= 5, row1 = [4]
2022-10-21 16:32:04 DEBUG    j= 5, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 5, row1[row2] = 4
2022-10-21 16:32:04 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 16:32:04 DEBUG    j= 11, row1 = [9]
2022-10-21 16:32:04 DEBUG    j= 11, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 11, row1[row2] = 9
2022-10-21 16:32:04 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 16:32:04 DEBUG    j= 17, row1 = [14]
2022-10-21 16:32:04 DEBUG    j= 17, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 17, row1[row2] = 14
2022-10-21 16:32:04 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 16:32:04 DEBUG    j= 23, row1 = [19]
2022-10-21 16:32:04 DEBUG    j= 23, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 23, row1[row2] = 19
2022-10-21 16:32:04 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 16:32:04 DEBUG    j= 29, row1 = [24]
2022-10-21 16:32:04 DEBUG    j= 29, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 29, row1[row2] = 24
2022-10-21 16:32:04 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 16:32:04 DEBUG    j= 35, row1 = [29]
2022-10-21 16:32:04 DEBUG    j= 35, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 35, row1[row2] = 29
2022-10-21 16:32:04 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 16:32:04 DEBUG    j= 41, row1 = [34]
2022-10-21 16:32:04 DEBUG    j= 41, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 41, row1[row2] = 34
2022-10-21 16:32:04 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 16:32:04 DEBUG    j= 47, row1 = [39]
2022-10-21 16:32:04 DEBUG    j= 47, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 47, row1[row2] = 39
2022-10-21 16:32:04 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 16:32:04 DEBUG    j= 53, row1 = [44]
2022-10-21 16:32:04 DEBUG    j= 53, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 53, row1[row2] = 44
2022-10-21 16:32:04 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 16:32:04 DEBUG    j= 59, row1 = [49]
2022-10-21 16:32:04 DEBUG    j= 59, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 59, row1[row2] = 49
2022-10-21 16:32:04 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 16:32:04 DEBUG    j= 65, row1 = [54]
2022-10-21 16:32:04 DEBUG    j= 65, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 65, row1[row2] = 54
2022-10-21 16:32:04 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 16:32:04 DEBUG    j= 71, row1 = [59]
2022-10-21 16:32:04 DEBUG    j= 71, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 71, row1[row2] = 59
2022-10-21 16:32:04 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 16:32:04 DEBUG    j= 77, row1 = [64]
2022-10-21 16:32:04 DEBUG    j= 77, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 77, row1[row2] = 64
2022-10-21 16:32:04 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 16:32:04 DEBUG    j= 83, row1 = [69]
2022-10-21 16:32:04 DEBUG    j= 83, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 83, row1[row2] = 69
2022-10-21 16:32:04 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 16:32:04 DEBUG    j= 89, row1 = [74]
2022-10-21 16:32:04 DEBUG    j= 89, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 89, row1[row2] = 74
2022-10-21 16:32:04 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 16:32:04 DEBUG    j= 95, row1 = [79]
2022-10-21 16:32:04 DEBUG    j= 95, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 95, row1[row2] = 79
2022-10-21 16:32:04 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 16:32:04 DEBUG    j= 101, row1 = [84]
2022-10-21 16:32:04 DEBUG    j= 101, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 101, row1[row2] = 84
2022-10-21 16:32:04 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 16:32:04 DEBUG    j= 107, row1 = [89]
2022-10-21 16:32:04 DEBUG    j= 107, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 107, row1[row2] = 89
2022-10-21 16:32:04 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 16:32:04 DEBUG    j= 113, row1 = [94]
2022-10-21 16:32:04 DEBUG    j= 113, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 113, row1[row2] = 94
2022-10-21 16:32:04 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 16:32:04 DEBUG    j= 119, row1 = [99]
2022-10-21 16:32:04 DEBUG    j= 119, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 119, row1[row2] = 99
2022-10-21 16:32:04 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 16:32:04 DEBUG    j= 125, row1 = [104]
2022-10-21 16:32:04 DEBUG    j= 125, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 125, row1[row2] = 104
2022-10-21 16:32:04 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 16:32:04 DEBUG    j= 131, row1 = [109]
2022-10-21 16:32:04 DEBUG    j= 131, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 131, row1[row2] = 109
2022-10-21 16:32:04 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 16:32:04 DEBUG    j= 137, row1 = [114]
2022-10-21 16:32:04 DEBUG    j= 137, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 137, row1[row2] = 114
2022-10-21 16:32:04 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 16:32:04 DEBUG    j= 143, row1 = [119]
2022-10-21 16:32:04 DEBUG    j= 143, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 143, row1[row2] = 119
2022-10-21 16:32:04 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 16:32:04 DEBUG    j= 149, row1 = [124]
2022-10-21 16:32:04 DEBUG    j= 149, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 149, row1[row2] = 124
2022-10-21 16:32:04 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 16:32:04 DEBUG    j= 155, row1 = [129]
2022-10-21 16:32:04 DEBUG    j= 155, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 155, row1[row2] = 129
2022-10-21 16:32:04 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 16:32:04 DEBUG    j= 161, row1 = [134]
2022-10-21 16:32:04 DEBUG    j= 161, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 161, row1[row2] = 134
2022-10-21 16:32:04 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 16:32:04 DEBUG    j= 167, row1 = [139]
2022-10-21 16:32:04 DEBUG    j= 167, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 167, row1[row2] = 139
2022-10-21 16:32:04 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 16:32:04 DEBUG    j= 173, row1 = [144]
2022-10-21 16:32:04 DEBUG    j= 173, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 173, row1[row2] = 144
2022-10-21 16:32:04 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 16:32:04 DEBUG    j= 179, row1 = [149]
2022-10-21 16:32:04 DEBUG    j= 179, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 179, row1[row2] = 149
2022-10-21 16:32:04 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 16:32:04 DEBUG    j= 185, row1 = [154]
2022-10-21 16:32:04 DEBUG    j= 185, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 185, row1[row2] = 154
2022-10-21 16:32:04 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 16:32:04 DEBUG    j= 191, row1 = [159]
2022-10-21 16:32:04 DEBUG    j= 191, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 191, row1[row2] = 159
2022-10-21 16:32:04 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 16:32:04 DEBUG    j= 197, row1 = [164]
2022-10-21 16:32:04 DEBUG    j= 197, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 197, row1[row2] = 164
2022-10-21 16:32:04 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 16:32:04 DEBUG    j= 203, row1 = [169]
2022-10-21 16:32:04 DEBUG    j= 203, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 203, row1[row2] = 169
2022-10-21 16:32:04 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 16:32:04 DEBUG    j= 209, row1 = [174]
2022-10-21 16:32:04 DEBUG    j= 209, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 209, row1[row2] = 174
2022-10-21 16:32:04 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 16:32:04 DEBUG    j= 215, row1 = [179]
2022-10-21 16:32:04 DEBUG    j= 215, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 215, row1[row2] = 179
2022-10-21 16:32:04 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 16:32:04 DEBUG    j= 221, row1 = [184]
2022-10-21 16:32:04 DEBUG    j= 221, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 221, row1[row2] = 184
2022-10-21 16:32:04 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 16:32:04 DEBUG    j= 227, row1 = [189]
2022-10-21 16:32:04 DEBUG    j= 227, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 227, row1[row2] = 189
2022-10-21 16:32:04 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 16:32:04 DEBUG    j= 233, row1 = [194]
2022-10-21 16:32:04 DEBUG    j= 233, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 233, row1[row2] = 194
2022-10-21 16:32:04 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 16:32:04 DEBUG    j= 239, row1 = [199]
2022-10-21 16:32:04 DEBUG    j= 239, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 239, row1[row2] = 199
2022-10-21 16:32:04 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 16:32:04 DEBUG    j= 245, row1 = [204]
2022-10-21 16:32:04 DEBUG    j= 245, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 245, row1[row2] = 204
2022-10-21 16:32:04 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 16:32:04 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 16:32:04 DEBUG    j= 251, row1 = [209]
2022-10-21 16:32:04 DEBUG    j= 251, row2 = 0
2022-10-21 16:32:04 DEBUG    j= 251, row1[row2] = 209
2022-10-21 16:32:04 INFO     For loop ended
2022-10-21 16:32:04 INFO     fun_blade_wake done
2022-10-21 16:32:04 DEBUG    Setting input for FSI
2022-10-21 16:32:04 DEBUG    len(blade_obj) = 2
2022-10-21 16:32:04 DEBUG    len(simu_fsi.data) = 8
2022-10-21 16:32:04 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 16:32:05 INFO     Additional masses sections
2022-10-21 16:32:05 INFO     **************************************************
2022-10-21 16:32:05 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 16:32:05 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 16:32:05 INFO     Additional masses sections end
2022-10-21 16:32:05 INFO     **************************************************
2022-10-21 16:32:05 INFO     Constraints sections
2022-10-21 16:32:05 INFO     **************************************************
2022-10-21 16:32:05 DEBUG    len(simu_struct.constraints) = 3
2022-10-21 16:32:05 DEBUG    simu_struct.constraints = [SimulationSettings.Constraint(type='rigidsupport', nodes=array([2, 0]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([22, 23]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([73,  0]), phi1=array([0, 0, 0]))]
2022-10-21 16:32:05 DEBUG    remo_internal_const = [2, 22, 73]
2022-10-21 17:35:53 INFO     read_yaml conversion started!
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:35:55 DEBUG    inz0: 51
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:35:55 DEBUG    inz0: 51
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:35:55 DEBUG    inz0: 130
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:35:55 DEBUG    inz0: 130
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:35:55 DEBUG    inz0: 51
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:35:55 DEBUG    inz0: 51
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:35:55 DEBUG    inz0: 130
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:35:55 DEBUG    inz0: 130
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:55 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:35:55 DEBUG    inz0: 101
2022-10-21 17:35:56 DEBUG    UVLM class:
Inside pipe:
2022-10-21 17:35:56 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 17:35:56 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 17:35:56 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:35:56 DEBUG    inz0: 51
2022-10-21 17:35:56 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:35:56 DEBUG    inz0: 51
2022-10-21 17:35:56 DEBUG    UVLM class:
Inside pipe:
2022-10-21 17:35:56 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 17:35:56 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 17:35:56 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:35:56 DEBUG    inz0: 51
2022-10-21 17:35:56 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:35:56 DEBUG    inz0: 51
2022-10-21 17:35:57 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 17:35:57 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 17:35:57 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 17:35:57 DEBUG    matplotlib version 3.3.2
2022-10-21 17:35:57 DEBUG    interactive is False
2022-10-21 17:35:57 DEBUG    platform is linux
2022-10-21 17:35:57 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 17:35:57 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 17:35:57 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 17:35:57 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 17:35:57 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 17:35:58 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:35:58 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 17:35:59 INFO     i = 0,len(blade_obj) = 0
2022-10-21 17:35:59 INFO     i = 0,len(blade_obj) = 1
2022-10-21 17:35:59 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:35:59 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 17:36:00 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:36:00 DEBUG    wake = []
2022-10-21 17:36:00 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 17:36:00 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:36:00 INFO     inside fun_blade_wake
2022-10-21 17:36:00 DEBUG    wake was empty, creating new wake
2022-10-21 17:36:00 DEBUG    wake index: w = 0
2022-10-21 17:36:00 DEBUG    (obj.mx+1) = 6
2022-10-21 17:36:00 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:36:00 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:36:00 INFO     For loop started
2022-10-21 17:36:00 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:36:00 DEBUG    j= 5, row1 = [4]
2022-10-21 17:36:00 DEBUG    j= 5, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:36:00 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:36:00 DEBUG    j= 11, row1 = [9]
2022-10-21 17:36:00 DEBUG    j= 11, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:36:00 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:36:00 DEBUG    j= 17, row1 = [14]
2022-10-21 17:36:00 DEBUG    j= 17, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:36:00 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:36:00 DEBUG    j= 23, row1 = [19]
2022-10-21 17:36:00 DEBUG    j= 23, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:36:00 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:36:00 DEBUG    j= 29, row1 = [24]
2022-10-21 17:36:00 DEBUG    j= 29, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:36:00 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:36:00 DEBUG    j= 35, row1 = [29]
2022-10-21 17:36:00 DEBUG    j= 35, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:36:00 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:36:00 DEBUG    j= 41, row1 = [34]
2022-10-21 17:36:00 DEBUG    j= 41, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:36:00 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:36:00 DEBUG    j= 47, row1 = [39]
2022-10-21 17:36:00 DEBUG    j= 47, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:36:00 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:36:00 DEBUG    j= 53, row1 = [44]
2022-10-21 17:36:00 DEBUG    j= 53, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:36:00 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:36:00 DEBUG    j= 59, row1 = [49]
2022-10-21 17:36:00 DEBUG    j= 59, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:36:00 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:36:00 DEBUG    j= 65, row1 = [54]
2022-10-21 17:36:00 DEBUG    j= 65, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:36:00 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:36:00 DEBUG    j= 71, row1 = [59]
2022-10-21 17:36:00 DEBUG    j= 71, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:36:00 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:36:00 DEBUG    j= 77, row1 = [64]
2022-10-21 17:36:00 DEBUG    j= 77, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:36:00 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:36:00 DEBUG    j= 83, row1 = [69]
2022-10-21 17:36:00 DEBUG    j= 83, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:36:00 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:36:00 DEBUG    j= 89, row1 = [74]
2022-10-21 17:36:00 DEBUG    j= 89, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:36:00 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:36:00 DEBUG    j= 95, row1 = [79]
2022-10-21 17:36:00 DEBUG    j= 95, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:36:00 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:36:00 DEBUG    j= 101, row1 = [84]
2022-10-21 17:36:00 DEBUG    j= 101, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:36:00 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:36:00 DEBUG    j= 107, row1 = [89]
2022-10-21 17:36:00 DEBUG    j= 107, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:36:00 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:36:00 DEBUG    j= 113, row1 = [94]
2022-10-21 17:36:00 DEBUG    j= 113, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:36:00 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:36:00 DEBUG    j= 119, row1 = [99]
2022-10-21 17:36:00 DEBUG    j= 119, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:36:00 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:36:00 DEBUG    j= 125, row1 = [104]
2022-10-21 17:36:00 DEBUG    j= 125, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:36:00 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:36:00 DEBUG    j= 131, row1 = [109]
2022-10-21 17:36:00 DEBUG    j= 131, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:36:00 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:36:00 DEBUG    j= 137, row1 = [114]
2022-10-21 17:36:00 DEBUG    j= 137, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:36:00 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:36:00 DEBUG    j= 143, row1 = [119]
2022-10-21 17:36:00 DEBUG    j= 143, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:36:00 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:36:00 DEBUG    j= 149, row1 = [124]
2022-10-21 17:36:00 DEBUG    j= 149, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:36:00 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:36:00 DEBUG    j= 155, row1 = [129]
2022-10-21 17:36:00 DEBUG    j= 155, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:36:00 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:36:00 DEBUG    j= 161, row1 = [134]
2022-10-21 17:36:00 DEBUG    j= 161, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:36:00 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:36:00 DEBUG    j= 167, row1 = [139]
2022-10-21 17:36:00 DEBUG    j= 167, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:36:00 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:36:00 DEBUG    j= 173, row1 = [144]
2022-10-21 17:36:00 DEBUG    j= 173, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:36:00 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:36:00 DEBUG    j= 179, row1 = [149]
2022-10-21 17:36:00 DEBUG    j= 179, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:36:00 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:36:00 DEBUG    j= 185, row1 = [154]
2022-10-21 17:36:00 DEBUG    j= 185, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:36:00 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:36:00 DEBUG    j= 191, row1 = [159]
2022-10-21 17:36:00 DEBUG    j= 191, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:36:00 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:36:00 DEBUG    j= 197, row1 = [164]
2022-10-21 17:36:00 DEBUG    j= 197, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:36:00 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:36:00 DEBUG    j= 203, row1 = [169]
2022-10-21 17:36:00 DEBUG    j= 203, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:36:00 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:36:00 DEBUG    j= 209, row1 = [174]
2022-10-21 17:36:00 DEBUG    j= 209, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:36:00 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:36:00 DEBUG    j= 215, row1 = [179]
2022-10-21 17:36:00 DEBUG    j= 215, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:36:00 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:36:00 DEBUG    j= 221, row1 = [184]
2022-10-21 17:36:00 DEBUG    j= 221, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:36:00 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:36:00 DEBUG    j= 227, row1 = [189]
2022-10-21 17:36:00 DEBUG    j= 227, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:36:00 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:36:00 DEBUG    j= 233, row1 = [194]
2022-10-21 17:36:00 DEBUG    j= 233, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:36:00 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:36:00 DEBUG    j= 239, row1 = [199]
2022-10-21 17:36:00 DEBUG    j= 239, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:36:00 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:36:00 DEBUG    j= 245, row1 = [204]
2022-10-21 17:36:00 DEBUG    j= 245, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:36:00 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:36:00 DEBUG    j= 251, row1 = [209]
2022-10-21 17:36:00 DEBUG    j= 251, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:36:00 INFO     For loop ended
2022-10-21 17:36:00 INFO     fun_blade_wake done
2022-10-21 17:36:00 DEBUG    Setting input for FSI
2022-10-21 17:36:00 DEBUG    len(blade_obj) = 2
2022-10-21 17:36:00 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:36:00 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 17:36:00 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:36:00 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 17:36:00 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 17:36:00 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:36:00 INFO     inside fun_blade_wake
2022-10-21 17:36:00 DEBUG    wake was not empty, appending new wake
2022-10-21 17:36:00 DEBUG    wake index: w = 1
2022-10-21 17:36:00 DEBUG    wake property.shape: (2, 2)
2022-10-21 17:36:00 DEBUG    (obj.mx+1) = 6
2022-10-21 17:36:00 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:36:00 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:36:00 INFO     For loop started
2022-10-21 17:36:00 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:36:00 DEBUG    j= 5, row1 = [4]
2022-10-21 17:36:00 DEBUG    j= 5, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:36:00 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:36:00 DEBUG    j= 11, row1 = [9]
2022-10-21 17:36:00 DEBUG    j= 11, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:36:00 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:36:00 DEBUG    j= 17, row1 = [14]
2022-10-21 17:36:00 DEBUG    j= 17, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:36:00 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:36:00 DEBUG    j= 23, row1 = [19]
2022-10-21 17:36:00 DEBUG    j= 23, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:36:00 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:36:00 DEBUG    j= 29, row1 = [24]
2022-10-21 17:36:00 DEBUG    j= 29, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:36:00 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:36:00 DEBUG    j= 35, row1 = [29]
2022-10-21 17:36:00 DEBUG    j= 35, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:36:00 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:36:00 DEBUG    j= 41, row1 = [34]
2022-10-21 17:36:00 DEBUG    j= 41, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:36:00 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:36:00 DEBUG    j= 47, row1 = [39]
2022-10-21 17:36:00 DEBUG    j= 47, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:36:00 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:36:00 DEBUG    j= 53, row1 = [44]
2022-10-21 17:36:00 DEBUG    j= 53, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:36:00 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:36:00 DEBUG    j= 59, row1 = [49]
2022-10-21 17:36:00 DEBUG    j= 59, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:36:00 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:36:00 DEBUG    j= 65, row1 = [54]
2022-10-21 17:36:00 DEBUG    j= 65, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:36:00 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:36:00 DEBUG    j= 71, row1 = [59]
2022-10-21 17:36:00 DEBUG    j= 71, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:36:00 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:36:00 DEBUG    j= 77, row1 = [64]
2022-10-21 17:36:00 DEBUG    j= 77, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:36:00 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:36:00 DEBUG    j= 83, row1 = [69]
2022-10-21 17:36:00 DEBUG    j= 83, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:36:00 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:36:00 DEBUG    j= 89, row1 = [74]
2022-10-21 17:36:00 DEBUG    j= 89, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:36:00 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:36:00 DEBUG    j= 95, row1 = [79]
2022-10-21 17:36:00 DEBUG    j= 95, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:36:00 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:36:00 DEBUG    j= 101, row1 = [84]
2022-10-21 17:36:00 DEBUG    j= 101, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:36:00 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:36:00 DEBUG    j= 107, row1 = [89]
2022-10-21 17:36:00 DEBUG    j= 107, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:36:00 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:36:00 DEBUG    j= 113, row1 = [94]
2022-10-21 17:36:00 DEBUG    j= 113, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:36:00 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:36:00 DEBUG    j= 119, row1 = [99]
2022-10-21 17:36:00 DEBUG    j= 119, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:36:00 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:36:00 DEBUG    j= 125, row1 = [104]
2022-10-21 17:36:00 DEBUG    j= 125, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:36:00 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:36:00 DEBUG    j= 131, row1 = [109]
2022-10-21 17:36:00 DEBUG    j= 131, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:36:00 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:36:00 DEBUG    j= 137, row1 = [114]
2022-10-21 17:36:00 DEBUG    j= 137, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:36:00 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:36:00 DEBUG    j= 143, row1 = [119]
2022-10-21 17:36:00 DEBUG    j= 143, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:36:00 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:36:00 DEBUG    j= 149, row1 = [124]
2022-10-21 17:36:00 DEBUG    j= 149, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:36:00 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:36:00 DEBUG    j= 155, row1 = [129]
2022-10-21 17:36:00 DEBUG    j= 155, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:36:00 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:36:00 DEBUG    j= 161, row1 = [134]
2022-10-21 17:36:00 DEBUG    j= 161, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:36:00 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:36:00 DEBUG    j= 167, row1 = [139]
2022-10-21 17:36:00 DEBUG    j= 167, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:36:00 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:36:00 DEBUG    j= 173, row1 = [144]
2022-10-21 17:36:00 DEBUG    j= 173, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:36:00 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:36:00 DEBUG    j= 179, row1 = [149]
2022-10-21 17:36:00 DEBUG    j= 179, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:36:00 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:36:00 DEBUG    j= 185, row1 = [154]
2022-10-21 17:36:00 DEBUG    j= 185, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:36:00 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:36:00 DEBUG    j= 191, row1 = [159]
2022-10-21 17:36:00 DEBUG    j= 191, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:36:00 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:36:00 DEBUG    j= 197, row1 = [164]
2022-10-21 17:36:00 DEBUG    j= 197, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:36:00 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:36:00 DEBUG    j= 203, row1 = [169]
2022-10-21 17:36:00 DEBUG    j= 203, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:36:00 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:36:00 DEBUG    j= 209, row1 = [174]
2022-10-21 17:36:00 DEBUG    j= 209, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:36:00 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:36:00 DEBUG    j= 215, row1 = [179]
2022-10-21 17:36:00 DEBUG    j= 215, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:36:00 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:36:00 DEBUG    j= 221, row1 = [184]
2022-10-21 17:36:00 DEBUG    j= 221, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:36:00 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:36:00 DEBUG    j= 227, row1 = [189]
2022-10-21 17:36:00 DEBUG    j= 227, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:36:00 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:36:00 DEBUG    j= 233, row1 = [194]
2022-10-21 17:36:00 DEBUG    j= 233, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:36:00 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:36:00 DEBUG    j= 239, row1 = [199]
2022-10-21 17:36:00 DEBUG    j= 239, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:36:00 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:36:00 DEBUG    j= 245, row1 = [204]
2022-10-21 17:36:00 DEBUG    j= 245, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:36:00 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:36:00 DEBUG    j= 251, row1 = [209]
2022-10-21 17:36:00 DEBUG    j= 251, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:36:00 INFO     For loop ended
2022-10-21 17:36:00 INFO     fun_blade_wake done
2022-10-21 17:36:00 DEBUG    Setting input for FSI
2022-10-21 17:36:00 DEBUG    len(blade_obj) = 2
2022-10-21 17:36:00 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:36:00 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 17:36:00 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:36:00 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 17:36:00 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 17:36:00 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:36:00 INFO     inside fun_blade_wake
2022-10-21 17:36:00 DEBUG    wake was not empty, appending new wake
2022-10-21 17:36:00 DEBUG    wake index: w = 2
2022-10-21 17:36:00 DEBUG    wake property.shape: (3, 2)
2022-10-21 17:36:00 DEBUG    (obj.mx+1) = 6
2022-10-21 17:36:00 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:36:00 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:36:00 INFO     For loop started
2022-10-21 17:36:00 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:36:00 DEBUG    j= 5, row1 = [4]
2022-10-21 17:36:00 DEBUG    j= 5, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:36:00 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:36:00 DEBUG    j= 11, row1 = [9]
2022-10-21 17:36:00 DEBUG    j= 11, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:36:00 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:36:00 DEBUG    j= 17, row1 = [14]
2022-10-21 17:36:00 DEBUG    j= 17, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:36:00 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:36:00 DEBUG    j= 23, row1 = [19]
2022-10-21 17:36:00 DEBUG    j= 23, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:36:00 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:36:00 DEBUG    j= 29, row1 = [24]
2022-10-21 17:36:00 DEBUG    j= 29, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:36:00 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:36:00 DEBUG    j= 35, row1 = [29]
2022-10-21 17:36:00 DEBUG    j= 35, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:36:00 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:36:00 DEBUG    j= 41, row1 = [34]
2022-10-21 17:36:00 DEBUG    j= 41, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:36:00 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:36:00 DEBUG    j= 47, row1 = [39]
2022-10-21 17:36:00 DEBUG    j= 47, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:36:00 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:36:00 DEBUG    j= 53, row1 = [44]
2022-10-21 17:36:00 DEBUG    j= 53, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:36:00 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:36:00 DEBUG    j= 59, row1 = [49]
2022-10-21 17:36:00 DEBUG    j= 59, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:36:00 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:36:00 DEBUG    j= 65, row1 = [54]
2022-10-21 17:36:00 DEBUG    j= 65, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:36:00 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:36:00 DEBUG    j= 71, row1 = [59]
2022-10-21 17:36:00 DEBUG    j= 71, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:36:00 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:36:00 DEBUG    j= 77, row1 = [64]
2022-10-21 17:36:00 DEBUG    j= 77, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:36:00 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:36:00 DEBUG    j= 83, row1 = [69]
2022-10-21 17:36:00 DEBUG    j= 83, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:36:00 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:36:00 DEBUG    j= 89, row1 = [74]
2022-10-21 17:36:00 DEBUG    j= 89, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:36:00 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:36:00 DEBUG    j= 95, row1 = [79]
2022-10-21 17:36:00 DEBUG    j= 95, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:36:00 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:36:00 DEBUG    j= 101, row1 = [84]
2022-10-21 17:36:00 DEBUG    j= 101, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:36:00 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:36:00 DEBUG    j= 107, row1 = [89]
2022-10-21 17:36:00 DEBUG    j= 107, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:36:00 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:36:00 DEBUG    j= 113, row1 = [94]
2022-10-21 17:36:00 DEBUG    j= 113, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:36:00 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:36:00 DEBUG    j= 119, row1 = [99]
2022-10-21 17:36:00 DEBUG    j= 119, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:36:00 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:36:00 DEBUG    j= 125, row1 = [104]
2022-10-21 17:36:00 DEBUG    j= 125, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:36:00 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:36:00 DEBUG    j= 131, row1 = [109]
2022-10-21 17:36:00 DEBUG    j= 131, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:36:00 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:36:00 DEBUG    j= 137, row1 = [114]
2022-10-21 17:36:00 DEBUG    j= 137, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:36:00 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:36:00 DEBUG    j= 143, row1 = [119]
2022-10-21 17:36:00 DEBUG    j= 143, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:36:00 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:36:00 DEBUG    j= 149, row1 = [124]
2022-10-21 17:36:00 DEBUG    j= 149, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:36:00 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:36:00 DEBUG    j= 155, row1 = [129]
2022-10-21 17:36:00 DEBUG    j= 155, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:36:00 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:36:00 DEBUG    j= 161, row1 = [134]
2022-10-21 17:36:00 DEBUG    j= 161, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:36:00 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:36:00 DEBUG    j= 167, row1 = [139]
2022-10-21 17:36:00 DEBUG    j= 167, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:36:00 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:36:00 DEBUG    j= 173, row1 = [144]
2022-10-21 17:36:00 DEBUG    j= 173, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:36:00 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:36:00 DEBUG    j= 179, row1 = [149]
2022-10-21 17:36:00 DEBUG    j= 179, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:36:00 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:36:00 DEBUG    j= 185, row1 = [154]
2022-10-21 17:36:00 DEBUG    j= 185, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:36:00 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:36:00 DEBUG    j= 191, row1 = [159]
2022-10-21 17:36:00 DEBUG    j= 191, row2 = 0
2022-10-21 17:36:00 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:36:00 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:36:00 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:36:00 DEBUG    j= 197, row1 = [164]
2022-10-21 17:36:00 DEBUG    j= 197, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:36:01 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:36:01 DEBUG    j= 203, row1 = [169]
2022-10-21 17:36:01 DEBUG    j= 203, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:36:01 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:36:01 DEBUG    j= 209, row1 = [174]
2022-10-21 17:36:01 DEBUG    j= 209, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:36:01 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:36:01 DEBUG    j= 215, row1 = [179]
2022-10-21 17:36:01 DEBUG    j= 215, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:36:01 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:36:01 DEBUG    j= 221, row1 = [184]
2022-10-21 17:36:01 DEBUG    j= 221, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:36:01 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:36:01 DEBUG    j= 227, row1 = [189]
2022-10-21 17:36:01 DEBUG    j= 227, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:36:01 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:36:01 DEBUG    j= 233, row1 = [194]
2022-10-21 17:36:01 DEBUG    j= 233, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:36:01 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:36:01 DEBUG    j= 239, row1 = [199]
2022-10-21 17:36:01 DEBUG    j= 239, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:36:01 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:36:01 DEBUG    j= 245, row1 = [204]
2022-10-21 17:36:01 DEBUG    j= 245, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:36:01 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:36:01 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:36:01 DEBUG    j= 251, row1 = [209]
2022-10-21 17:36:01 DEBUG    j= 251, row2 = 0
2022-10-21 17:36:01 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:36:01 INFO     For loop ended
2022-10-21 17:36:01 INFO     fun_blade_wake done
2022-10-21 17:36:01 DEBUG    Setting input for FSI
2022-10-21 17:36:01 DEBUG    len(blade_obj) = 2
2022-10-21 17:36:01 DEBUG    len(simu_fsi.data) = 8
2022-10-21 17:36:01 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 17:36:01 INFO     Additional masses sections
2022-10-21 17:36:01 INFO     **************************************************
2022-10-21 17:36:01 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 17:36:01 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 17:36:02 INFO     Additional masses sections end
2022-10-21 17:36:02 INFO     **************************************************
2022-10-21 17:36:02 INFO     Constraints sections
2022-10-21 17:36:02 INFO     **************************************************
2022-10-21 17:39:28 INFO     read_yaml conversion started!
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:39:30 DEBUG    inz0: 51
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:39:30 DEBUG    inz0: 51
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:39:30 DEBUG    inz0: 130
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:39:30 DEBUG    inz0: 130
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:39:30 DEBUG    inz0: 51
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:39:30 DEBUG    inz0: 51
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:39:30 DEBUG    inz0: 130
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:39:30 DEBUG    inz0: 130
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:30 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:39:30 DEBUG    inz0: 101
2022-10-21 17:39:31 DEBUG    UVLM class:
Inside pipe:
2022-10-21 17:39:31 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 17:39:31 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 17:39:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:39:31 DEBUG    inz0: 51
2022-10-21 17:39:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:39:31 DEBUG    inz0: 51
2022-10-21 17:39:31 DEBUG    UVLM class:
Inside pipe:
2022-10-21 17:39:31 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 17:39:31 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 17:39:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:39:31 DEBUG    inz0: 51
2022-10-21 17:39:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:39:31 DEBUG    inz0: 51
2022-10-21 17:39:32 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 17:39:32 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 17:39:32 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 17:39:32 DEBUG    matplotlib version 3.3.2
2022-10-21 17:39:32 DEBUG    interactive is False
2022-10-21 17:39:32 DEBUG    platform is linux
2022-10-21 17:39:32 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 17:39:32 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 17:39:32 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 17:39:33 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 17:39:33 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 17:39:33 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:39:33 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 17:39:35 INFO     i = 0,len(blade_obj) = 0
2022-10-21 17:39:35 INFO     i = 0,len(blade_obj) = 1
2022-10-21 17:39:35 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:39:35 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 17:39:35 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:39:35 DEBUG    wake = []
2022-10-21 17:39:35 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 17:39:35 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:39:35 INFO     inside fun_blade_wake
2022-10-21 17:39:35 DEBUG    wake was empty, creating new wake
2022-10-21 17:39:35 DEBUG    wake index: w = 0
2022-10-21 17:39:35 DEBUG    (obj.mx+1) = 6
2022-10-21 17:39:35 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:39:35 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:39:35 INFO     For loop started
2022-10-21 17:39:35 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:39:35 DEBUG    j= 5, row1 = [4]
2022-10-21 17:39:35 DEBUG    j= 5, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:39:35 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:39:35 DEBUG    j= 11, row1 = [9]
2022-10-21 17:39:35 DEBUG    j= 11, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:39:35 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:39:35 DEBUG    j= 17, row1 = [14]
2022-10-21 17:39:35 DEBUG    j= 17, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:39:35 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:39:35 DEBUG    j= 23, row1 = [19]
2022-10-21 17:39:35 DEBUG    j= 23, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:39:35 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:39:35 DEBUG    j= 29, row1 = [24]
2022-10-21 17:39:35 DEBUG    j= 29, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:39:35 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:39:35 DEBUG    j= 35, row1 = [29]
2022-10-21 17:39:35 DEBUG    j= 35, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:39:35 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:39:35 DEBUG    j= 41, row1 = [34]
2022-10-21 17:39:35 DEBUG    j= 41, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:39:35 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:39:35 DEBUG    j= 47, row1 = [39]
2022-10-21 17:39:35 DEBUG    j= 47, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:39:35 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:39:35 DEBUG    j= 53, row1 = [44]
2022-10-21 17:39:35 DEBUG    j= 53, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:39:35 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:39:35 DEBUG    j= 59, row1 = [49]
2022-10-21 17:39:35 DEBUG    j= 59, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:39:35 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:39:35 DEBUG    j= 65, row1 = [54]
2022-10-21 17:39:35 DEBUG    j= 65, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:39:35 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:39:35 DEBUG    j= 71, row1 = [59]
2022-10-21 17:39:35 DEBUG    j= 71, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:39:35 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:39:35 DEBUG    j= 77, row1 = [64]
2022-10-21 17:39:35 DEBUG    j= 77, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:39:35 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:39:35 DEBUG    j= 83, row1 = [69]
2022-10-21 17:39:35 DEBUG    j= 83, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:39:35 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:39:35 DEBUG    j= 89, row1 = [74]
2022-10-21 17:39:35 DEBUG    j= 89, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:39:35 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:39:35 DEBUG    j= 95, row1 = [79]
2022-10-21 17:39:35 DEBUG    j= 95, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:39:35 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:39:35 DEBUG    j= 101, row1 = [84]
2022-10-21 17:39:35 DEBUG    j= 101, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:39:35 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:39:35 DEBUG    j= 107, row1 = [89]
2022-10-21 17:39:35 DEBUG    j= 107, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:39:35 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:39:35 DEBUG    j= 113, row1 = [94]
2022-10-21 17:39:35 DEBUG    j= 113, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:39:35 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:39:35 DEBUG    j= 119, row1 = [99]
2022-10-21 17:39:35 DEBUG    j= 119, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:39:35 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:39:35 DEBUG    j= 125, row1 = [104]
2022-10-21 17:39:35 DEBUG    j= 125, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:39:35 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:39:35 DEBUG    j= 131, row1 = [109]
2022-10-21 17:39:35 DEBUG    j= 131, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:39:35 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:39:35 DEBUG    j= 137, row1 = [114]
2022-10-21 17:39:35 DEBUG    j= 137, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:39:35 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:39:35 DEBUG    j= 143, row1 = [119]
2022-10-21 17:39:35 DEBUG    j= 143, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:39:35 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:39:35 DEBUG    j= 149, row1 = [124]
2022-10-21 17:39:35 DEBUG    j= 149, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:39:35 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:39:35 DEBUG    j= 155, row1 = [129]
2022-10-21 17:39:35 DEBUG    j= 155, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:39:35 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:39:35 DEBUG    j= 161, row1 = [134]
2022-10-21 17:39:35 DEBUG    j= 161, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:39:35 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:39:35 DEBUG    j= 167, row1 = [139]
2022-10-21 17:39:35 DEBUG    j= 167, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:39:35 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:39:35 DEBUG    j= 173, row1 = [144]
2022-10-21 17:39:35 DEBUG    j= 173, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:39:35 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:39:35 DEBUG    j= 179, row1 = [149]
2022-10-21 17:39:35 DEBUG    j= 179, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:39:35 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:39:35 DEBUG    j= 185, row1 = [154]
2022-10-21 17:39:35 DEBUG    j= 185, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:39:35 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:39:35 DEBUG    j= 191, row1 = [159]
2022-10-21 17:39:35 DEBUG    j= 191, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:39:35 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:39:35 DEBUG    j= 197, row1 = [164]
2022-10-21 17:39:35 DEBUG    j= 197, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:39:35 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:39:35 DEBUG    j= 203, row1 = [169]
2022-10-21 17:39:35 DEBUG    j= 203, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:39:35 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:39:35 DEBUG    j= 209, row1 = [174]
2022-10-21 17:39:35 DEBUG    j= 209, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:39:35 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:39:35 DEBUG    j= 215, row1 = [179]
2022-10-21 17:39:35 DEBUG    j= 215, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:39:35 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:39:35 DEBUG    j= 221, row1 = [184]
2022-10-21 17:39:35 DEBUG    j= 221, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:39:35 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:39:35 DEBUG    j= 227, row1 = [189]
2022-10-21 17:39:35 DEBUG    j= 227, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:39:35 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:39:35 DEBUG    j= 233, row1 = [194]
2022-10-21 17:39:35 DEBUG    j= 233, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:39:35 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:39:35 DEBUG    j= 239, row1 = [199]
2022-10-21 17:39:35 DEBUG    j= 239, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:39:35 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:39:35 DEBUG    j= 245, row1 = [204]
2022-10-21 17:39:35 DEBUG    j= 245, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:39:35 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:39:35 DEBUG    j= 251, row1 = [209]
2022-10-21 17:39:35 DEBUG    j= 251, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:39:35 INFO     For loop ended
2022-10-21 17:39:35 INFO     fun_blade_wake done
2022-10-21 17:39:35 DEBUG    Setting input for FSI
2022-10-21 17:39:35 DEBUG    len(blade_obj) = 2
2022-10-21 17:39:35 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:39:35 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 17:39:35 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:39:35 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 17:39:35 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 17:39:35 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:39:35 INFO     inside fun_blade_wake
2022-10-21 17:39:35 DEBUG    wake was not empty, appending new wake
2022-10-21 17:39:35 DEBUG    wake index: w = 1
2022-10-21 17:39:35 DEBUG    wake property.shape: (2, 2)
2022-10-21 17:39:35 DEBUG    (obj.mx+1) = 6
2022-10-21 17:39:35 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:39:35 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:39:35 INFO     For loop started
2022-10-21 17:39:35 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:39:35 DEBUG    j= 5, row1 = [4]
2022-10-21 17:39:35 DEBUG    j= 5, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:39:35 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:39:35 DEBUG    j= 11, row1 = [9]
2022-10-21 17:39:35 DEBUG    j= 11, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:39:35 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:39:35 DEBUG    j= 17, row1 = [14]
2022-10-21 17:39:35 DEBUG    j= 17, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:39:35 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:39:35 DEBUG    j= 23, row1 = [19]
2022-10-21 17:39:35 DEBUG    j= 23, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:39:35 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:39:35 DEBUG    j= 29, row1 = [24]
2022-10-21 17:39:35 DEBUG    j= 29, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:39:35 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:39:35 DEBUG    j= 35, row1 = [29]
2022-10-21 17:39:35 DEBUG    j= 35, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:39:35 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:39:35 DEBUG    j= 41, row1 = [34]
2022-10-21 17:39:35 DEBUG    j= 41, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:39:35 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:39:35 DEBUG    j= 47, row1 = [39]
2022-10-21 17:39:35 DEBUG    j= 47, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:39:35 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:39:35 DEBUG    j= 53, row1 = [44]
2022-10-21 17:39:35 DEBUG    j= 53, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:39:35 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:39:35 DEBUG    j= 59, row1 = [49]
2022-10-21 17:39:35 DEBUG    j= 59, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:39:35 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:39:35 DEBUG    j= 65, row1 = [54]
2022-10-21 17:39:35 DEBUG    j= 65, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:39:35 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:39:35 DEBUG    j= 71, row1 = [59]
2022-10-21 17:39:35 DEBUG    j= 71, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:39:35 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:39:35 DEBUG    j= 77, row1 = [64]
2022-10-21 17:39:35 DEBUG    j= 77, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:39:35 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:39:35 DEBUG    j= 83, row1 = [69]
2022-10-21 17:39:35 DEBUG    j= 83, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:39:35 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:39:35 DEBUG    j= 89, row1 = [74]
2022-10-21 17:39:35 DEBUG    j= 89, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:39:35 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:39:35 DEBUG    j= 95, row1 = [79]
2022-10-21 17:39:35 DEBUG    j= 95, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:39:35 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:39:35 DEBUG    j= 101, row1 = [84]
2022-10-21 17:39:35 DEBUG    j= 101, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:39:35 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:39:35 DEBUG    j= 107, row1 = [89]
2022-10-21 17:39:35 DEBUG    j= 107, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:39:35 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:39:35 DEBUG    j= 113, row1 = [94]
2022-10-21 17:39:35 DEBUG    j= 113, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:39:35 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:39:35 DEBUG    j= 119, row1 = [99]
2022-10-21 17:39:35 DEBUG    j= 119, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:39:35 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:39:35 DEBUG    j= 125, row1 = [104]
2022-10-21 17:39:35 DEBUG    j= 125, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:39:35 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:39:35 DEBUG    j= 131, row1 = [109]
2022-10-21 17:39:35 DEBUG    j= 131, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:39:35 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:39:35 DEBUG    j= 137, row1 = [114]
2022-10-21 17:39:35 DEBUG    j= 137, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:39:35 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:39:35 DEBUG    j= 143, row1 = [119]
2022-10-21 17:39:35 DEBUG    j= 143, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:39:35 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:39:35 DEBUG    j= 149, row1 = [124]
2022-10-21 17:39:35 DEBUG    j= 149, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:39:35 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:39:35 DEBUG    j= 155, row1 = [129]
2022-10-21 17:39:35 DEBUG    j= 155, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:39:35 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:39:35 DEBUG    j= 161, row1 = [134]
2022-10-21 17:39:35 DEBUG    j= 161, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:39:35 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:39:35 DEBUG    j= 167, row1 = [139]
2022-10-21 17:39:35 DEBUG    j= 167, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:39:35 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:39:35 DEBUG    j= 173, row1 = [144]
2022-10-21 17:39:35 DEBUG    j= 173, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:39:35 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:39:35 DEBUG    j= 179, row1 = [149]
2022-10-21 17:39:35 DEBUG    j= 179, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:39:35 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:39:35 DEBUG    j= 185, row1 = [154]
2022-10-21 17:39:35 DEBUG    j= 185, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:39:35 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:39:35 DEBUG    j= 191, row1 = [159]
2022-10-21 17:39:35 DEBUG    j= 191, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:39:35 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:39:35 DEBUG    j= 197, row1 = [164]
2022-10-21 17:39:35 DEBUG    j= 197, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:39:35 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:39:35 DEBUG    j= 203, row1 = [169]
2022-10-21 17:39:35 DEBUG    j= 203, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:39:35 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:39:35 DEBUG    j= 209, row1 = [174]
2022-10-21 17:39:35 DEBUG    j= 209, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:39:35 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:39:35 DEBUG    j= 215, row1 = [179]
2022-10-21 17:39:35 DEBUG    j= 215, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:39:35 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:39:35 DEBUG    j= 221, row1 = [184]
2022-10-21 17:39:35 DEBUG    j= 221, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:39:35 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:39:35 DEBUG    j= 227, row1 = [189]
2022-10-21 17:39:35 DEBUG    j= 227, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:39:35 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:39:35 DEBUG    j= 233, row1 = [194]
2022-10-21 17:39:35 DEBUG    j= 233, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:39:35 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:39:35 DEBUG    j= 239, row1 = [199]
2022-10-21 17:39:35 DEBUG    j= 239, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:39:35 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:39:35 DEBUG    j= 245, row1 = [204]
2022-10-21 17:39:35 DEBUG    j= 245, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:39:35 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:39:35 DEBUG    j= 251, row1 = [209]
2022-10-21 17:39:35 DEBUG    j= 251, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:39:35 INFO     For loop ended
2022-10-21 17:39:35 INFO     fun_blade_wake done
2022-10-21 17:39:35 DEBUG    Setting input for FSI
2022-10-21 17:39:35 DEBUG    len(blade_obj) = 2
2022-10-21 17:39:35 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:39:35 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 17:39:35 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:39:35 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 17:39:35 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 17:39:35 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:39:35 INFO     inside fun_blade_wake
2022-10-21 17:39:35 DEBUG    wake was not empty, appending new wake
2022-10-21 17:39:35 DEBUG    wake index: w = 2
2022-10-21 17:39:35 DEBUG    wake property.shape: (3, 2)
2022-10-21 17:39:35 DEBUG    (obj.mx+1) = 6
2022-10-21 17:39:35 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:39:35 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:39:35 INFO     For loop started
2022-10-21 17:39:35 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:39:35 DEBUG    j= 5, row1 = [4]
2022-10-21 17:39:35 DEBUG    j= 5, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:39:35 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:39:35 DEBUG    j= 11, row1 = [9]
2022-10-21 17:39:35 DEBUG    j= 11, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:39:35 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:39:35 DEBUG    j= 17, row1 = [14]
2022-10-21 17:39:35 DEBUG    j= 17, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:39:35 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:39:35 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:39:35 DEBUG    j= 23, row1 = [19]
2022-10-21 17:39:35 DEBUG    j= 23, row2 = 0
2022-10-21 17:39:35 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:39:35 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:39:36 DEBUG    j= 29, row1 = [24]
2022-10-21 17:39:36 DEBUG    j= 29, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:39:36 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:39:36 DEBUG    j= 35, row1 = [29]
2022-10-21 17:39:36 DEBUG    j= 35, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:39:36 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:39:36 DEBUG    j= 41, row1 = [34]
2022-10-21 17:39:36 DEBUG    j= 41, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:39:36 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:39:36 DEBUG    j= 47, row1 = [39]
2022-10-21 17:39:36 DEBUG    j= 47, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:39:36 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:39:36 DEBUG    j= 53, row1 = [44]
2022-10-21 17:39:36 DEBUG    j= 53, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:39:36 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:39:36 DEBUG    j= 59, row1 = [49]
2022-10-21 17:39:36 DEBUG    j= 59, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:39:36 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:39:36 DEBUG    j= 65, row1 = [54]
2022-10-21 17:39:36 DEBUG    j= 65, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:39:36 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:39:36 DEBUG    j= 71, row1 = [59]
2022-10-21 17:39:36 DEBUG    j= 71, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:39:36 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:39:36 DEBUG    j= 77, row1 = [64]
2022-10-21 17:39:36 DEBUG    j= 77, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:39:36 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:39:36 DEBUG    j= 83, row1 = [69]
2022-10-21 17:39:36 DEBUG    j= 83, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:39:36 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:39:36 DEBUG    j= 89, row1 = [74]
2022-10-21 17:39:36 DEBUG    j= 89, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:39:36 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:39:36 DEBUG    j= 95, row1 = [79]
2022-10-21 17:39:36 DEBUG    j= 95, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:39:36 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:39:36 DEBUG    j= 101, row1 = [84]
2022-10-21 17:39:36 DEBUG    j= 101, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:39:36 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:39:36 DEBUG    j= 107, row1 = [89]
2022-10-21 17:39:36 DEBUG    j= 107, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:39:36 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:39:36 DEBUG    j= 113, row1 = [94]
2022-10-21 17:39:36 DEBUG    j= 113, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:39:36 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:39:36 DEBUG    j= 119, row1 = [99]
2022-10-21 17:39:36 DEBUG    j= 119, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:39:36 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:39:36 DEBUG    j= 125, row1 = [104]
2022-10-21 17:39:36 DEBUG    j= 125, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:39:36 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:39:36 DEBUG    j= 131, row1 = [109]
2022-10-21 17:39:36 DEBUG    j= 131, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:39:36 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:39:36 DEBUG    j= 137, row1 = [114]
2022-10-21 17:39:36 DEBUG    j= 137, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:39:36 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:39:36 DEBUG    j= 143, row1 = [119]
2022-10-21 17:39:36 DEBUG    j= 143, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:39:36 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:39:36 DEBUG    j= 149, row1 = [124]
2022-10-21 17:39:36 DEBUG    j= 149, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:39:36 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:39:36 DEBUG    j= 155, row1 = [129]
2022-10-21 17:39:36 DEBUG    j= 155, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:39:36 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:39:36 DEBUG    j= 161, row1 = [134]
2022-10-21 17:39:36 DEBUG    j= 161, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:39:36 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:39:36 DEBUG    j= 167, row1 = [139]
2022-10-21 17:39:36 DEBUG    j= 167, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:39:36 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:39:36 DEBUG    j= 173, row1 = [144]
2022-10-21 17:39:36 DEBUG    j= 173, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:39:36 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:39:36 DEBUG    j= 179, row1 = [149]
2022-10-21 17:39:36 DEBUG    j= 179, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:39:36 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:39:36 DEBUG    j= 185, row1 = [154]
2022-10-21 17:39:36 DEBUG    j= 185, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:39:36 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:39:36 DEBUG    j= 191, row1 = [159]
2022-10-21 17:39:36 DEBUG    j= 191, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:39:36 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:39:36 DEBUG    j= 197, row1 = [164]
2022-10-21 17:39:36 DEBUG    j= 197, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:39:36 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:39:36 DEBUG    j= 203, row1 = [169]
2022-10-21 17:39:36 DEBUG    j= 203, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:39:36 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:39:36 DEBUG    j= 209, row1 = [174]
2022-10-21 17:39:36 DEBUG    j= 209, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:39:36 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:39:36 DEBUG    j= 215, row1 = [179]
2022-10-21 17:39:36 DEBUG    j= 215, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:39:36 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:39:36 DEBUG    j= 221, row1 = [184]
2022-10-21 17:39:36 DEBUG    j= 221, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:39:36 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:39:36 DEBUG    j= 227, row1 = [189]
2022-10-21 17:39:36 DEBUG    j= 227, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:39:36 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:39:36 DEBUG    j= 233, row1 = [194]
2022-10-21 17:39:36 DEBUG    j= 233, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:39:36 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:39:36 DEBUG    j= 239, row1 = [199]
2022-10-21 17:39:36 DEBUG    j= 239, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:39:36 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:39:36 DEBUG    j= 245, row1 = [204]
2022-10-21 17:39:36 DEBUG    j= 245, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:39:36 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:39:36 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:39:36 DEBUG    j= 251, row1 = [209]
2022-10-21 17:39:36 DEBUG    j= 251, row2 = 0
2022-10-21 17:39:36 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:39:36 INFO     For loop ended
2022-10-21 17:39:36 INFO     fun_blade_wake done
2022-10-21 17:39:36 DEBUG    Setting input for FSI
2022-10-21 17:39:36 DEBUG    len(blade_obj) = 2
2022-10-21 17:39:36 DEBUG    len(simu_fsi.data) = 8
2022-10-21 17:39:36 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 17:39:36 INFO     Additional masses sections
2022-10-21 17:39:36 INFO     **************************************************
2022-10-21 17:39:37 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 17:39:37 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 17:39:37 INFO     Additional masses sections end
2022-10-21 17:39:37 INFO     **************************************************
2022-10-21 17:39:37 INFO     Constraints sections
2022-10-21 17:39:37 INFO     **************************************************
2022-10-21 17:41:29 INFO     read_yaml conversion started!
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:41:31 DEBUG    inz0: 51
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:41:31 DEBUG    inz0: 51
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:41:31 DEBUG    inz0: 130
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:41:31 DEBUG    inz0: 130
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:41:31 DEBUG    inz0: 51
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:41:31 DEBUG    inz0: 51
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:41:31 DEBUG    inz0: 130
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (257, 2)
2022-10-21 17:41:31 DEBUG    inz0: 130
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (200, 2)
2022-10-21 17:41:31 DEBUG    inz0: 101
2022-10-21 17:41:31 DEBUG    UVLM class:
Inside pipe:
2022-10-21 17:41:31 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 9.926, 9.443, 8.833, 8.151, 7.39, 6.909, 6.748, 6.572, 6.5]
2022-10-21 17:41:31 DEBUG    model_uvlm["thickness"]["values"]: [0.039496, 0.039496, 0.033416, 0.034142, 0.030242, 0.031174, 0.027028, 0.027398, 0.02062, 0.021032, 0.026964]
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:41:31 DEBUG    inz0: 51
2022-10-21 17:41:31 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:41:31 DEBUG    inz0: 51
2022-10-21 17:41:32 DEBUG    UVLM class:
Inside pipe:
2022-10-21 17:41:32 DEBUG    model_uvlm["outer_diameter"]["values"]: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
2022-10-21 17:41:32 DEBUG    model_uvlm["thickness"]["values"]: [0.055341, 0.055341, 0.047677, 0.047357, 0.039697, 0.042419]
2022-10-21 17:41:32 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:41:32 DEBUG    inz0: 51
2022-10-21 17:41:32 DEBUG    airfoil_coord.shape: (101, 2)
2022-10-21 17:41:32 DEBUG    inz0: 51
2022-10-21 17:41:33 DEBUG    (private) matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 17:41:33 DEBUG    matplotlib data path: /home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data
2022-10-21 17:41:33 DEBUG    CONFIGDIR=/home/jamal/.config/matplotlib
2022-10-21 17:41:33 DEBUG    matplotlib version 3.3.2
2022-10-21 17:41:33 DEBUG    interactive is False
2022-10-21 17:41:33 DEBUG    platform is linux
2022-10-21 17:41:33 DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'setuptools._distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'setuptools._distutils.dir_util', 'setuptools._distutils.file_util', 'distutils.dir_util', 'setuptools._distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.log', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging.tags', 'setuptools._vendor.packaging._structures', 'setuptools._vendor.packaging.version', 'setuptools._vendor.packaging.utils', 'setuptools._vendor.packaging.specifiers', 'setuptools._vendor.packaging.markers', 'setuptools._vendor.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.file_util', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'jedi.inference.finder', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'mpl_toolkits.mplot3d', 'mpl_toolkits.mplot3d.axes3d', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-10-21 17:41:33 DEBUG    CACHEDIR=/home/jamal/.cache/matplotlib
2022-10-21 17:41:33 DEBUG    Using fontManager instance from /home/jamal/.cache/matplotlib/fontlist-v330.json
2022-10-21 17:41:34 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 17:41:34 DEBUG    Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-10-21 17:41:34 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-10-21 17:41:34 DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/jamal/anaconda3/envs/graph_P1/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-10-21 17:41:36 INFO     i = 0,len(blade_obj) = 0
2022-10-21 17:41:36 INFO     i = 0,len(blade_obj) = 1
2022-10-21 17:41:36 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:41:36 DEBUG    n_surf + len(blade_obj)= 4
2022-10-21 17:41:36 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:41:36 DEBUG    wake = []
2022-10-21 17:41:36 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-1.16376358e+01,  1.63053122e-01,  1.72776597e+02],
       [-1.05289255e+01, -5.59465503e-02,  1.72658354e+02],
       [-9.41669402e+00, -2.55991457e-01,  1.72539889e+02],
       [-8.31208147e+00, -4.97049770e-01,  1.72421904e+02],
       [-7.21364997e+00, -7.71381300e-01,  1.72304308e+02],
       [-6.08427455e+00, -8.79138490e-01,  1.72184763e+02],
       [-1.13399326e+01,  1.00416960e-01,  1.75096628e+02],
       [-1.02176256e+01, -1.03158413e-01,  1.74977812e+02],
       [-9.09191366e+00, -2.86496517e-01,  1.74858724e+02],
       [-7.97415646e+00, -5.17111950e-01,  1.74740272e+02],
       [-6.86085401e+00, -7.74203089e-01,  1.74622177e+02],
       [-5.71944827e+00, -8.64269224e-01,  1.74501831e+02],
       [-1.10432182e+01,  5.18800738e-02,  1.77417263e+02],
       [-9.91289760e+00, -1.37066277e-01,  1.77298238e+02],
       [-8.77930331e+00, -3.04573563e-01,  1.77178895e+02],
       [-7.65386552e+00, -5.25497026e-01,  1.77060347e+02],
       [-6.53139126e+00, -7.65828476e-01,  1.76942087e+02],
       [-5.38347574e+00, -8.39547214e-01,  1.76821349e+02],
       [-1.07485484e+01,  1.66598852e-02,  1.79738791e+02],
       [-9.61655321e+00, -1.59085748e-01,  1.79619838e+02],
       [-8.48141276e+00, -3.12301254e-01,  1.79500552e+02],
       [-7.35455147e+00, -5.24822866e-01,  1.79382144e+02],
       [-6.22938911e+00, -7.49514535e-01,  1.79263916e+02],
       [-5.08115694e+00, -8.08950006e-01,  1.79143241e+02],
       [-1.04519421e+01, -1.15467801e-02,  1.82060383e+02],
       [-9.32652905e+00, -1.74632314e-01,  1.81942207e+02],
       [-8.19811098e+00, -3.14265485e-01,  1.81823699e+02],
       [-7.07798799e+00, -5.18637113e-01,  1.81706107e+02],
       [-5.95848965e+00, -7.27883844e-01,  1.81588584e+02],
       [-4.81814395e+00, -7.74428358e-01,  1.81468760e+02],
       [-1.01514960e+01, -3.81119595e-02,  1.84381632e+02],
       [-9.04105024e+00, -1.84913660e-01,  1.84265075e+02],
       [-7.92817367e+00, -3.10945486e-01,  1.84148240e+02],
       [-6.82301360e+00, -5.02910072e-01,  1.84032286e+02],
       [-5.71802801e+00, -6.96365607e-01,  1.83916352e+02],
       [-4.59360549e+00, -7.23744100e-01,  1.83798199e+02],
       [-9.84695809e+00, -6.27140555e-02,  1.86702482e+02],
       [-8.75872007e+00, -1.92078593e-01,  1.86588283e+02],
       [-7.66868943e+00, -3.04573147e-01,  1.86473872e+02],
       [-6.58560678e+00, -4.82453602e-01,  1.86360282e+02],
       [-5.50247218e+00, -6.59845120e-01,  1.86246687e+02],
       [-4.40120769e+00, -6.66620558e-01,  1.86130948e+02],
       [-9.54193712e+00, -8.43962713e-02,  1.89023295e+02],
       [-8.48016530e+00, -1.97009898e-01,  1.88911891e+02],
       [-7.41713969e+00, -2.96560106e-01,  1.88800334e+02],
       [-6.36030957e+00, -4.60662019e-01,  1.88689537e+02],
       [-5.30325118e+00, -6.22385647e-01,  1.88578713e+02],
       [-4.22947939e+00, -6.09969720e-01,  1.88465834e+02],
       [-9.23788731e+00, -1.02904398e-01,  1.91344243e+02],
       [-8.20475764e+00, -1.99904371e-01,  1.91235839e+02],
       [-7.17081570e+00, -2.87495170e-01,  1.91127333e+02],
       [-6.14235982e+00, -4.38634965e-01,  1.91019523e+02],
       [-5.11354454e+00, -5.85611735e-01,  1.90911668e+02],
       [-4.06945676e+00, -5.55675955e-01,  1.90801874e+02],
       [-8.93757554e+00, -1.17083706e-01,  1.93665517e+02],
       [-7.93263144e+00, -2.00502811e-01,  1.93560112e+02],
       [-6.92718967e+00, -2.77493227e-01,  1.93454638e+02],
       [-5.92655539e+00, -4.16585325e-01,  1.93349832e+02],
       [-4.92549115e+00, -5.50123247e-01,  1.93244966e+02],
       [-3.91092755e+00, -5.09280644e-01,  1.93138224e+02],
       [-8.64173256e+00, -1.26072212e-01,  1.95987119e+02],
       [-7.66291853e+00, -1.97891528e-01,  1.95884594e+02],
       [-6.68382879e+00, -2.65726078e-01,  1.95782021e+02],
       [-5.70892020e+00, -3.93992035e-01,  1.95680183e+02],
       [-4.73355159e+00, -5.15609263e-01,  1.95578265e+02],
       [-3.74654267e+00, -4.68985035e-01,  1.95474297e+02],
       [-8.34987132e+00, -1.27516141e-01,  1.98309056e+02],
       [-7.39450748e+00, -1.89209714e-01,  1.98209182e+02],
       [-6.43904085e+00, -2.49235466e-01,  1.98109282e+02],
       [-5.48720603e+00, -3.68190770e-01,  1.98010278e+02],
       [-4.53489677e+00, -4.79447727e-01,  1.97911157e+02],
       [-3.57256372e+00, -4.28059493e-01,  1.97809563e+02],
       [-8.05998376e+00, -1.18408913e-01,  2.00631180e+02],
       [-7.12654258e+00, -1.71094008e-01,  2.00533799e+02],
       [-6.19313089e+00, -2.24319338e-01,  2.00436428e+02],
       [-5.26285975e+00, -3.35068582e-01,  2.00340181e+02],
       [-4.33211349e+00, -4.37115447e-01,  2.00243765e+02],
       [-3.39277489e+00, -3.81780084e-01,  2.00144273e+02],
       [-7.77058522e+00, -9.62427324e-02,  2.02953450e+02],
       [-6.85885448e+00, -1.40728791e-01,  2.02858461e+02],
       [-5.94725089e+00, -1.87861108e-01,  2.02763534e+02],
       [-5.03834434e+00, -2.91127467e-01,  2.02669947e+02],
       [-4.12897401e+00, -3.84740997e-01,  2.02576129e+02],
       [-3.21228968e+00, -3.26126939e-01,  2.02478679e+02],
       [-7.48219119e+00, -6.13713590e-02,  2.05275970e+02],
       [-6.59220437e+00, -9.84795154e-02,  2.05183269e+02],
       [-5.70240630e+00, -1.40080462e-01,  2.05090690e+02],
       [-4.81490719e+00, -2.36405890e-01,  2.04999593e+02],
       [-3.92696520e+00, -3.22188993e-01,  2.04908211e+02],
       [-3.03284228e+00, -2.60841749e-01,  2.04812844e+02],
       [-7.19594488e+00, -1.71235465e-02,  2.07598822e+02],
       [-6.32765382e+00, -5.05311867e-02,  2.07508413e+02],
       [-5.45945919e+00, -8.65856205e-02,  2.07418082e+02],
       [-4.59318915e+00, -1.75464356e-01,  2.07329301e+02],
       [-3.72650923e+00, -2.53092959e-01,  2.07240190e+02],
       [-2.85466258e+00, -1.88910510e-01,  2.07146918e+02],
       [-6.91220090e+00,  3.46886918e-02,  2.09922002e+02],
       [-6.06526497e+00,  4.55860461e-03,  2.09833810e+02],
       [-5.21835681e+00, -2.64593232e-02,  2.09745646e+02],
       [-4.37304293e+00, -1.08450238e-01,  2.09659044e+02],
       [-3.52735641e+00, -1.78526562e-01,  2.09572077e+02],
       [-2.67739637e+00, -1.11969405e-01,  2.09480921e+02],
       [-6.63111140e+00,  9.16061095e-02,  2.12245484e+02],
       [-5.80506867e+00,  6.43992653e-02,  2.12159446e+02],
       [-4.97900515e+00,  3.79786447e-02,  2.12073382e+02],
       [-4.15424135e+00, -3.76185977e-02,  2.11988869e+02],
       [-3.32914615e+00, -1.00677276e-01,  2.11903960e+02],
       [-2.50057248e+00, -3.21223026e-02,  2.11814903e+02],
       [-6.35301248e+00,  1.52380636e-01,  2.14569228e+02],
       [-5.54728343e+00,  1.27787218e-01,  2.14485325e+02],
       [-4.74150294e+00,  1.05572105e-01,  2.14401341e+02],
       [-3.93674852e+00,  3.59191111e-02,  2.14318975e+02],
       [-3.13171022e+00, -2.06093329e-02,  2.14236162e+02],
       [-2.32393018e+00,  4.96205970e-02,  2.14149025e+02],
       [-6.07814466e+00,  2.20973360e-01,  2.16893273e+02],
       [-5.29207768e+00,  1.98502540e-01,  2.16811488e+02],
       [-4.50594250e+00,  1.80074521e-01,  2.16729546e+02],
       [-3.72057695e+00,  1.16013195e-01,  2.16649378e+02],
       [-2.93498049e+00,  6.56433190e-02,  2.16568679e+02],
       [-2.14732772e+00,  1.37198819e-01,  2.16483237e+02],
       [-5.80593962e+00,  3.02235431e-01,  2.19217629e+02],
       [-5.03891357e+00,  2.80321683e-01,  2.19137953e+02],
       [-4.27180434e+00,  2.65150966e-01,  2.19057979e+02],
       [-3.50522516e+00,  2.07015684e-01,  2.18979907e+02],
       [-2.73846900e+00,  1.63225090e-01,  2.18901200e+02],
       [-1.97027959e+00,  2.35610251e-01,  2.18817349e+02],
       [-5.53581471e+00,  3.97685003e-01,  2.21542246e+02],
       [-4.78729168e+00,  3.76114281e-01,  2.21464615e+02],
       [-4.03869299e+00,  3.63853099e-01,  2.21386526e+02],
       [-3.29042262e+00,  3.11190197e-01,  2.21310424e+02],
       [-2.54203068e+00,  2.73486143e-01,  2.21233586e+02],
       [-1.79273967e+00,  3.46423884e-01,  2.21151309e+02],
       [-5.26784903e+00,  5.05949718e-01,  2.23867129e+02],
       [-4.53743297e+00,  4.84580478e-01,  2.23791478e+02],
       [-3.80696719e+00,  4.74957596e-01,  2.23715207e+02],
       [-3.07666201e+00,  4.27398477e-01,  2.23640939e+02],
       [-2.34629106e+00,  3.95373096e-01,  2.23565851e+02],
       [-1.61547434e+00,  4.68650639e-01,  2.23485202e+02],
       [-5.00169527e+00,  6.23939720e-01,  2.26192228e+02],
       [-4.28914737e+00,  6.02716783e-01,  2.26118510e+02],
       [-3.57659183e+00,  5.95548861e-01,  2.26044014e+02],
       [-2.86405562e+00,  5.52823012e-01,  2.25971486e+02],
       [-2.15151068e+00,  5.26164670e-01,  2.25898069e+02],
       [-1.43891130e+00,  5.99639406e-01,  2.25819108e+02],
       [-4.73690095e+00,  7.48956314e-01,  2.28517485e+02],
       [-4.04212543e+00,  7.27820256e-01,  2.28445670e+02],
       [-3.34739927e+00,  7.22992862e-01,  2.28372927e+02],
       [-2.65257271e+00,  6.84992588e-01,  2.28302070e+02],
       [-1.95779623e+00,  6.63539898e-01,  2.28230272e+02],
       [-1.26330714e+00,  7.37035950e-01,  2.28153077e+02],
       [-4.47287614e+00,  8.78424151e-01,  2.30842828e+02],
       [-3.79591048e+00,  8.56771276e-01,  2.30772937e+02],
       [-3.11907159e+00,  8.54273265e-01,  2.30701943e+02],
       [-2.44203404e+00,  8.21759424e-01,  2.30632677e+02],
       [-1.76510821e+00,  8.06125383e-01,  2.30562439e+02],
       [-1.08876683e+00,  8.78790353e-01,  2.30487122e+02],
       [-4.20928294e+00,  1.01025294e+00,  2.33168231e+02],
       [-3.55025711e+00,  9.88317781e-01,  2.33100270e+02],
       [-2.89146025e+00,  9.88205297e-01,  2.33031034e+02],
       [-2.23238037e+00,  9.61118745e-01,  2.32963373e+02],
       [-1.57348061e+00,  9.51199792e-01,  2.32894710e+02],
       [-9.15439638e-01,  1.02313255e+00,  2.32821268e+02],
       [-3.94599760e+00,  1.14471442e+00,  2.35493709e+02],
       [-3.30499322e+00,  1.12284330e+00,  2.35427706e+02],
       [-2.66435381e+00,  1.12528097e+00,  2.35360220e+02],
       [-2.02335333e+00,  1.10367035e+00,  2.35294201e+02],
       [-1.38261425e+00,  1.09946948e+00,  2.35227120e+02],
       [-7.43010344e-01,  1.17087551e+00,  2.35155424e+02],
       [-3.68314740e+00,  1.28595946e+00,  2.37819297e+02],
       [-3.05999188e+00,  1.26460834e+00,  2.37755214e+02],
       [-2.43737613e+00,  1.26988070e+00,  2.37689426e+02],
       [-1.81432955e+00,  1.25390232e+00,  2.37624999e+02],
       [-1.19164007e+00,  1.25553815e+00,  2.37559443e+02],
       [-5.70361720e-01,  1.32677578e+00,  2.37489427e+02],
       [-3.42055426e+00,  1.43527995e+00,  2.40144959e+02],
       [-2.81509061e+00,  1.41479474e+00,  2.40082743e+02],
       [-2.21037649e+00,  1.42307921e+00,  2.40018611e+02],
       [-1.60517828e+00,  1.41278262e+00,  2.39955716e+02],
       [-1.00044334e+00,  1.42026817e+00,  2.39891637e+02],
       [-3.97371535e-01,  1.49159093e+00,  2.39823304e+02],
       [-3.15762783e+00,  1.59214511e+00,  2.42470592e+02],
       [-2.56989420e+00,  1.57248469e+00,  2.42410239e+02],
       [-1.98313677e+00,  1.58356407e+00,  2.42347768e+02],
       [-1.39587018e+00,  1.57861073e+00,  2.42286402e+02],
       [-8.09172317e-01,  1.59156577e+00,  2.42223802e+02],
       [-2.24325623e-01,  1.66281283e+00,  2.42157187e+02],
       [-2.89395665e+00,  1.75622560e+00,  2.44796116e+02],
       [-2.32416704e+00,  1.73834569e+00,  2.44737560e+02],
       [-1.75553927e+00,  1.75186119e+00,  2.44676788e+02],
       [-1.18637857e+00,  1.75097578e+00,  2.44617033e+02],
       [-6.17873869e-01,  1.76781686e+00,  2.44556026e+02],
       [-5.13827930e-02,  1.83907037e+00,  2.44491177e+02],
       [-2.62929095e+00,  1.92650490e+00,  2.47121474e+02],
       [-2.07783653e+00,  1.91155849e+00,  2.47064657e+02],
       [-1.52764154e+00,  1.92698584e+00,  2.47005650e+02],
       [-9.76868852e-01,  1.92848090e+00,  2.46947647e+02],
       [-4.26807263e-01,  1.94712561e+00,  2.46888408e+02],
       [ 1.21071580e-01,  2.01841212e+00,  2.46825375e+02],
       [-2.36410355e+00,  2.10249571e+00,  2.49446697e+02],
       [-1.83146260e+00,  2.08969726e+00,  2.49391718e+02],
       [-1.30013359e+00,  2.10622705e+00,  2.49334577e+02],
       [-7.68202794e-01,  2.10930413e+00,  2.49278427e+02],
       [-2.37012751e-01,  2.12894055e+00,  2.49221057e+02],
       [ 2.91903523e-01,  2.19940675e+00,  2.49159941e+02],
       [-2.09851563e+00,  2.28479447e+00,  2.51771752e+02],
       [-1.58532137e+00,  2.27305501e+00,  2.51718758e+02],
       [-1.07342965e+00,  2.28956647e+00,  2.51663627e+02],
       [-5.60940469e-01,  2.29311937e+00,  2.51609476e+02],
       [-4.91867279e-02,  2.31262333e+00,  2.51554117e+02],
       [ 4.60309531e-01,  2.38108992e+00,  2.51495052e+02],
       [-1.83248470e+00,  2.47295458e+00,  2.54096716e+02],
       [-1.33940615e+00,  2.46173916e+00,  2.54045829e+02],
       [-8.47591087e-01,  2.47766018e+00,  2.53992806e+02],
       [-3.55196470e-01,  2.48113385e+00,  2.53940763e+02],
       [ 1.36484762e-01,  2.49992932e+00,  2.53887513e+02],
       [ 6.25976222e-01,  2.56575585e+00,  2.53830560e+02],
       [-1.56566057e+00,  2.66876085e+00,  2.56421548e+02],
       [-1.09322644e+00,  2.65781986e+00,  2.56372841e+02],
       [-6.21999915e-01,  2.67287315e+00,  2.56322010e+02],
       [-1.50219469e-01,  2.67600300e+00,  2.56272153e+02],
       [ 3.20879141e-01,  2.69380975e+00,  2.56221097e+02],
       [ 7.89884815e-01,  2.75666809e+00,  2.56166361e+02],
       [-1.29779174e+00,  2.87181619e+00,  2.58746224e+02],
       [-8.46498025e-01,  2.86093699e+00,  2.58699764e+02],
       [-3.96341603e-01,  2.87488381e+00,  2.58651203e+02],
       [ 5.43364908e-02,  2.87744305e+00,  2.58603606e+02],
       [ 5.04372443e-01,  2.89401958e+00,  2.58554823e+02],
       [ 9.52437304e-01,  2.95362291e+00,  2.58502400e+02],
       [-1.02872185e+00,  3.08191929e+00,  2.61070724e+02],
       [-5.99042247e-01,  3.07091942e+00,  2.61026576e+02],
       [-1.70416776e-01,  3.08355248e+00,  2.60980362e+02],
       [ 2.58692221e-01,  3.08534524e+00,  2.60935095e+02],
       [ 6.87206032e-01,  3.10048165e+00,  2.60888662e+02],
       [ 1.11389289e+00,  3.15657709e+00,  2.60838647e+02],
       [-7.58634436e-01,  3.29874692e+00,  2.63395069e+02],
       [-3.51025146e-01,  3.28744388e+00,  2.63353301e+02],
       [ 5.56254064e-02,  3.29855637e+00,  2.63309505e+02],
       [ 4.62715727e-01,  3.29938697e+00,  2.63266639e+02],
       [ 8.69264724e-01,  3.31287384e+00,  2.63222629e+02],
       [ 1.27415210e+00,  3.36520982e+00,  2.63175104e+02],
       [-4.87918843e-01,  3.52259340e+00,  2.65719274e+02],
       [-1.02785041e-01,  3.51076697e+00,  2.65679943e+02],
       [ 2.81501217e-01,  3.52011889e+00,  2.65638645e+02],
       [ 6.66176239e-01,  3.51975641e+00,  2.65598249e+02],
       [ 1.05037272e+00,  3.53135167e+00,  2.65556743e+02],
       [ 1.43310030e+00,  3.57965186e+00,  2.65511827e+02],
       [-2.15648947e-01,  3.75176387e+00,  2.68043269e+02],
       [ 1.46272969e-01,  3.73930670e+00,  2.68006467e+02],
       [ 5.07467614e-01,  3.74675073e+00,  2.67967764e+02],
       [ 8.68995855e-01,  3.74506618e+00,  2.67929933e+02],
       [ 1.23011346e+00,  3.75461827e+00,  2.67891030e+02],
       [ 1.58997061e+00,  3.79866181e+00,  2.67848832e+02],
       [ 4.96418537e-01,  3.99602786e+00,  2.70320015e+02],
       [ 5.96018314e-01,  3.99214643e+00,  2.70309932e+02],
       [ 6.95442800e-01,  3.99374300e+00,  2.70299324e+02],
       [ 7.94947691e-01,  3.99282683e+00,  2.70288956e+02],
       [ 8.94353609e-01,  3.99500366e+00,  2.70278292e+02],
       [ 9.93455724e-01,  4.00667460e+00,  2.70266717e+02]]), strname='')
2022-10-21 17:41:36 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:41:36 INFO     inside fun_blade_wake
2022-10-21 17:41:36 DEBUG    wake was empty, creating new wake
2022-10-21 17:41:36 DEBUG    wake index: w = 0
2022-10-21 17:41:36 DEBUG    (obj.mx+1) = 6
2022-10-21 17:41:36 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:41:36 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:41:36 INFO     For loop started
2022-10-21 17:41:36 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:41:36 DEBUG    j= 5, row1 = [4]
2022-10-21 17:41:36 DEBUG    j= 5, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:41:36 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:41:36 DEBUG    j= 11, row1 = [9]
2022-10-21 17:41:36 DEBUG    j= 11, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:41:36 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:41:36 DEBUG    j= 17, row1 = [14]
2022-10-21 17:41:36 DEBUG    j= 17, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:41:36 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:41:36 DEBUG    j= 23, row1 = [19]
2022-10-21 17:41:36 DEBUG    j= 23, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:41:36 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:41:36 DEBUG    j= 29, row1 = [24]
2022-10-21 17:41:36 DEBUG    j= 29, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:41:36 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:41:36 DEBUG    j= 35, row1 = [29]
2022-10-21 17:41:36 DEBUG    j= 35, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:41:36 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:41:36 DEBUG    j= 41, row1 = [34]
2022-10-21 17:41:36 DEBUG    j= 41, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:41:36 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:41:36 DEBUG    j= 47, row1 = [39]
2022-10-21 17:41:36 DEBUG    j= 47, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:41:36 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:41:36 DEBUG    j= 53, row1 = [44]
2022-10-21 17:41:36 DEBUG    j= 53, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:41:36 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:41:36 DEBUG    j= 59, row1 = [49]
2022-10-21 17:41:36 DEBUG    j= 59, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:41:36 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:41:36 DEBUG    j= 65, row1 = [54]
2022-10-21 17:41:36 DEBUG    j= 65, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:41:36 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:41:36 DEBUG    j= 71, row1 = [59]
2022-10-21 17:41:36 DEBUG    j= 71, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:41:36 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:41:36 DEBUG    j= 77, row1 = [64]
2022-10-21 17:41:36 DEBUG    j= 77, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:41:36 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:41:36 DEBUG    j= 83, row1 = [69]
2022-10-21 17:41:36 DEBUG    j= 83, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:41:36 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:41:36 DEBUG    j= 89, row1 = [74]
2022-10-21 17:41:36 DEBUG    j= 89, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:41:36 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:41:36 DEBUG    j= 95, row1 = [79]
2022-10-21 17:41:36 DEBUG    j= 95, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:41:36 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:41:36 DEBUG    j= 101, row1 = [84]
2022-10-21 17:41:36 DEBUG    j= 101, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:41:36 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:41:36 DEBUG    j= 107, row1 = [89]
2022-10-21 17:41:36 DEBUG    j= 107, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:41:36 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:41:36 DEBUG    j= 113, row1 = [94]
2022-10-21 17:41:36 DEBUG    j= 113, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:41:36 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:41:36 DEBUG    j= 119, row1 = [99]
2022-10-21 17:41:36 DEBUG    j= 119, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:41:36 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:41:36 DEBUG    j= 125, row1 = [104]
2022-10-21 17:41:36 DEBUG    j= 125, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:41:36 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:41:36 DEBUG    j= 131, row1 = [109]
2022-10-21 17:41:36 DEBUG    j= 131, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:41:36 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:41:36 DEBUG    j= 137, row1 = [114]
2022-10-21 17:41:36 DEBUG    j= 137, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:41:36 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:41:36 DEBUG    j= 143, row1 = [119]
2022-10-21 17:41:36 DEBUG    j= 143, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:41:36 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:41:36 DEBUG    j= 149, row1 = [124]
2022-10-21 17:41:36 DEBUG    j= 149, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:41:36 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:41:36 DEBUG    j= 155, row1 = [129]
2022-10-21 17:41:36 DEBUG    j= 155, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:41:36 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:41:36 DEBUG    j= 161, row1 = [134]
2022-10-21 17:41:36 DEBUG    j= 161, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:41:36 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:41:36 DEBUG    j= 167, row1 = [139]
2022-10-21 17:41:36 DEBUG    j= 167, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:41:36 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:41:36 DEBUG    j= 173, row1 = [144]
2022-10-21 17:41:36 DEBUG    j= 173, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:41:36 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:41:36 DEBUG    j= 179, row1 = [149]
2022-10-21 17:41:36 DEBUG    j= 179, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:41:36 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:41:36 DEBUG    j= 185, row1 = [154]
2022-10-21 17:41:36 DEBUG    j= 185, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:41:36 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:41:36 DEBUG    j= 191, row1 = [159]
2022-10-21 17:41:36 DEBUG    j= 191, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:41:36 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:41:36 DEBUG    j= 197, row1 = [164]
2022-10-21 17:41:36 DEBUG    j= 197, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:41:36 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:41:36 DEBUG    j= 203, row1 = [169]
2022-10-21 17:41:36 DEBUG    j= 203, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:41:36 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:41:36 DEBUG    j= 209, row1 = [174]
2022-10-21 17:41:36 DEBUG    j= 209, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:41:36 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:41:36 DEBUG    j= 215, row1 = [179]
2022-10-21 17:41:36 DEBUG    j= 215, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:41:36 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:41:36 DEBUG    j= 221, row1 = [184]
2022-10-21 17:41:36 DEBUG    j= 221, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:41:36 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:41:36 DEBUG    j= 227, row1 = [189]
2022-10-21 17:41:36 DEBUG    j= 227, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:41:36 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:41:36 DEBUG    j= 233, row1 = [194]
2022-10-21 17:41:36 DEBUG    j= 233, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:41:36 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:41:36 DEBUG    j= 239, row1 = [199]
2022-10-21 17:41:36 DEBUG    j= 239, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:41:36 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:41:36 DEBUG    j= 245, row1 = [204]
2022-10-21 17:41:36 DEBUG    j= 245, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:41:36 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:41:36 DEBUG    j= 251, row1 = [209]
2022-10-21 17:41:36 DEBUG    j= 251, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:41:36 INFO     For loop ended
2022-10-21 17:41:36 INFO     fun_blade_wake done
2022-10-21 17:41:36 DEBUG    Setting input for FSI
2022-10-21 17:41:36 DEBUG    len(blade_obj) = 2
2022-10-21 17:41:36 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:41:36 DEBUG    n_surf + len(blade_obj)= 6
2022-10-21 17:41:36 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:41:36 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1)], property=array([[80., 80.]]))
2022-10-21 17:41:36 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[ -15.180968  ,  -19.7342182 ,  139.06404298],
       [ -14.09181537,  -19.62324298,  138.75972095],
       [ -12.99744884,  -19.52187283,  138.47128252],
       [ -11.91436391,  -19.39971968,  138.14847594],
       [ -10.84043148,  -19.26070577,  137.79778728],
       [  -9.72067927,  -19.20610122,  137.58668352],
       [ -15.25558525,  -21.72804896,  137.84168164],
       [ -14.15157325,  -21.6255233 ,  137.54880116],
       [ -13.04233749,  -21.53318964,  137.27295158],
       [ -11.94530524,  -21.41704593,  136.95731523],
       [ -10.85510706,  -21.28756839,  136.61939796],
       [  -9.72179537,  -21.24220883,  136.42204244],
       [ -15.32999283,  -23.72935899,  136.63132645],
       [ -14.21674173,  -23.63469398,  136.34989674],
       [ -13.09828013,  -23.55077027,  136.08657579],
       [ -11.99280067,  -23.44008424,  135.77813622],
       [ -10.89203808,  -23.31967451,  135.45330347],
       [  -9.75078235,  -23.28274029,  135.26920215],
       [ -15.40534538,  -25.73791209,  135.43232725],
       [ -14.28926329,  -25.65006076,  135.16197127],
       [ -13.16799596,  -25.57347174,  134.91069105],
       [ -12.06037774,  -25.46723692,  134.60919769],
       [ -10.95556042,  -25.35491856,  134.29740022],
       [  -9.81270992,  -25.32520809,  134.12552142],
       [ -15.47816826,  -27.75020277,  134.23903552],
       [ -14.36753552,  -27.66875456,  133.98023423],
       [ -13.25177231,  -27.59901893,  133.74132383],
       [ -12.15017137,  -27.49695162,  133.44750618],
       [ -11.04963691,  -27.39244957,  133.14955376],
       [  -9.9135095 ,  -27.3692043 ,  132.98959553],
       [ -15.54701222,  -29.76336656,  133.04672458],
       [ -14.44987979,  -29.69009934,  132.80349945],
       [ -13.34843294,  -29.62719815,  132.57791815],
       [ -12.26068196,  -29.5313906 ,  132.29632753],
       [ -11.17324069,  -29.43483893,  132.01347037],
       [ -10.0513011 ,  -29.4211746 ,  131.87169422],
       [ -15.61159134,  -31.77753747,  131.85565999],
       [ -14.53509196,  -31.71300983,  131.6297755 ],
       [ -13.45526916,  -31.65689701,  131.41824371],
       [ -12.3883275 ,  -31.5681694 ,  131.15108266],
       [ -11.32128953,  -31.47968566,  130.88433759],
       [ -10.22063985,  -31.47630604,  130.76274992],
       [ -15.67542542,  -33.7931813 ,  130.66705218],
       [ -14.62387796,  -33.73704066,  130.45837015],
       [ -13.56989066,  -33.68741246,  130.26081845],
       [ -12.52795959,  -33.60560366,  130.00826726],
       [ -11.48558433,  -33.52498049,  129.75774242],
       [ -10.41068527,  -33.53117013,  129.65558835],
       [ -15.73994827,  -35.81043946,  129.4812649 ],
       [ -14.71562802,  -35.76209723,  129.28904576],
       [ -13.68964096,  -35.71844428,  129.10485379],
       [ -12.6749114 ,  -35.64312018,  128.86644683],
       [ -11.65944438,  -35.56987083,  128.63159144],
       [ -10.61263787,  -35.58479004,  128.54766385],
       [ -15.80780705,  -37.8298055 ,  128.29963058],
       [ -14.81044853,  -37.78828439,  128.12205357],
       [ -13.81200775,  -37.74996311,  127.94996933],
       [ -12.82402158,  -37.68073127,  127.72482458],
       [ -11.83510038,  -37.61426398,  127.5044254 ],
       [ -10.81682282,  -37.63459302,  127.43301924],
       [ -15.87964254,  -39.85164431,  127.12300554],
       [ -14.90738488,  -39.81603833,  126.9581009 ],
       [ -13.93448775,  -39.78240788,  126.79660874],
       [ -12.97128853,  -39.71881725,  126.58336413],
       [ -12.00702234,  -39.65852287,  126.37581338],
       [ -11.0157571 ,  -39.68163785,  126.31234183],
       [ -15.95476386,  -41.87718402,  125.95333709],
       [ -15.00506871,  -41.84680079,  125.7995285 ],
       [ -14.05511753,  -41.81723894,  125.6471526 ],
       [ -13.11421289,  -41.75865512,  125.44415488],
       [ -12.17212644,  -41.70386262,  125.24777021],
       [ -11.2050716 ,  -41.7291706 ,  125.19110146],
       [ -16.03090043,  -43.90798101,  124.79297387],
       [ -15.10234194,  -43.8822649 ,  124.64913682],
       [ -14.17386302,  -43.85628509,  124.50483397],
       [ -13.25385578,  -43.80222729,  124.31093289],
       [ -12.33256692,  -43.75241721,  124.12453517],
       [ -11.3881    ,  -43.77942695,  124.07383545],
       [ -16.10635872,  -45.94538961,  123.64386336],
       [ -15.19878557,  -45.92386744,  123.50931683],
       [ -14.29158687,  -45.90106501,  123.37248041],
       [ -13.39233139,  -45.85110517,  123.18706952],
       [ -12.49170999,  -45.80581533,  123.01001152],
       [ -11.56954771,  -45.83417257,  122.96468061],
       [ -16.18169374,  -47.98927416,  122.5057319 ],
       [ -15.29519723,  -47.97144432,  122.37982331],
       [ -14.40931204,  -47.95145576,  122.25001575],
       [ -13.53087309,  -47.90517301,  122.07271695],
       [ -12.65099967,  -47.86395567,  121.90456704],
       [ -11.75110657,  -47.89343199,  121.86410045],
       [ -16.25834438,  -50.03793924,  121.37585011],
       [ -15.39321045,  -50.0219696 ,  121.25540342],
       [ -14.52842307,  -50.00473473,  121.13265458],
       [ -13.67055235,  -49.9622486 ,  120.9639596 ],
       [ -12.81120857,  -49.92514029,  120.80504989],
       [ -11.93329648,  -49.95582102,  120.76948625],
       [ -16.33682273,  -52.09044253,  120.25271497],
       [ -15.49274293,  -52.07608792,  120.13734903],
       [ -14.64877505,  -52.06131031,  120.02120958],
       [ -13.81123336,  -52.02224808,  119.86066076],
       [ -12.97218959,  -51.98886222,  119.71049233],
       [ -12.1159204 ,  -52.02057148,  119.67936354],
       [ -16.41749706,  -54.14551846,  119.13424457],
       [ -15.59403914,  -54.13258854,  119.02361306],
       [ -14.77048575,  -54.12003228,  118.91366745],
       [ -13.95290415,  -54.08410508,  118.76081999],
       [ -13.13379992,  -54.05413678,  118.61891121],
       [ -12.2987131 ,  -54.08671717,  118.59182264],
       [ -16.50080446,  -56.20247693,  118.01943637],
       [ -15.69742379,  -56.19085449,  117.91319039],
       [ -14.89376458,  -56.180356  ,  117.80902399],
       [ -14.09566119,  -56.14743916,  117.66337781],
       [ -13.29602067,  -56.12072476,  117.52920775],
       [ -12.48153452,  -56.15391426,  117.50587553],
       [ -16.58662936,  -58.26331203,  116.91171969],
       [ -15.80272658,  -58.252795  ,  116.80934365],
       [ -15.01836626,  -58.24417012,  116.71051501],
       [ -14.2391706 ,  -58.21418744,  116.571645  ],
       [ -13.45842538,  -58.19061279,  116.44478868],
       [ -12.66388093,  -58.22410297,  116.42491692],
       [ -16.67397501,  -60.33050871,  115.81517963],
       [ -15.90907956,  -60.32036307,  115.71523254],
       [ -15.14344533,  -60.31333932,  115.62122451],
       [ -14.38251844,  -60.28642381,  115.48937454],
       [ -13.6200199 ,  -60.26614961,  115.37015895],
       [ -12.84479272,  -60.29966254,  115.3532676 ],
       [ -16.76212295,  -62.40483484,  114.73105759],
       [ -16.01571508,  -62.39494697,  114.63330225],
       [ -15.2683187 ,  -62.38932653,  114.54377458],
       [ -14.52521229,  -62.36518622,  114.4185403 ],
       [ -13.78051751,  -62.34790294,  114.30652649],
       [ -13.02407443,  -62.3813371 ,  114.29229673],
       [ -16.85127621,  -64.48560267,  113.65818077],
       [ -16.1229691 ,  -64.47588189,  113.56246483],
       [ -15.393453  ,  -64.47150448,  113.47715806],
       [ -14.66784144,  -64.44987003,  113.35823364],
       [ -13.94063109,  -64.43530181,  113.25307462],
       [ -13.20258258,  -64.46863547,  113.24123109],
       [ -16.94136503,  -66.57125523,  112.5938582 ],
       [ -16.23092137,  -66.5616548 ,  112.50011978],
       [ -15.51907652,  -66.55841231,  112.41886184],
       [ -14.81077655,  -66.53908479,  112.30602941],
       [ -14.10087476,  -66.52702559,  112.2074645 ],
       [ -13.38099042,  -66.56026271,  112.19781509],
       [ -17.03217966,  -68.66043467,  111.53572275],
       [ -16.33950584,  -68.65090712,  111.44391058],
       [ -15.64525971,  -68.64873106,  111.36660074],
       [ -14.95421177,  -68.63160158,  111.25979223],
       [ -14.26156848,  -68.6219313 ,  111.1676985 ],
       [ -13.55977117,  -68.6550613 ,  111.16003705],
       [ -17.12336146,  -70.75184306,  110.48150009],
       [ -16.44855249,  -70.74210243,  110.39108923],
       [ -15.77196241,  -70.74097869,  110.31772877],
       [ -15.09816334,  -70.72635221,  110.2176502 ],
       [ -14.42279471,  -70.71931918,  110.13259691],
       [ -13.73921567,  -70.7520078 ,  110.12614158],
       [ -17.21476357,  -72.84444531,  109.42934871],
       [ -16.55792685,  -72.83460147,  109.34055899],
       [ -15.89914121,  -72.83455099,  109.27121653],
       [ -15.24276455,  -72.82239534,  109.17783615],
       [ -14.5848547 ,  -72.81794401,  109.09975466],
       [ -13.91963488,  -72.85022531,  109.09461529],
       [ -17.30624183,  -74.93840048,  108.37947665],
       [ -16.66743083,  -74.92864426,  108.29260498],
       [ -16.02654696,  -74.92973165,  108.2274444 ],
       [ -15.38771374,  -74.92009163,  108.14080539],
       [ -14.74739595,  -74.91821772,  108.06971569],
       [ -14.10063096,  -74.95007035,  108.06615327],
       [ -17.39755104,  -77.035802  ,  107.33546223],
       [ -16.77654881,  -77.02634432,  107.25089279],
       [ -16.15340134,  -77.02867976,  107.19016309],
       [ -15.53196619,  -77.02160198,  107.11040461],
       [ -14.90911174,  -77.02232659,  107.04641861],
       [ -14.28064898,  -77.05388199,  107.04475687],
       [ -17.4883938 ,  -79.13728273,  106.29840677],
       [ -16.88500612,  -79.12826392,  106.21643929],
       [ -16.27945245,  -79.13191124,  106.16029442],
       [ -15.6752977 ,  -79.12737806,  106.08747188],
       [ -15.06980418,  -79.13067365,  106.03060994],
       [ -14.45950451,  -79.16207419,  106.03104596],
       [ -17.5782212 ,  -81.24254083,  105.26781154],
       [ -16.99248871,  -81.23393347,  105.18841847],
       [ -16.40460356,  -81.23878404,  105.13667717],
       [ -15.81784115,  -81.23661545,  105.07051376],
       [ -15.22982465,  -81.24228719,  105.02045971],
       [ -14.63772606,  -81.27347929,  105.02284186],
       [ -17.66664571,  -83.35137911,  104.24336788],
       [ -17.09868238,  -83.34358643,  104.16743676],
       [ -16.52867412,  -83.34947695,  104.11979917],
       [ -15.95960386,  -83.34909106,  104.05918348],
       [ -15.38937898,  -83.35643099,  104.0145429 ],
       [ -14.81560998,  -83.38748574,  104.01893879],
       [ -17.75350524,  -85.46326533,  103.22418752],
       [ -17.20358199,  -85.4567761 ,  103.15280176],
       [ -16.65180656,  -85.46347413,  103.10883151],
       [ -16.10088072,  -85.46412324,  103.0522859 ],
       [ -15.5489091 ,  -85.47221814,  103.01121966],
       [ -14.99372742,  -85.50316832,  103.01766817],
       [ -17.83931337,  -87.5779373 ,  102.20991085],
       [ -17.30798747,  -87.57240236,  102.14241967],
       [ -16.77496001,  -87.57955099,  102.10143833],
       [ -16.24271305,  -87.58088174,  102.04829706],
       [ -15.70950535,  -87.58937389,  102.0101238 ],
       [ -15.17334863,  -87.61984838,  102.01789564],
       [ -17.92413032,  -89.6956548 ,  101.2010859 ],
       [ -17.41214621,  -89.69059944,  101.13657876],
       [ -16.89855243,  -89.69770976,  101.09764093],
       [ -16.385697  ,  -89.69923975,  101.04697459],
       [ -15.87193272,  -89.70763873,  101.01074522],
       [ -15.35537867,  -89.73712245,  101.01883087],
       [ -18.00796683,  -91.81626521,  100.19728385],
       [ -17.51604982,  -91.81146536,  100.13534597],
       [ -17.02258588,  -91.81827906,  100.09801053],
       [ -16.52983151,  -91.81976569,  100.04939007],
       [ -16.03620372,  -91.82780957,  100.01466067],
       [ -15.53989491,  -91.85598128,  100.02257059],
       [ -18.09031038,  -93.94065675,   99.20000749],
       [ -17.61901437,  -93.93600198,   99.14047136],
       [ -17.14622196,  -93.9424063 ,   99.10453877],
       [ -16.67411594,  -93.94373787,   99.05777935],
       [ -16.20116502,  -93.95131364,   99.02434698],
       [ -15.72562065,  -93.97805628,   99.03182268],
       [ -18.1709457 ,  -96.06863241,   98.20888752],
       [ -17.72078852,  -96.06403071,   98.15161411],
       [ -17.26917509,  -96.06992995,   98.11691603],
       [ -16.81822964,  -96.07101247,   98.07186276],
       [ -16.36646196,  -96.07802403,   98.039556  ],
       [ -15.91217044,  -96.10323514,   98.04637531],
       [ -18.24973425,  -98.20008935,   97.22373532],
       [ -17.82120844,  -98.19546231,   97.16861005],
       [ -17.39125787,  -98.20077634,   97.13500323],
       [ -16.96196083,  -98.20153045,   97.09152601],
       [ -16.53185933,  -98.2078975 ,   97.06019855],
       [ -16.09928854,  -98.23149373,   97.06616542],
       [ -18.32688914, -100.33486764,   96.24429087],
       [ -17.92047039, -100.33014042,   96.19119531],
       [ -17.51264936, -100.33478794,   96.15853584],
       [ -17.10547156, -100.33513532,   96.11650244],
       [ -16.69750199, -100.34077587,   96.08600768],
       [ -16.2871021 , -100.3626641 ,   96.09093138],
       [ -18.40276885, -102.47309121,   95.2708616 ],
       [ -18.01888465, -102.4681668 ,   95.21964131],
       [ -17.63361025, -102.47206085,   95.18774488],
       [ -17.24897353, -102.47190992,   95.14698469],
       [ -16.86355187, -102.47673806,   95.11713516],
       [ -16.47572081, -102.49684976,   95.12077647],
       [ -18.47660508, -104.61393683,   94.30187686],
       [ -18.11600379, -104.60877395,   94.25250981],
       [ -17.75401998, -104.61185913,   94.22131571],
       [ -17.39267032, -104.61116097,   94.18178578],
       [ -17.03054007, -104.61511983,   94.15251667],
       [ -16.66601373, -104.63337369,   94.15474372],
       [ -18.10911764, -106.76144684,   93.30016275],
       [ -18.00992935, -106.75983818,   93.28616493],
       [ -17.91033561, -106.76049988,   93.27716679],
       [ -17.81092784, -106.76012018,   93.26587532],
       [ -17.71129115, -106.76102236,   93.25740676],
       [ -17.61095177, -106.76585939,   93.2576033 ]]), strname='')
2022-10-21 17:41:36 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:41:36 INFO     inside fun_blade_wake
2022-10-21 17:41:36 DEBUG    wake was not empty, appending new wake
2022-10-21 17:41:36 DEBUG    wake index: w = 1
2022-10-21 17:41:36 DEBUG    wake property.shape: (2, 2)
2022-10-21 17:41:36 DEBUG    (obj.mx+1) = 6
2022-10-21 17:41:36 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:41:36 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:41:36 INFO     For loop started
2022-10-21 17:41:36 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:41:36 DEBUG    j= 5, row1 = [4]
2022-10-21 17:41:36 DEBUG    j= 5, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:41:36 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:41:36 DEBUG    j= 11, row1 = [9]
2022-10-21 17:41:36 DEBUG    j= 11, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:41:36 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:41:36 DEBUG    j= 17, row1 = [14]
2022-10-21 17:41:36 DEBUG    j= 17, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:41:36 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:41:36 DEBUG    j= 23, row1 = [19]
2022-10-21 17:41:36 DEBUG    j= 23, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:41:36 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:41:36 DEBUG    j= 29, row1 = [24]
2022-10-21 17:41:36 DEBUG    j= 29, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:41:36 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:41:36 DEBUG    j= 35, row1 = [29]
2022-10-21 17:41:36 DEBUG    j= 35, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:41:36 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:41:36 DEBUG    j= 41, row1 = [34]
2022-10-21 17:41:36 DEBUG    j= 41, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:41:36 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:41:36 DEBUG    j= 47, row1 = [39]
2022-10-21 17:41:36 DEBUG    j= 47, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:41:36 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:41:36 DEBUG    j= 53, row1 = [44]
2022-10-21 17:41:36 DEBUG    j= 53, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:41:36 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:41:36 DEBUG    j= 59, row1 = [49]
2022-10-21 17:41:36 DEBUG    j= 59, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:41:36 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:41:36 DEBUG    j= 65, row1 = [54]
2022-10-21 17:41:36 DEBUG    j= 65, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:41:36 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:41:36 DEBUG    j= 71, row1 = [59]
2022-10-21 17:41:36 DEBUG    j= 71, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:41:36 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:41:36 DEBUG    j= 77, row1 = [64]
2022-10-21 17:41:36 DEBUG    j= 77, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:41:36 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:41:36 DEBUG    j= 83, row1 = [69]
2022-10-21 17:41:36 DEBUG    j= 83, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:41:36 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:41:36 DEBUG    j= 89, row1 = [74]
2022-10-21 17:41:36 DEBUG    j= 89, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:41:36 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:41:36 DEBUG    j= 95, row1 = [79]
2022-10-21 17:41:36 DEBUG    j= 95, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:41:36 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:41:36 DEBUG    j= 101, row1 = [84]
2022-10-21 17:41:36 DEBUG    j= 101, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:41:36 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:41:36 DEBUG    j= 107, row1 = [89]
2022-10-21 17:41:36 DEBUG    j= 107, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:41:36 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:41:36 DEBUG    j= 113, row1 = [94]
2022-10-21 17:41:36 DEBUG    j= 113, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:41:36 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:41:36 DEBUG    j= 119, row1 = [99]
2022-10-21 17:41:36 DEBUG    j= 119, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:41:36 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:41:36 DEBUG    j= 125, row1 = [104]
2022-10-21 17:41:36 DEBUG    j= 125, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:41:36 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:41:36 DEBUG    j= 131, row1 = [109]
2022-10-21 17:41:36 DEBUG    j= 131, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:41:36 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:41:36 DEBUG    j= 137, row1 = [114]
2022-10-21 17:41:36 DEBUG    j= 137, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:41:36 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:41:36 DEBUG    j= 143, row1 = [119]
2022-10-21 17:41:36 DEBUG    j= 143, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:41:36 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:41:36 DEBUG    j= 149, row1 = [124]
2022-10-21 17:41:36 DEBUG    j= 149, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:41:36 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:41:36 DEBUG    j= 155, row1 = [129]
2022-10-21 17:41:36 DEBUG    j= 155, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:41:36 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:41:36 DEBUG    j= 161, row1 = [134]
2022-10-21 17:41:36 DEBUG    j= 161, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:41:36 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:41:36 DEBUG    j= 167, row1 = [139]
2022-10-21 17:41:36 DEBUG    j= 167, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:41:36 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:41:36 DEBUG    j= 173, row1 = [144]
2022-10-21 17:41:36 DEBUG    j= 173, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:41:36 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:41:36 DEBUG    j= 179, row1 = [149]
2022-10-21 17:41:36 DEBUG    j= 179, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:41:36 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:41:36 DEBUG    j= 185, row1 = [154]
2022-10-21 17:41:36 DEBUG    j= 185, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:41:36 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:41:36 DEBUG    j= 191, row1 = [159]
2022-10-21 17:41:36 DEBUG    j= 191, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:41:36 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:41:36 DEBUG    j= 197, row1 = [164]
2022-10-21 17:41:36 DEBUG    j= 197, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:41:36 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:41:36 DEBUG    j= 203, row1 = [169]
2022-10-21 17:41:36 DEBUG    j= 203, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:41:36 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:41:36 DEBUG    j= 209, row1 = [174]
2022-10-21 17:41:36 DEBUG    j= 209, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:41:36 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:41:36 DEBUG    j= 215, row1 = [179]
2022-10-21 17:41:36 DEBUG    j= 215, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:41:36 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:41:36 DEBUG    j= 221, row1 = [184]
2022-10-21 17:41:36 DEBUG    j= 221, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:41:36 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:41:36 DEBUG    j= 227, row1 = [189]
2022-10-21 17:41:36 DEBUG    j= 227, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:41:36 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:41:36 DEBUG    j= 233, row1 = [194]
2022-10-21 17:41:36 DEBUG    j= 233, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:41:36 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:41:36 DEBUG    j= 239, row1 = [199]
2022-10-21 17:41:36 DEBUG    j= 239, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:41:36 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:41:36 DEBUG    j= 245, row1 = [204]
2022-10-21 17:41:36 DEBUG    j= 245, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:41:36 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:41:36 DEBUG    j= 251, row1 = [209]
2022-10-21 17:41:36 DEBUG    j= 251, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:41:36 INFO     For loop ended
2022-10-21 17:41:36 INFO     fun_blade_wake done
2022-10-21 17:41:36 DEBUG    Setting input for FSI
2022-10-21 17:41:36 DEBUG    len(blade_obj) = 2
2022-10-21 17:41:36 DEBUG    Inputs to fun_blade_wake
2022-10-21 17:41:36 DEBUG    n_surf + len(blade_obj)= 8
2022-10-21 17:41:36 DEBUG    data["simulationparamter"]["nwakerows"] = 80
2022-10-21 17:41:36 DEBUG    wake = Wake(wakes=[WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=4, nsegments=42, nproperty=1), WakeObj(inf=array([[  5.,  11.,   4.],
       [ 11.,  17.,   9.],
       [ 17.,  23.,  14.],
       [ 23.,  29.,  19.],
       [ 29.,  35.,  24.],
       [ 35.,  41.,  29.],
       [ 41.,  47.,  34.],
       [ 47.,  53.,  39.],
       [ 53.,  59.,  44.],
       [ 59.,  65.,  49.],
       [ 65.,  71.,  54.],
       [ 71.,  77.,  59.],
       [ 77.,  83.,  64.],
       [ 83.,  89.,  69.],
       [ 89.,  95.,  74.],
       [ 95., 101.,  79.],
       [101., 107.,  84.],
       [107., 113.,  89.],
       [113., 119.,  94.],
       [119., 125.,  99.],
       [125., 131., 104.],
       [131., 137., 109.],
       [137., 143., 114.],
       [143., 149., 119.],
       [149., 155., 124.],
       [155., 161., 129.],
       [161., 167., 134.],
       [167., 173., 139.],
       [173., 179., 144.],
       [179., 185., 149.],
       [185., 191., 154.],
       [191., 197., 159.],
       [197., 203., 164.],
       [203., 209., 169.],
       [209., 215., 174.],
       [215., 221., 179.],
       [221., 227., 184.],
       [227., 233., 189.],
       [233., 239., 194.],
       [239., 245., 199.],
       [245., 251., 204.],
       [251., 257., 209.]]), nsurf=6, nsegments=42, nproperty=2)], property=array([[80., 80.],
       [80., 80.]]))
2022-10-21 17:41:36 DEBUG    mesh_aero[n_surf + len(blade_obj)-1] = MeshStruct(mx=5, nn=258, connectivity=array([[  7,   6,   0,   1],
       [  8,   7,   1,   2],
       [  9,   8,   2,   3],
       [ 10,   9,   3,   4],
       [ 11,  10,   4,   5],
       [ 13,  12,   6,   7],
       [ 14,  13,   7,   8],
       [ 15,  14,   8,   9],
       [ 16,  15,   9,  10],
       [ 17,  16,  10,  11],
       [ 19,  18,  12,  13],
       [ 20,  19,  13,  14],
       [ 21,  20,  14,  15],
       [ 22,  21,  15,  16],
       [ 23,  22,  16,  17],
       [ 25,  24,  18,  19],
       [ 26,  25,  19,  20],
       [ 27,  26,  20,  21],
       [ 28,  27,  21,  22],
       [ 29,  28,  22,  23],
       [ 31,  30,  24,  25],
       [ 32,  31,  25,  26],
       [ 33,  32,  26,  27],
       [ 34,  33,  27,  28],
       [ 35,  34,  28,  29],
       [ 37,  36,  30,  31],
       [ 38,  37,  31,  32],
       [ 39,  38,  32,  33],
       [ 40,  39,  33,  34],
       [ 41,  40,  34,  35],
       [ 43,  42,  36,  37],
       [ 44,  43,  37,  38],
       [ 45,  44,  38,  39],
       [ 46,  45,  39,  40],
       [ 47,  46,  40,  41],
       [ 49,  48,  42,  43],
       [ 50,  49,  43,  44],
       [ 51,  50,  44,  45],
       [ 52,  51,  45,  46],
       [ 53,  52,  46,  47],
       [ 55,  54,  48,  49],
       [ 56,  55,  49,  50],
       [ 57,  56,  50,  51],
       [ 58,  57,  51,  52],
       [ 59,  58,  52,  53],
       [ 61,  60,  54,  55],
       [ 62,  61,  55,  56],
       [ 63,  62,  56,  57],
       [ 64,  63,  57,  58],
       [ 65,  64,  58,  59],
       [ 67,  66,  60,  61],
       [ 68,  67,  61,  62],
       [ 69,  68,  62,  63],
       [ 70,  69,  63,  64],
       [ 71,  70,  64,  65],
       [ 73,  72,  66,  67],
       [ 74,  73,  67,  68],
       [ 75,  74,  68,  69],
       [ 76,  75,  69,  70],
       [ 77,  76,  70,  71],
       [ 79,  78,  72,  73],
       [ 80,  79,  73,  74],
       [ 81,  80,  74,  75],
       [ 82,  81,  75,  76],
       [ 83,  82,  76,  77],
       [ 85,  84,  78,  79],
       [ 86,  85,  79,  80],
       [ 87,  86,  80,  81],
       [ 88,  87,  81,  82],
       [ 89,  88,  82,  83],
       [ 91,  90,  84,  85],
       [ 92,  91,  85,  86],
       [ 93,  92,  86,  87],
       [ 94,  93,  87,  88],
       [ 95,  94,  88,  89],
       [ 97,  96,  90,  91],
       [ 98,  97,  91,  92],
       [ 99,  98,  92,  93],
       [100,  99,  93,  94],
       [101, 100,  94,  95],
       [103, 102,  96,  97],
       [104, 103,  97,  98],
       [105, 104,  98,  99],
       [106, 105,  99, 100],
       [107, 106, 100, 101],
       [109, 108, 102, 103],
       [110, 109, 103, 104],
       [111, 110, 104, 105],
       [112, 111, 105, 106],
       [113, 112, 106, 107],
       [115, 114, 108, 109],
       [116, 115, 109, 110],
       [117, 116, 110, 111],
       [118, 117, 111, 112],
       [119, 118, 112, 113],
       [121, 120, 114, 115],
       [122, 121, 115, 116],
       [123, 122, 116, 117],
       [124, 123, 117, 118],
       [125, 124, 118, 119],
       [127, 126, 120, 121],
       [128, 127, 121, 122],
       [129, 128, 122, 123],
       [130, 129, 123, 124],
       [131, 130, 124, 125],
       [133, 132, 126, 127],
       [134, 133, 127, 128],
       [135, 134, 128, 129],
       [136, 135, 129, 130],
       [137, 136, 130, 131],
       [139, 138, 132, 133],
       [140, 139, 133, 134],
       [141, 140, 134, 135],
       [142, 141, 135, 136],
       [143, 142, 136, 137],
       [145, 144, 138, 139],
       [146, 145, 139, 140],
       [147, 146, 140, 141],
       [148, 147, 141, 142],
       [149, 148, 142, 143],
       [151, 150, 144, 145],
       [152, 151, 145, 146],
       [153, 152, 146, 147],
       [154, 153, 147, 148],
       [155, 154, 148, 149],
       [157, 156, 150, 151],
       [158, 157, 151, 152],
       [159, 158, 152, 153],
       [160, 159, 153, 154],
       [161, 160, 154, 155],
       [163, 162, 156, 157],
       [164, 163, 157, 158],
       [165, 164, 158, 159],
       [166, 165, 159, 160],
       [167, 166, 160, 161],
       [169, 168, 162, 163],
       [170, 169, 163, 164],
       [171, 170, 164, 165],
       [172, 171, 165, 166],
       [173, 172, 166, 167],
       [175, 174, 168, 169],
       [176, 175, 169, 170],
       [177, 176, 170, 171],
       [178, 177, 171, 172],
       [179, 178, 172, 173],
       [181, 180, 174, 175],
       [182, 181, 175, 176],
       [183, 182, 176, 177],
       [184, 183, 177, 178],
       [185, 184, 178, 179],
       [187, 186, 180, 181],
       [188, 187, 181, 182],
       [189, 188, 182, 183],
       [190, 189, 183, 184],
       [191, 190, 184, 185],
       [193, 192, 186, 187],
       [194, 193, 187, 188],
       [195, 194, 188, 189],
       [196, 195, 189, 190],
       [197, 196, 190, 191],
       [199, 198, 192, 193],
       [200, 199, 193, 194],
       [201, 200, 194, 195],
       [202, 201, 195, 196],
       [203, 202, 196, 197],
       [205, 204, 198, 199],
       [206, 205, 199, 200],
       [207, 206, 200, 201],
       [208, 207, 201, 202],
       [209, 208, 202, 203],
       [211, 210, 204, 205],
       [212, 211, 205, 206],
       [213, 212, 206, 207],
       [214, 213, 207, 208],
       [215, 214, 208, 209],
       [217, 216, 210, 211],
       [218, 217, 211, 212],
       [219, 218, 212, 213],
       [220, 219, 213, 214],
       [221, 220, 214, 215],
       [223, 222, 216, 217],
       [224, 223, 217, 218],
       [225, 224, 218, 219],
       [226, 225, 219, 220],
       [227, 226, 220, 221],
       [229, 228, 222, 223],
       [230, 229, 223, 224],
       [231, 230, 224, 225],
       [232, 231, 225, 226],
       [233, 232, 226, 227],
       [235, 234, 228, 229],
       [236, 235, 229, 230],
       [237, 236, 230, 231],
       [238, 237, 231, 232],
       [239, 238, 232, 233],
       [241, 240, 234, 235],
       [242, 241, 235, 236],
       [243, 242, 236, 237],
       [244, 243, 237, 238],
       [245, 244, 238, 239],
       [247, 246, 240, 241],
       [248, 247, 241, 242],
       [249, 248, 242, 243],
       [250, 249, 243, 244],
       [251, 250, 244, 245],
       [253, 252, 246, 247],
       [254, 253, 247, 248],
       [255, 254, 248, 249],
       [256, 255, 249, 250],
       [257, 256, 250, 251]]), imat=0, nodes=array([[-15.21048854,  19.57116508, 138.78317379],
       [-14.08168633,  19.67918953, 138.85609238],
       [-12.95110194,  19.77786429, 138.9122438 ],
       [-11.82437374,  19.89676945, 139.00467521],
       [-10.70077397,  20.03208707, 139.12653975],
       [ -9.56151246,  20.08523971, 139.10105448],
       [-15.2737656 ,  21.627632  , 137.66870716],
       [-14.13289657,  21.72868172, 137.72649797],
       [-12.9904677 ,  21.81968616, 137.76645972],
       [-11.85168284,  21.93415788, 137.84807286],
       [-10.71493866,  22.06177148, 137.95301113],
       [ -9.56532063,  22.10647805, 137.91080015],
       [-15.33938565,  23.67747892, 136.54195978],
       [-14.19192607,  23.77176026, 136.58600196],
       [-13.04313751,  23.85534383, 136.61122277],
       [-11.89766017,  23.96558126, 136.68333767],
       [-10.7533859 ,  24.08550298, 136.77249085],
       [ -9.59878349,  24.12228751, 136.71537465],
       [-15.40836163,  25.72125221, 135.40362955],
       [-14.26046104,  25.80914651, 135.43600641],
       [-13.11145425,  25.885773  , 135.44864946],
       [-11.96535929,  25.99205979, 135.51323785],
       [-10.81986185,  26.10443309, 135.58848581],
       [ -9.66625064,  26.1341581 , 135.51898832],
       [-15.47607773,  27.76174955, 134.25892557],
       [-14.33591858,  27.84338687, 134.2810493 ],
       [-13.19487498,  27.91328442, 134.28266575],
       [-12.05627284,  28.01558873, 134.34089099],
       [-10.91785455,  28.12033342, 134.40337914],
       [ -9.77330032,  28.14363266, 134.32359674],
       [-15.5401121 ,  29.80147852, 133.11237481],
       [-14.41640143,  29.875013  , 133.12202478],
       [-13.29213669,  29.93814363, 133.11354117],
       [-12.16963079,  30.03430067, 133.16262154],
       [-11.04716466,  30.13120453, 133.21300362],
       [ -9.92026823,  30.1449187 , 133.11838864],
       [-15.60023705,  31.84025153, 131.96368887],
       [-14.5003164 ,  31.90508842, 131.96064287],
       [-13.40012661,  31.96147016, 131.94288998],
       [-12.30097995,  32.050623  , 131.98213912],
       [-11.20182549,  32.13953078, 132.02096202],
       [-10.09994912,  32.1429266 , 131.91104547],
       [-15.66014559,  33.87757757, 130.81243003],
       [-14.58820959,  33.93405056, 130.79773201],
       [-13.51619886,  33.98397256, 130.77166175],
       [-12.44455737,  34.06626568, 130.80178636],
       [-11.37290227,  34.14736614, 130.82984057],
       [-10.30025111,  34.14113985, 130.70629929],
       [-15.72131757,  35.91334386, 129.65852415],
       [-14.67943561,  35.9620016 , 129.63339353],
       [-13.63759036,  36.00593945, 129.60008217],
       [-12.59549715,  36.08175515, 129.62202295],
       [-11.55342019,  36.15548257, 129.64034423],
       [-10.51203351,  36.14046599, 129.50485039],
       [-15.78660921,  37.94688921, 128.50131457],
       [-14.77414777,  37.98878721, 128.46743219],
       [-13.76176799,  38.02745634, 128.42796874],
       [-12.74859938,  38.0973166 , 128.44241882],
       [-11.73550133,  38.16438723, 128.45204705],
       [-10.72461827,  38.14387366, 128.31028696],
       [-15.85681734,  39.97771653, 127.3401728 ],
       [-14.87155689,  40.01392986, 127.29898141],
       [-13.88637841,  40.04813396, 127.25433851],
       [-12.89995682,  40.11280929, 127.26204001],
       [-11.913672  ,  40.17413214, 127.26398253],
       [-10.93084801,  40.15062288, 127.12019784],
       [-15.93167724,  42.00470016, 126.17299161],
       [-14.97081256,  42.0360105 , 126.12545405],
       [-14.0099938 ,  42.06647441, 126.07647626],
       [-13.04755247,  42.12684589, 126.07838647],
       [-12.0853231 ,  42.18331034, 126.07364886],
       [-11.12757202,  42.1572301 , 125.92846067],
       [-16.00946266,  44.02638992, 124.99694062],
       [-15.07136561,  44.0533589 , 124.94385693],
       [-14.13325031,  44.08060443, 124.89123804],
       [-13.19319208,  44.13729587, 124.88810945],
       [-12.25342778,  44.18953266, 124.87749382],
       [-11.31897925,  44.16120703, 124.73147549],
       [-16.08893411,  46.04163234, 123.80964747],
       [-15.17330681,  46.06459623, 123.75173096],
       [-14.25757488,  46.08892612, 123.6960829 ],
       [-13.33962316,  46.14223264, 123.68855477],
       [-12.42205317,  46.19055633, 123.67275191],
       [-11.51050288,  46.16029951, 123.52645463],
       [-16.17058254,  48.05064552, 122.6114479 ],
       [-15.27736765,  48.06992383, 122.54946042],
       [-14.38395067,  48.09153622, 122.4913131 ],
       [-13.48807213,  48.1415789 , 122.47994086],
       [-12.5926678 ,  48.18614466, 122.4595577 ],
       [-11.70388153,  48.15427374, 122.31341665],
       [-16.25524419,  50.05506278, 121.40534649],
       [-15.38406185,  50.07250078, 121.34244655],
       [-14.51274687,  50.09132035, 121.28180372],
       [-13.63878477,  50.13771295, 121.26620791],
       [-12.76538645,  50.17823325, 121.24101832],
       [-11.8990945 ,  50.14473153, 121.0948964 ],
       [-16.34310307,  52.05575384, 120.19296153],
       [-15.49356826,  52.07152931, 120.12949655],
       [-14.64398463,  52.08776963, 120.06678741],
       [-13.7915986 ,  52.13069832, 120.04747307],
       [-12.93986761,  52.16738879, 120.01801549],
       [-12.09564849,  52.13254088, 119.87223784],
       [-16.43408222,  54.05391235, 118.97644732],
       [-15.60569854,  54.06818928, 118.9126813 ],
       [-14.77736173,  54.08205364, 118.84824686],
       [-13.94609335,  54.12172368, 118.82562037],
       [-13.11557244,  54.15481405, 118.79233411],
       [-12.2928974 ,  54.11883947, 118.64715531],
       [-16.52839276,  56.0500963 , 117.75695121],
       [-15.72055949,  56.06306728, 117.69306892],
       [-14.91287826,  56.0747839 , 117.62716945],
       [-14.10216429,  56.11152005, 117.60150489],
       [-13.29228938,  56.1413341 , 117.56470862],
       [-12.49051826,  56.10429366, 117.42040095],
       [-16.62663628,  58.04233867, 116.53107927],
       [-15.83866519,  58.05429246, 116.46741063],
       [-15.0509685 ,  58.0640956 , 116.40032541],
       [-14.26017463,  58.09817425, 116.37180503],
       [-13.47031001,  58.12496947, 116.33171396],
       [-12.68872059,  58.08690415, 116.18858339],
       [-16.72869431,  60.02827328, 115.29456023],
       [-15.95983141,  60.04004138, 115.23236093],
       [-15.19145054,  60.04818835, 115.16448541],
       [-14.41999834,  60.07940813, 115.1327771 ],
       [-13.64957158,  60.10292452, 115.08899354],
       [-12.88744963,  60.06405229, 114.94741423],
       [-16.83412327,  62.00714984, 114.04602033],
       [-16.08381005,  62.01883269, 113.98542191],
       [-15.33419379,  62.02547343, 113.91701489],
       [-14.58155285,  62.05399602, 113.88249575],
       [-13.8300318 ,  62.0744168 , 113.83542953],
       [-13.08679399,  62.03491322, 113.69555995],
       [-16.94287771,  63.97965295, 112.78665078],
       [-16.21070172,  63.99130141, 112.72774469],
       [-15.47944341,  63.99654688, 112.65901394],
       [-14.74522134,  64.02247155, 112.62201307],
       [-14.01221284,  64.03992871, 112.57201978],
       [-13.28743113,  63.99998483, 112.43395109],
       [-17.05432845,  65.94731551, 111.51908306],
       [-16.3400424 ,  65.95893801, 111.46190248],
       [-15.62689981,  65.96286345, 111.39299174],
       [-14.91086438,  65.98626178, 111.35375725],
       [-14.19613614,  66.00086092, 111.30111299],
       [-13.4895543 ,  65.9606233 , 111.16489877],
       [-17.16777716,  67.91147836, 110.24559873],
       [-16.47127669,  67.92308686, 110.19019474],
       [-15.77615656,  67.9257382 , 110.12120038],
       [-15.07822872,  67.94660899, 110.07984971],
       [-14.38170145,  67.9583914 , 110.02470958],
       [-13.6932105 ,  67.91802535, 109.89044659],
       [-17.28239893,  69.87341891, 108.96835963],
       [-16.60366973,  69.88533115, 108.9152472 ],
       [-15.9266274 ,  69.88670542, 108.84618972],
       [-15.24694174,  69.90459279, 108.80211827],
       [-14.56874259,  69.91319379, 108.7439956 ],
       [-13.89831944,  69.87321744, 108.61237031],
       [-17.39766846,  71.83419238, 107.68912493],
       [-16.73686041,  71.84628368, 107.63811989],
       [-16.0780544 ,  71.84634569, 107.56897119],
       [-15.41677376,  71.8612766 , 107.52224909],
       [-14.7570681 ,  71.86674422, 107.46125361],
       [-14.10487161,  71.82709275, 107.33220556],
       [-17.51349079,  73.79368606, 106.40763458],
       [-16.87072005,  73.80580096, 106.35843728],
       [-16.23027751,  73.80445068, 106.28907765],
       [-15.58753173,  73.81642129, 106.2396643 ],
       [-14.94645337,  73.81874824, 106.17581084],
       [-14.31261634,  73.77919484, 106.04924708],
       [-17.63037221,  75.74984254, 105.12031675],
       [-17.00550439,  75.76173597, 105.07252594],
       [-16.38331147,  75.75879906, 105.00271427],
       [-15.75898346,  75.76769966, 104.95047956],
       [-15.13642518,  75.76678844, 104.88367574],
       [-14.52085989,  75.72710621, 104.75930274],
       [-17.74824924,  77.70200278, 103.82604742],
       [-17.14115274,  77.71346918, 103.77936699],
       [-16.53709896,  77.70883203, 103.70895162],
       [-15.93108003,  77.71459544, 103.65386559],
       [-15.32694176,  77.71040548, 103.58410932],
       [-14.72955497,  77.67048326, 103.46168743],
       [-17.86647686,  79.65039572, 102.52524215],
       [-17.27718487,  79.66144877, 102.47971538],
       [-16.69130563,  79.65521997, 102.40888917],
       [-16.10364643,  79.65800473, 102.35125819],
       [-15.51797542,  79.65072143, 102.27888828],
       [-14.93877601,  79.61066646, 102.15854291],
       [-17.98460791,  81.59515352, 101.21815961],
       [-17.41340745,  81.60524074, 101.17302775],
       [-16.84584615,  81.59761576, 101.10210886],
       [-16.27661558,  81.59811528, 101.04301835],
       [-15.70943977,  81.58861413, 100.96936796],
       [-15.14857111,  81.54841537, 100.85102522],
       [-18.10229627,  83.53676043,  99.90566253],
       [-17.54966699,  83.54521761,  99.86002289],
       [-17.00068467,  83.5364883 ,  99.78947806],
       [-16.4500295 ,  83.53564234,  99.73035712],
       [-15.90143348,  83.52509253,  99.65717419],
       [-15.35915813,  83.48475621,  99.54082724],
       [-18.2199673 ,  85.47544159,  98.58823069],
       [-17.68632425,  85.4827051 ,  98.54278564],
       [-17.15628949,  85.47332394,  98.47333069],
       [-16.62459963,  85.4715776 ,  98.41488896],
       [-16.09494708,  85.46043334,  98.34289074],
       [-15.57154816,  85.42044163,  98.22928016],
       [-18.33778918,  87.41086033,  97.26538474],
       [-17.82367966,  87.41754443,  97.22109955],
       [-17.31307526,  87.40814329,  97.15371971],
       [-16.80086307,  87.40612037,  97.09693326],
       [-16.29062996,  87.39501539,  97.02710709],
       [-15.78647168,  87.35603253,  96.91725478],
       [-18.45569182,  89.34331064,  95.93746515],
       [-17.96174427,  89.3497262 ,  95.89484652],
       [-17.47116281,  89.34061889,  95.83008614],
       [-16.97903735,  89.33863184,  95.77548207],
       [-16.48881245,  89.32788025,  95.7083763 ],
       [-16.00442144,  89.29022543,  95.6028959 ],
       [-18.57348582,  91.2718959 ,  94.60290026],
       [-18.10020896,  91.27818213,  94.56221067],
       [-17.63014192,  91.26953315,  94.50034784],
       [-17.15860256,  91.26773488,  94.44819707],
       [-16.68887553,  91.25750388,  94.38409144],
       [-16.22471157,  91.22138819,  94.28328975],
       [-18.69088403,  93.19681622,  93.26200477],
       [-18.23875718,  93.20309372,  93.22347146],
       [-17.78966881,  93.19504615,  93.16474913],
       [-17.3391867 ,  93.19356942,  93.1152874 ],
       [-16.89042018,  93.18400445,  93.05442653],
       [-16.44691976,  93.14961223,  92.9585754 ],
       [-18.80771145,  95.11817006,  91.91493687],
       [-18.37719413,  95.12454289,  91.87875957],
       [-17.94953076,  95.11722386,  91.82339151],
       [-17.52055829,  95.11618521,  91.77682615],
       [-17.09319722,  95.10741585,  91.71942528],
       [-16.67078243,  95.07491664,  91.62876425],
       [-18.92412268,  97.03612072,  90.56199328],
       [-18.51565753,  97.04269654,  90.52836792],
       [-18.10984841,  97.03623157,  90.47656649],
       [-17.70282098,  97.03574835,  90.43310234],
       [-17.2972932 ,  97.02790203,  90.3793756 ],
       [-16.89636865,  96.99745429,  90.29414731],
       [-19.04052949,  98.95049781,  89.20297448],
       [-18.65450413,  98.95739984,  89.17212595],
       [-18.27092288,  98.95194196,  89.12412025],
       [-17.88622053,  98.9521535 ,  89.08398445],
       [-17.50289818,  98.94538639,  89.03416136],
       [-17.1238118 ,  98.91719791,  88.9546026 ],
       [-19.15585671, 100.86217296,  87.83922929],
       [-18.79300007, 100.86946725,  87.8113205 ],
       [-18.43236399, 100.8651084 ,  87.76730359],
       [-18.07070935, 100.86609478,  87.73067539],
       [-17.71030849, 100.86050156,  87.68495221],
       [-17.35375617, 100.83471187,  87.61131151],
       [-18.83259293, 102.76541898,  86.41675519],
       [-18.73270191, 102.76769175,  86.40944339],
       [-18.63339722, 102.76675688,  86.39769506],
       [-18.53382359, 102.76729334,  86.38798174],
       [-18.43458101, 102.7660187 ,  86.37576346],
       [-18.33635463, 102.75918478,  86.35585607]]), strname='')
2022-10-21 17:41:36 DEBUG    Inputs to fun_blade_wake end
2022-10-21 17:41:36 INFO     inside fun_blade_wake
2022-10-21 17:41:36 DEBUG    wake was not empty, appending new wake
2022-10-21 17:41:36 DEBUG    wake index: w = 2
2022-10-21 17:41:36 DEBUG    wake property.shape: (3, 2)
2022-10-21 17:41:36 DEBUG    (obj.mx+1) = 6
2022-10-21 17:41:36 DEBUG    (obj.mx+1)*(obj.my+1)-1 = 257
2022-10-21 17:41:36 DEBUG    obj.connectivity.shape = (210, 4)
2022-10-21 17:41:36 INFO     For loop started
2022-10-21 17:41:36 DEBUG    j = 5, j+(obj.mx+1) = 11
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[11 10  4  5]]
2022-10-21 17:41:36 DEBUG    j= 5, row1 = [4]
2022-10-21 17:41:36 DEBUG    j= 5, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 5, row1[row2] = 4
2022-10-21 17:41:36 DEBUG    j = 11, j+(obj.mx+1) = 17
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[17 16 10 11]]
2022-10-21 17:41:36 DEBUG    j= 11, row1 = [9]
2022-10-21 17:41:36 DEBUG    j= 11, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 11, row1[row2] = 9
2022-10-21 17:41:36 DEBUG    j = 17, j+(obj.mx+1) = 23
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[23 22 16 17]]
2022-10-21 17:41:36 DEBUG    j= 17, row1 = [14]
2022-10-21 17:41:36 DEBUG    j= 17, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 17, row1[row2] = 14
2022-10-21 17:41:36 DEBUG    j = 23, j+(obj.mx+1) = 29
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[29 28 22 23]]
2022-10-21 17:41:36 DEBUG    j= 23, row1 = [19]
2022-10-21 17:41:36 DEBUG    j= 23, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 23, row1[row2] = 19
2022-10-21 17:41:36 DEBUG    j = 29, j+(obj.mx+1) = 35
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[35 34 28 29]]
2022-10-21 17:41:36 DEBUG    j= 29, row1 = [24]
2022-10-21 17:41:36 DEBUG    j= 29, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 29, row1[row2] = 24
2022-10-21 17:41:36 DEBUG    j = 35, j+(obj.mx+1) = 41
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[41 40 34 35]]
2022-10-21 17:41:36 DEBUG    j= 35, row1 = [29]
2022-10-21 17:41:36 DEBUG    j= 35, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 35, row1[row2] = 29
2022-10-21 17:41:36 DEBUG    j = 41, j+(obj.mx+1) = 47
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[47 46 40 41]]
2022-10-21 17:41:36 DEBUG    j= 41, row1 = [34]
2022-10-21 17:41:36 DEBUG    j= 41, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 41, row1[row2] = 34
2022-10-21 17:41:36 DEBUG    j = 47, j+(obj.mx+1) = 53
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[53 52 46 47]]
2022-10-21 17:41:36 DEBUG    j= 47, row1 = [39]
2022-10-21 17:41:36 DEBUG    j= 47, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 47, row1[row2] = 39
2022-10-21 17:41:36 DEBUG    j = 53, j+(obj.mx+1) = 59
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[59 58 52 53]]
2022-10-21 17:41:36 DEBUG    j= 53, row1 = [44]
2022-10-21 17:41:36 DEBUG    j= 53, row2 = 0
2022-10-21 17:41:36 DEBUG    j= 53, row1[row2] = 44
2022-10-21 17:41:36 DEBUG    j = 59, j+(obj.mx+1) = 65
2022-10-21 17:41:36 DEBUG    obj.connectivity[row1,:] = [[65 64 58 59]]
2022-10-21 17:41:36 DEBUG    j= 59, row1 = [49]
2022-10-21 17:41:36 DEBUG    j= 59, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 59, row1[row2] = 49
2022-10-21 17:41:37 DEBUG    j = 65, j+(obj.mx+1) = 71
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[71 70 64 65]]
2022-10-21 17:41:37 DEBUG    j= 65, row1 = [54]
2022-10-21 17:41:37 DEBUG    j= 65, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 65, row1[row2] = 54
2022-10-21 17:41:37 DEBUG    j = 71, j+(obj.mx+1) = 77
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[77 76 70 71]]
2022-10-21 17:41:37 DEBUG    j= 71, row1 = [59]
2022-10-21 17:41:37 DEBUG    j= 71, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 71, row1[row2] = 59
2022-10-21 17:41:37 DEBUG    j = 77, j+(obj.mx+1) = 83
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[83 82 76 77]]
2022-10-21 17:41:37 DEBUG    j= 77, row1 = [64]
2022-10-21 17:41:37 DEBUG    j= 77, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 77, row1[row2] = 64
2022-10-21 17:41:37 DEBUG    j = 83, j+(obj.mx+1) = 89
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[89 88 82 83]]
2022-10-21 17:41:37 DEBUG    j= 83, row1 = [69]
2022-10-21 17:41:37 DEBUG    j= 83, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 83, row1[row2] = 69
2022-10-21 17:41:37 DEBUG    j = 89, j+(obj.mx+1) = 95
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[95 94 88 89]]
2022-10-21 17:41:37 DEBUG    j= 89, row1 = [74]
2022-10-21 17:41:37 DEBUG    j= 89, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 89, row1[row2] = 74
2022-10-21 17:41:37 DEBUG    j = 95, j+(obj.mx+1) = 101
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[101 100  94  95]]
2022-10-21 17:41:37 DEBUG    j= 95, row1 = [79]
2022-10-21 17:41:37 DEBUG    j= 95, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 95, row1[row2] = 79
2022-10-21 17:41:37 DEBUG    j = 101, j+(obj.mx+1) = 107
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[107 106 100 101]]
2022-10-21 17:41:37 DEBUG    j= 101, row1 = [84]
2022-10-21 17:41:37 DEBUG    j= 101, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 101, row1[row2] = 84
2022-10-21 17:41:37 DEBUG    j = 107, j+(obj.mx+1) = 113
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[113 112 106 107]]
2022-10-21 17:41:37 DEBUG    j= 107, row1 = [89]
2022-10-21 17:41:37 DEBUG    j= 107, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 107, row1[row2] = 89
2022-10-21 17:41:37 DEBUG    j = 113, j+(obj.mx+1) = 119
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[119 118 112 113]]
2022-10-21 17:41:37 DEBUG    j= 113, row1 = [94]
2022-10-21 17:41:37 DEBUG    j= 113, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 113, row1[row2] = 94
2022-10-21 17:41:37 DEBUG    j = 119, j+(obj.mx+1) = 125
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[125 124 118 119]]
2022-10-21 17:41:37 DEBUG    j= 119, row1 = [99]
2022-10-21 17:41:37 DEBUG    j= 119, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 119, row1[row2] = 99
2022-10-21 17:41:37 DEBUG    j = 125, j+(obj.mx+1) = 131
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[131 130 124 125]]
2022-10-21 17:41:37 DEBUG    j= 125, row1 = [104]
2022-10-21 17:41:37 DEBUG    j= 125, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 125, row1[row2] = 104
2022-10-21 17:41:37 DEBUG    j = 131, j+(obj.mx+1) = 137
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[137 136 130 131]]
2022-10-21 17:41:37 DEBUG    j= 131, row1 = [109]
2022-10-21 17:41:37 DEBUG    j= 131, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 131, row1[row2] = 109
2022-10-21 17:41:37 DEBUG    j = 137, j+(obj.mx+1) = 143
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[143 142 136 137]]
2022-10-21 17:41:37 DEBUG    j= 137, row1 = [114]
2022-10-21 17:41:37 DEBUG    j= 137, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 137, row1[row2] = 114
2022-10-21 17:41:37 DEBUG    j = 143, j+(obj.mx+1) = 149
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[149 148 142 143]]
2022-10-21 17:41:37 DEBUG    j= 143, row1 = [119]
2022-10-21 17:41:37 DEBUG    j= 143, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 143, row1[row2] = 119
2022-10-21 17:41:37 DEBUG    j = 149, j+(obj.mx+1) = 155
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[155 154 148 149]]
2022-10-21 17:41:37 DEBUG    j= 149, row1 = [124]
2022-10-21 17:41:37 DEBUG    j= 149, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 149, row1[row2] = 124
2022-10-21 17:41:37 DEBUG    j = 155, j+(obj.mx+1) = 161
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[161 160 154 155]]
2022-10-21 17:41:37 DEBUG    j= 155, row1 = [129]
2022-10-21 17:41:37 DEBUG    j= 155, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 155, row1[row2] = 129
2022-10-21 17:41:37 DEBUG    j = 161, j+(obj.mx+1) = 167
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[167 166 160 161]]
2022-10-21 17:41:37 DEBUG    j= 161, row1 = [134]
2022-10-21 17:41:37 DEBUG    j= 161, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 161, row1[row2] = 134
2022-10-21 17:41:37 DEBUG    j = 167, j+(obj.mx+1) = 173
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[173 172 166 167]]
2022-10-21 17:41:37 DEBUG    j= 167, row1 = [139]
2022-10-21 17:41:37 DEBUG    j= 167, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 167, row1[row2] = 139
2022-10-21 17:41:37 DEBUG    j = 173, j+(obj.mx+1) = 179
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[179 178 172 173]]
2022-10-21 17:41:37 DEBUG    j= 173, row1 = [144]
2022-10-21 17:41:37 DEBUG    j= 173, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 173, row1[row2] = 144
2022-10-21 17:41:37 DEBUG    j = 179, j+(obj.mx+1) = 185
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[185 184 178 179]]
2022-10-21 17:41:37 DEBUG    j= 179, row1 = [149]
2022-10-21 17:41:37 DEBUG    j= 179, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 179, row1[row2] = 149
2022-10-21 17:41:37 DEBUG    j = 185, j+(obj.mx+1) = 191
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[191 190 184 185]]
2022-10-21 17:41:37 DEBUG    j= 185, row1 = [154]
2022-10-21 17:41:37 DEBUG    j= 185, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 185, row1[row2] = 154
2022-10-21 17:41:37 DEBUG    j = 191, j+(obj.mx+1) = 197
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[197 196 190 191]]
2022-10-21 17:41:37 DEBUG    j= 191, row1 = [159]
2022-10-21 17:41:37 DEBUG    j= 191, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 191, row1[row2] = 159
2022-10-21 17:41:37 DEBUG    j = 197, j+(obj.mx+1) = 203
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[203 202 196 197]]
2022-10-21 17:41:37 DEBUG    j= 197, row1 = [164]
2022-10-21 17:41:37 DEBUG    j= 197, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 197, row1[row2] = 164
2022-10-21 17:41:37 DEBUG    j = 203, j+(obj.mx+1) = 209
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[209 208 202 203]]
2022-10-21 17:41:37 DEBUG    j= 203, row1 = [169]
2022-10-21 17:41:37 DEBUG    j= 203, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 203, row1[row2] = 169
2022-10-21 17:41:37 DEBUG    j = 209, j+(obj.mx+1) = 215
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[215 214 208 209]]
2022-10-21 17:41:37 DEBUG    j= 209, row1 = [174]
2022-10-21 17:41:37 DEBUG    j= 209, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 209, row1[row2] = 174
2022-10-21 17:41:37 DEBUG    j = 215, j+(obj.mx+1) = 221
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[221 220 214 215]]
2022-10-21 17:41:37 DEBUG    j= 215, row1 = [179]
2022-10-21 17:41:37 DEBUG    j= 215, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 215, row1[row2] = 179
2022-10-21 17:41:37 DEBUG    j = 221, j+(obj.mx+1) = 227
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[227 226 220 221]]
2022-10-21 17:41:37 DEBUG    j= 221, row1 = [184]
2022-10-21 17:41:37 DEBUG    j= 221, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 221, row1[row2] = 184
2022-10-21 17:41:37 DEBUG    j = 227, j+(obj.mx+1) = 233
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[233 232 226 227]]
2022-10-21 17:41:37 DEBUG    j= 227, row1 = [189]
2022-10-21 17:41:37 DEBUG    j= 227, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 227, row1[row2] = 189
2022-10-21 17:41:37 DEBUG    j = 233, j+(obj.mx+1) = 239
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[239 238 232 233]]
2022-10-21 17:41:37 DEBUG    j= 233, row1 = [194]
2022-10-21 17:41:37 DEBUG    j= 233, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 233, row1[row2] = 194
2022-10-21 17:41:37 DEBUG    j = 239, j+(obj.mx+1) = 245
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[245 244 238 239]]
2022-10-21 17:41:37 DEBUG    j= 239, row1 = [199]
2022-10-21 17:41:37 DEBUG    j= 239, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 239, row1[row2] = 199
2022-10-21 17:41:37 DEBUG    j = 245, j+(obj.mx+1) = 251
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[251 250 244 245]]
2022-10-21 17:41:37 DEBUG    j= 245, row1 = [204]
2022-10-21 17:41:37 DEBUG    j= 245, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 245, row1[row2] = 204
2022-10-21 17:41:37 DEBUG    j = 251, j+(obj.mx+1) = 257
2022-10-21 17:41:37 DEBUG    obj.connectivity[row1,:] = [[257 256 250 251]]
2022-10-21 17:41:37 DEBUG    j= 251, row1 = [209]
2022-10-21 17:41:37 DEBUG    j= 251, row2 = 0
2022-10-21 17:41:37 DEBUG    j= 251, row1[row2] = 209
2022-10-21 17:41:37 INFO     For loop ended
2022-10-21 17:41:37 INFO     fun_blade_wake done
2022-10-21 17:41:37 DEBUG    Setting input for FSI
2022-10-21 17:41:37 DEBUG    len(blade_obj) = 2
2022-10-21 17:41:37 DEBUG    len(simu_fsi.data) = 8
2022-10-21 17:41:37 DEBUG    simu_fsi.data = [['beam', 1, 1, 5.3], ['beam', 2, 2, 5.3], ['beam', 3, 3, 5.3], ['beam', 3, 4, 5.3], ['beam', 4, 5, 5.3], ['beam', 4, 6, 5.3], ['beam', 5, 7, 5.3], ['beam', 5, 8, 5.3]]
2022-10-21 17:41:37 INFO     Additional masses sections
2022-10-21 17:41:37 INFO     **************************************************
2022-10-21 17:41:37 DEBUG    len(simu_struct.pointmass12) = 2
2022-10-21 17:41:37 DEBUG    simu_struct.pointmass12 = [SimulationSettings.PointMass(mass=100000.0, node=22), SimulationSettings.PointMass(mass=28280.0, node=73)]
2022-10-21 17:41:38 INFO     Additional masses sections end
2022-10-21 17:41:38 INFO     **************************************************
2022-10-21 17:41:38 INFO     Constraints sections
2022-10-21 17:41:38 INFO     **************************************************
2022-10-21 17:41:38 DEBUG    len(simu_struct.constraints) = 3
2022-10-21 17:41:38 DEBUG    simu_struct.constraints = [SimulationSettings.Constraint(type='rigidsupport', nodes=array([2, 0]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([22, 23]), phi1=array([0.0e+000, 0.0e+000, 1.6e-322])), SimulationSettings.Constraint(type='rigidconnection', nodes=array([73,  0]), phi1=array([0, 0, 0]))]
2022-10-21 17:41:38 DEBUG    remo_internal_const = [2, 22, 73]
2022-10-21 17:45:38 INFO     Additional masses sections end
2022-10-21 17:45:38 INFO     **************************************************
2022-10-21 17:45:38 INFO     Constraints sections
2022-10-21 17:45:38 INFO     **************************************************
2022-10-21 17:45:46 DEBUG    len(simu_struct.constraints) = 3
2022-10-21 17:45:46 DEBUG    simu_struct.constraints = [SimulationSettings.Constraint(type='rigidsupport', nodes=array([2, 0]), phi1=[]), SimulationSettings.Constraint(type='rigidconnection', nodes=array([22, 23]), phi1=[]), SimulationSettings.Constraint(type='rigidconnection', nodes=array([73,  0]), phi1=array([0, 0, 0]))]
2022-10-21 17:45:46 DEBUG    remo_internal_const = [2, 22, 73]
